!function(I){var g={};function C(l){if(g[l])return g[l].exports;var c=g[l]={i:l,l:!1,exports:{}};return I[l].call(c.exports,c,c.exports,C),c.l=!0,c.exports}C.m=I,C.c=g,C.d=function(I,g,l){C.o(I,g)||Object.defineProperty(I,g,{enumerable:!0,get:l})},C.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},C.t=function(I,g){if(1&g&&(I=C(I)),8&g)return I;if(4&g&&"object"==typeof I&&I&&I.__esModule)return I;var l=Object.create(null);if(C.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:I}),2&g&&"string"!=typeof I)for(var c in I)C.d(l,c,function(g){return I[g]}.bind(null,c));return l},C.n=function(I){var g=I&&I.__esModule?function(){return I.default}:function(){return I};return C.d(g,"a",g),g},C.o=function(I,g){return Object.prototype.hasOwnProperty.call(I,g)},C.p="",C(C.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/model/Monster.js\nclass Monster{\r\n    // MonsterData consists of element, name, arms, type_arms, legs, eyes, skintype, ability to fly, ability to swim, colour ,map, x coordinate, y coordinate\r\n    constructor(name, element, arms, typearms, legs, eyes, furtype, fly, swim, colour, map, x, y){\r\n        this.name = name;\r\n        this.element = element;\r\n        this.arms = arms;\r\n        this.typearms = typearms;\r\n        this.legs = legs;\r\n        this.eyes = eyes;\r\n        this.furtype = furtype;\r\n        this.fly = fly;\r\n        this.swim = swim;\r\n        this.colour = colour;\r\n        this.map = map;\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n\r\nclass FireMonster extends Monster{\r\n    constructor(){\r\n        super();\r\n        this.arms = [1,2,3,4,5,6];\r\n        this.typearms = ["Tentacles","Claws","Claw-wings"];\r\n        this.legs = [2];\r\n        this.eyes = [1,2,3,4];\r\n        this.furtype = ["Scales","Feathers"];\r\n        this.fly = "no";\r\n        this.swim = "no";\r\n        this.color = ["Red","Orange","Brown"];\r\n    }\r\n}\r\n\r\nclass WaterMonster extends Monster{\r\n    constructor(){\r\n        super();\r\n        this.arms = [1,2,3,4,5,6,7,8];\r\n        this.typearms = ["Tentacles","Fins"];\r\n        this.legs = [1,2,3,4];\r\n        this.eyes = [1,2,3,4,5,6,7,8];\r\n        this.furtype = ["Scales","Slime"];\r\n        this.fly = "no";\r\n        this.swim = "yes";\r\n        this.color = ["Blue","Red","Green"];\r\n    }\r\n}\r\n\r\nclass EarthMonster extends Monster{\r\n    constructor(){\r\n        super();\r\n        this.arms = [2];\r\n        this.typearms = ["Claws"];\r\n        this.legs = [2,4,6];\r\n        this.eyes = [2];\r\n        this.furtype = ["Hair","Scales","Slime"];\r\n        this.fly = "no";\r\n        this.swim = "no";\r\n        this.color = ["Purple","Orange","White"];\r\n    }\r\n}\r\n\r\nclass WindMonster extends Monster{\r\n    constructor(){\r\n        super();\r\n        this.arms = [2];\r\n        this.typearms = ["Wings","Claw-wings"];\r\n        this.legs = [0,2];\r\n        this.eyes = [2];\r\n        this.furtype = ["Feathers","Hair","Scales"];\r\n        this.fly = "yes";\r\n        this.swim = "no";\r\n        this.color = ["White","Blue","Purple"];\r\n    }\r\n}\n// CONCATENATED MODULE: ./src/model/MonsterService.js\n\r\nclass MonsterService_MonsterService\r\n{\r\n    constructor(){\r\n        this.monsters = []\r\n    }\r\n\r\n    getMonsters()\r\n    {\r\n        return this.monsters;\r\n    }\r\n\r\n    saveMonster(name, element, arms, typearms, legs, eyes, furtype, fly, swim, colour, map, x, y){\r\n        let newMonster = new Monster(name, element, arms, typearms, legs, eyes, furtype, fly, swim, colour, map, x, y);\r\n        this.monsters.push(newMonster);\r\n    }\r\n\r\n    getLastMonster() {\r\n        return this.monsters[this.monsters.length -1];\r\n    }\r\n    \r\n    getAllMonsters(grid, map) {\r\n        let monsters = [];\r\n        let columns = [];\r\n        let columns3 = [];\r\n\r\n\r\n        let columns2 = grid[map].grid;\r\n\r\n        columns2.forEach(element => {\r\n            for (let i = 0; i < 10; i++) {\r\n                columns.push(element);\r\n            }\r\n        });\r\n\r\n        columns.forEach(element => {\r\n            columns3.push(element);\r\n        });\r\n\r\n        return monsters;\r\n    }\r\n    \r\n}\r\n\n// CONCATENATED MODULE: ./src/view/CreateMonsterView.js\nclass CreateMonsterView {\r\n\r\n  constructor(controller) {\r\n    this.controller = controller;\r\n\r\n    this.template = document.getElementById("create_monster");\r\n\r\n    this.radio_fire = document.getElementById("element_fire");\r\n    this.radio_water = document.getElementById("element_water");\r\n    this.radio_earth = document.getElementById("element_earth");\r\n    this.radio_wind = document.getElementById("element_wind");\r\n    this.remove = document.getElementById("remove");\r\n\r\n    this.setElementEvents(controller);\r\n  }\r\n\r\n  updateForm(controller) {\r\n    this.monsterform = document.getElementById("monster_form");\r\n\r\n    let created = document.getElementById("created");\r\n\r\n    this.monsterform.addEventListener("submit", function(e) {\r\n      e.preventDefault();\r\n\r\n      if (created.hasChildNodes()) {\r\n        while (created.firstChild) {\r\n          created.removeChild(created.firstChild);\r\n        }\r\n      }\r\n      this.img = document.createElement("img");\r\n      this.img.setAttribute("class", "created");\r\n\r\n      let src = "";\r\n\r\n      switch (this.element.value) {\r\n        case "fire":\r\n          src = "../src/Resources/orangemonster.png";\r\n          break;\r\n        case "water":\r\n          src = "../src/Resources/bluemonster.png";\r\n          break;\r\n        case "earth":\r\n          src = "../src/Resources/brownmonster.png";\r\n          break;\r\n        case "wind":\r\n          src = "../src/Resources/whitemonster.png";\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n      this.img.src = src;\r\n      this.img.draggable = true;\r\n      this.img.setAttribute(\'id\', \'-1x-1\');\r\n      this.img.addEventListener("dragstart", (e) => {\r\n        e.dataTransfer.setData("Text", e.target.id);\r\n      });\r\n      created.appendChild(this.img);\r\n\r\n      let name = document.getElementById("name").value;\r\n      let element = document.getElementById("element").value;\r\n      let arms = document.getElementById("arms").value;\r\n      let typearms = document.getElementById("type_arms").value;\r\n      let legs = document.getElementById("legs").value;\r\n      let eyes = document.getElementById("eyes").value;\r\n      let furtype = document.getElementById("furtype").value;\r\n      let fly = document.getElementById("fly").value;\r\n      let swim = document.getElementById("swim").value;\r\n      let colour = document.getElementById("colour").value;\r\n      \r\n      controller.addMonster(name, element, arms, typearms, legs, eyes, furtype, fly, swim, colour, null, null, null);\r\n\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    let form = document.getElementById("monster_form");\r\n    while (form.hasChildNodes()) {\r\n      form.removeChild(form.firstChild);\r\n    }\r\n  }\r\n\r\n  setElementEvents(controller) {\r\n    let ownclass = this;\r\n    this.radio_fire.addEventListener("click", function() {\r\n          if (this.checked) {\r\n            ownclass.clearForm();\r\n            ownclass.generalFrom();\r\n\r\n            let element = document.getElementById("element");\r\n            element.setAttribute("value", "fire");\r\n\r\n            let arms = document.getElementById("arms");\r\n\r\n            let amountarms = controller.getArms("fire");\r\n\r\n            amountarms.forEach(element => {\r\n              let option = document.createElement("option");\r\n              option.setAttribute("value", `${element}`);\r\n              option.innerHTML = element;\r\n              arms.appendChild(option);\r\n            });\r\n            \r\n\r\n            let typearmsselect = document.getElementById("type_arms");\r\n\r\n            let armtypes = controller.getTypeArms("fire");\r\n\r\n            armtypes.forEach(element => {\r\n              let option = document.createElement("option");\r\n              option.setAttribute("value", `${element}`);\r\n              option.innerHTML = element;\r\n              typearmsselect.appendChild(option);\r\n            });\r\n\r\n            let legslabel = document.getElementById("legslabel");\r\n            legslabel.innerHTML = "Legs: ";\r\n\r\n            let legsselect = document.getElementById("legs");\r\n            let legsoptions = controller.getLegs("fire");\r\n\r\n            legsoptions.forEach(element => {\r\n              let option = document.createElement("option");\r\n              option.setAttribute("value", `${element}`);\r\n              option.innerHTML = element;\r\n              legsselect.appendChild(option);\r\n            });\r\n\r\n            let eyesselect = document.getElementById("eyes");\r\n\r\n            let eyes = controller.getEyes("fire");\r\n\r\n            eyes.forEach(element => {\r\n              let option = document.createElement("option");\r\n              option.setAttribute("value", `${element}`);\r\n              option.innerHTML = element;\r\n              eyesselect.appendChild(option);\r\n            });\r\n\r\n            let furtypeselect = document.getElementById("furtype");\r\n\r\n            let furtypes = controller.getFurType("fire");\r\n\r\n            furtypes.forEach(element => {\r\n              let option = document.createElement("option");\r\n              option.setAttribute("value", `${element}`);\r\n              option.innerHTML = element;\r\n              furtypeselect.appendChild(option);\r\n            });\r\n                \r\n            furtypeselect.addEventListener("change", () =>{ \r\n              if(furtype.value == "Feathers"){\r\n                document.getElementById("flylabel").innerHTML = "Can fly: yes";\r\n              }\r\n              else{\r\n                document.getElementById("flylabel").innerHTML = "Can fly: no";\r\n              }\r\n            });\r\n\r\n            let flylabel = document.getElementById("flylabel");\r\n            let fly = document.getElementById("fly");\r\n\r\n            flylabel.innerHTML = "Can fly: " + controller.getFly("fire");\r\n            fly.setAttribute("value", controller.getFly("fire"));\r\n\r\n            let swimlabel = document.getElementById("swimlabel");\r\n            let swim = document.getElementById("swim");\r\n\r\n            swimlabel.innerHTML = "Can swim: " + controller.getSwim("fire");\r\n            swim.setAttribute("value", controller.getSwim("fire"));\r\n\r\n            let colourselect = document.getElementById("colour");\r\n\r\n            let colours = controller.getColor("fire");\r\n\r\n            colours.forEach(element => {\r\n              let option = document.createElement("option");\r\n              option.setAttribute("value", `${element}`);\r\n              option.innerHTML = element;\r\n              colourselect.appendChild(option);\r\n            });\r\n            \r\n          }\r\n    });\r\n\r\n    this.radio_fire.addEventListener("click", this.updateForm(this.controller));\r\n\r\n    this.radio_water.addEventListener("click", function() {\r\n      if (this.checked) {\r\n        ownclass.clearForm();\r\n        ownclass.generalFrom();\r\n\r\n        let element = document.getElementById("element");\r\n        element.setAttribute("value", "water");\r\n\r\n        let arms = document.getElementById("arms");\r\n\r\n        let amountarms = controller.getArms("water");\r\n\r\n        amountarms.forEach(element => {\r\n          let option = document.createElement("option");\r\n          option.setAttribute("value", `${element}`);\r\n          option.innerHTML = element;\r\n          arms.appendChild(option);\r\n        });\r\n        \r\n\r\n        let typearmsselect = document.getElementById("type_arms");\r\n\r\n        let armtypes = controller.getTypeArms("water");\r\n\r\n        armtypes.forEach(element => {\r\n          let option = document.createElement("option");\r\n          option.setAttribute("value", `${element}`);\r\n          option.innerHTML = element;\r\n          typearmsselect.appendChild(option);\r\n        });\r\n\r\n        let legslabel = document.getElementById("legslabel");\r\n        legslabel.innerHTML = "Legs: ";\r\n\r\n        let legsselect = document.getElementById("legs");\r\n        let legsoptions = controller.getLegs("water");\r\n\r\n        legsoptions.forEach(element => {\r\n          let option = document.createElement("option");\r\n          option.setAttribute("value", `${element}`);\r\n          option.innerHTML = element;\r\n          legsselect.appendChild(option);\r\n        });\r\n\r\n        let eyesselect = document.getElementById("eyes");\r\n\r\n        let eyes = controller.getEyes("water");\r\n\r\n        eyes.forEach(element => {\r\n          let option = document.createElement("option");\r\n          option.setAttribute("value", `${element}`);\r\n          option.innerHTML = element;\r\n          eyesselect.appendChild(option);\r\n        });\r\n\r\n        let furtypeselect = document.getElementById("furtype");\r\n\r\n        let furtypes = controller.getFurType("water");\r\n\r\n        furtypes.forEach(element => {\r\n          let option = document.createElement("option");\r\n          option.setAttribute("value", `${element}`);\r\n          option.innerHTML = element;\r\n          furtypeselect.appendChild(option);\r\n        });\r\n\r\n        let flylabel = document.getElementById("flylabel");\r\n        let fly = document.getElementById("fly");\r\n\r\n        flylabel.innerHTML = "Can fly: " + controller.getFly("water");\r\n        fly.setAttribute("value", controller.getFly("water"));\r\n\r\n        let swimlabel = document.getElementById("swimlabel");\r\n        let swim = document.getElementById("swim");\r\n\r\n        swimlabel.innerHTML = "Can swim: " + controller.getSwim("water");\r\n        swim.setAttribute("value", controller.getSwim("water"));\r\n\r\n        let colourselect = document.getElementById("colour");\r\n\r\n        let colours = controller.getColor("water");\r\n\r\n        colours.forEach(element => {\r\n          let option = document.createElement("option");\r\n          option.setAttribute("value", `${element}`);\r\n          option.innerHTML = element;\r\n          colourselect.appendChild(option);\r\n        });\r\n        \r\n      }\r\n});\r\n\r\nthis.radio_water.addEventListener("click", this.updateForm(this.controller));\r\n\r\n\r\nthis.radio_earth.addEventListener("click", function() {\r\n  if (this.checked) {\r\n    ownclass.clearForm();\r\n    ownclass.generalFrom();\r\n\r\n    let element = document.getElementById("element");\r\n    element.setAttribute("value", "earth");\r\n\r\n    let arms = document.getElementById("arms");\r\n\r\n    let amountarms = controller.getArms("earth");\r\n\r\n    amountarms.forEach(element => {\r\n      let option = document.createElement("option");\r\n      option.setAttribute("value", `${element}`);\r\n      option.innerHTML = element;\r\n      arms.appendChild(option);\r\n    });\r\n    \r\n    let typearmsselect = document.getElementById("type_arms");\r\n\r\n    let armtypes = controller.getTypeArms("earth");\r\n\r\n    armtypes.forEach(element => {\r\n      let option = document.createElement("option");\r\n      option.setAttribute("value", `${element}`);\r\n      option.innerHTML = element;\r\n      typearmsselect.appendChild(option);\r\n    });\r\n\r\n    let legslabel = document.getElementById("legslabel");\r\n    legslabel.innerHTML = "Legs: ";\r\n\r\n    let legsselect = document.getElementById("legs");\r\n    let legsoptions = controller.getLegs("earth");\r\n\r\n    legsoptions.forEach(element => {\r\n      let option = document.createElement("option");\r\n      option.setAttribute("value", `${element}`);\r\n      option.innerHTML = element;\r\n      legsselect.appendChild(option);\r\n    });\r\n\r\n    let eyesselect = document.getElementById("eyes");\r\n\r\n    let eyes = controller.getEyes("earth");\r\n\r\n    eyes.forEach(element => {\r\n      let option = document.createElement("option");\r\n      option.setAttribute("value", `${element}`);\r\n      option.innerHTML = element;\r\n      eyesselect.appendChild(option);\r\n    });\r\n\r\n    let furtypeselect = document.getElementById("furtype");\r\n\r\n    let furtypes = controller.getFurType("earth");\r\n\r\n    furtypes.forEach(element => {\r\n      let option = document.createElement("option");\r\n      option.setAttribute("value", `${element}`);\r\n      option.innerHTML = element;\r\n      furtypeselect.appendChild(option);\r\n    });\r\n\r\n    let flylabel = document.getElementById("flylabel");\r\n    let fly = document.getElementById("fly");\r\n\r\n    flylabel.innerHTML = "Can fly: " + controller.getFly("earth");\r\n    fly.setAttribute("value", controller.getFly("earth"));\r\n\r\n    let swimlabel = document.getElementById("swimlabel");\r\n    let swim = document.getElementById("swim");\r\n\r\n    swimlabel.innerHTML = "Can swim: " + controller.getSwim("earth");\r\n    swim.setAttribute("value", controller.getSwim("earth"));\r\n\r\n    let colourselect = document.getElementById("colour");\r\n\r\n    let colours = controller.getColor("earth");\r\n\r\n    colours.forEach(element => {\r\n      let option = document.createElement("option");\r\n      option.setAttribute("value", `${element}`);\r\n      option.innerHTML = element;\r\n      colourselect.appendChild(option);\r\n    });\r\n    \r\n  }\r\n});\r\n\r\nthis.radio_earth.addEventListener("click", this.updateForm(this.controller));\r\n\r\nthis.radio_wind.addEventListener("click", function() {\r\n        if (this.checked) {\r\n          ownclass.clearForm();\r\n          ownclass.generalFrom();\r\n\r\n          let element = document.getElementById("element");\r\n          element.setAttribute("value", "wind");\r\n\r\n          let arms = document.getElementById("arms");\r\n\r\n          let amountarms = controller.getArms("wind");\r\n\r\n          amountarms.forEach(element => {\r\n            let option = document.createElement("option");\r\n            option.setAttribute("value", `${element}`);\r\n            option.innerHTML = element;\r\n            arms.appendChild(option);\r\n          });\r\n          \r\n\r\n          let typearmsselect = document.getElementById("type_arms");\r\n\r\n          let armtypes = controller.getTypeArms("wind");\r\n\r\n          armtypes.forEach(element => {\r\n            let option = document.createElement("option");\r\n            option.setAttribute("value", `${element}`);\r\n            option.innerHTML = element;\r\n            typearmsselect.appendChild(option);\r\n          });\r\n\r\n          let legslabel = document.getElementById("legslabel");\r\n          legslabel.innerHTML = "Legs: ";\r\n\r\n          let legsselect = document.getElementById("legs");\r\n          let legsoptions = controller.getLegs("wind");\r\n\r\n          legsoptions.forEach(element => {\r\n            let option = document.createElement("option");\r\n            option.setAttribute("value", `${element}`);\r\n            option.innerHTML = element;\r\n            legsselect.appendChild(option);\r\n          });\r\n\r\n          let eyesselect = document.getElementById("eyes");\r\n\r\n          let eyes = controller.getEyes("wind");\r\n\r\n          eyes.forEach(element => {\r\n            let option = document.createElement("option");\r\n            option.setAttribute("value", `${element}`);\r\n            option.innerHTML = element;\r\n            eyesselect.appendChild(option);\r\n          });\r\n\r\n          let furtypeselect = document.getElementById("furtype");\r\n\r\n          let furtypes = controller.getFurType("wind");\r\n\r\n          furtypes.forEach(element => {\r\n            let option = document.createElement("option");\r\n            option.setAttribute("value", `${element}`);\r\n            option.innerHTML = element;\r\n            furtypeselect.appendChild(option);\r\n          });\r\n          \r\n                          \r\n          furtypeselect.addEventListener("change", () => { \r\n            if(furtype.value != "Feathers"){\r\n              document.getElementById("swimlabel").innerHTML = "Can swim: yes";\r\n            }\r\n            else{\r\n              document.getElementById("swimlabel").innerHTML = "Can swim: no";\r\n            }\r\n          });\r\n\r\n          let flylabel = document.getElementById("flylabel");\r\n          let fly = document.getElementById("fly");\r\n\r\n          flylabel.innerHTML = "Can fly: " + controller.getFly("wind");\r\n          fly.setAttribute("value", controller.getFly("wind"));\r\n\r\n          let swimlabel = document.getElementById("swimlabel");\r\n          let swim = document.getElementById("swim");\r\n\r\n          swimlabel.innerHTML = "Can swim: " + controller.getSwim("wind");\r\n          swim.setAttribute("value", controller.getSwim("wind"));\r\n\r\n          let colourselect = document.getElementById("colour");\r\n\r\n          let colours = controller.getColor("wind");\r\n\r\n          colours.forEach(element => {\r\n            let option = document.createElement("option");\r\n            option.setAttribute("value", `${element}`);\r\n            option.innerHTML = element;\r\n            colourselect.appendChild(option);\r\n          });\r\n          \r\n        }\r\n  });\r\nthis.radio_wind.addEventListener("click", this.updateForm(this.controller));\r\n\r\n  }\r\n\r\n  generalFrom(){\r\n    let form = document.getElementById("monster_form");\r\n            // TODO: Remove previous form\r\n\r\n            let fieldset = document.createElement("fieldset");\r\n            let namelabel = document.createElement("label");\r\n            namelabel.innerHTML = "Name:";\r\n            let nameinput = document.createElement("input");\r\n            nameinput.setAttribute("id", "name");\r\n            nameinput.setAttribute("name", "name");\r\n\r\n            fieldset.appendChild(namelabel);\r\n            fieldset.appendChild(nameinput);\r\n\r\n            form.appendChild(fieldset);\r\n\r\n            let element = document.createElement("input");\r\n            element.setAttribute("id", "element");\r\n            // Value will be set by element\r\n            element.hidden = true;\r\n\r\n            form.appendChild(element);\r\n\r\n            let fieldset2 = document.createElement("fieldset");\r\n            let armslabel = document.createElement("label");\r\n            armslabel.innerHTML = "Arms:";\r\n            let select = document.createElement("select");\r\n            select.setAttribute("id", "arms");\r\n            // Amount of options swil be set by element\r\n\r\n            fieldset2.appendChild(armslabel);\r\n            fieldset2.appendChild(select);\r\n\r\n            form.appendChild(fieldset2);\r\n\r\n            let fieldset3 = document.createElement("fieldset");\r\n            let typearmslabel = document.createElement("label");\r\n            typearmslabel.innerHTML = "Type arms:"\r\n\r\n            let typearmsselect = document.createElement("select");\r\n            typearmsselect.setAttribute("id", "type_arms");\r\n\r\n            fieldset3.appendChild(typearmsselect);\r\n\r\n            form.appendChild(typearmslabel);\r\n            form.appendChild(fieldset3);\r\n\r\n            let fieldset4 = document.createElement("fieldset");\r\n            let legslabel = document.createElement("label");\r\n            legslabel.setAttribute("id", "legslabel");\r\n            legslabel.innerHTML = "Legs: ";\r\n\r\n            let legsselect = document.createElement("select");\r\n            legsselect.setAttribute("id", "legs");\r\n\r\n            fieldset4.appendChild(legslabel);\r\n            fieldset4.appendChild(legsselect);\r\n            form.appendChild(fieldset4);\r\n\r\n            let fieldset9 = document.createElement("fieldset");\r\n            let eyeslabel = document.createElement("label");\r\n            eyeslabel.innerHTML = "Eyes:";\r\n            let select2 = document.createElement("select");\r\n            select2.setAttribute("id", "eyes");\r\n            // Amount of eyes set by element\r\n\r\n            fieldset9.appendChild(eyeslabel);\r\n            fieldset9.appendChild(select2);\r\n\r\n            form.append(fieldset9);\r\n\r\n            let fieldset5 = document.createElement("fieldset");\r\n            let furtypelabel = document.createElement("label");\r\n            furtypelabel.innerHTML = "Fur type:";\r\n            let typefurselect = document.createElement("select");\r\n            typefurselect.setAttribute("id", "furtype");\r\n\r\n            fieldset5.appendChild(furtypelabel);\r\n            fieldset5.appendChild(typefurselect);\r\n            form.appendChild(fieldset5);\r\n\r\n            let fieldset6 = document.createElement("fieldset");\r\n            let flylabel = document.createElement("label");\r\n            flylabel.setAttribute("id", "flylabel")\r\n            flylabel.innerHTML = "Can fly: ";\r\n            let fly = document.createElement("input");\r\n            fly.setAttribute("id", "fly");\r\n            fly.setAttribute("value", "");\r\n            fly.setAttribute("class", "hidden");\r\n\r\n            fieldset6.appendChild(flylabel);\r\n            fieldset6.appendChild(fly);\r\n\r\n            form.appendChild(fieldset6);\r\n\r\n            let fieldset7 = document.createElement("fieldset");\r\n            let swimlabel = document.createElement("label");\r\n            swimlabel.setAttribute("id", "swimlabel")\r\n            swimlabel.innerHTML = "Can swim: ";\r\n            let swim = document.createElement("input");\r\n            swim.setAttribute("id", "swim");\r\n            swim.setAttribute("value", "");\r\n            swim.setAttribute("class", "hidden");\r\n\r\n            fieldset6.appendChild(swimlabel);\r\n            fieldset6.appendChild(swim);\r\n\r\n            form.appendChild(fieldset7);\r\n\r\n            let fieldset8 = document.createElement("fieldset");\r\n            let colourlabel = document.createElement("label");\r\n            colourlabel.innerHTML = "Colour:"\r\n\r\n            let colourselect = document.createElement("select");\r\n            colourselect.setAttribute("id", "colour");\r\n\r\n            fieldset8.appendChild(colourselect);\r\n\r\n            form.appendChild(colourlabel);\r\n            form.appendChild(fieldset8);\r\n\r\n            let submit = document.createElement("input");\r\n            submit.setAttribute("type", "submit");\r\n            submit.setAttribute("class", "nes-btn is-success");\r\n            submit.setAttribute("value", "Submit");\r\n\r\n            form.appendChild(submit);\r\n            this.updateForm(this.controller);\r\n          }\r\n}\r\n\n// CONCATENATED MODULE: ./src/view/MapView.js\nclass MapView {\r\n  constructor(zoocontroller, weathercontroller) {\r\n    this.map = document.getElementById("map");\r\n    this.remove = document.getElementById("remove");\r\n\r\n    this.zoocontroller = zoocontroller;\r\n    this.weathercontroller = weathercontroller;\r\n\r\n    // Zoo width (zw) and zoo height (zh)\r\n\r\n    this.zw = 10;\r\n    this.zh = 10;\r\n\r\n    // Load buttons from index.html\r\n\r\n    let jungle = document.getElementById("jungle");\r\n    let desert = document.getElementById("desert");\r\n    let northpole = document.getElementById("northpole");\r\n\r\n    jungle.disabled = true;\r\n    jungle.setAttribute("class", "nes-btn is-disabled");\r\n\r\n    // ---------------------------------------------------------------------------------------------------------\r\n    // Buttons for switching between environments\r\n    // ---------------------------------------------------------------------------------------------------------\r\n\r\n    jungle.addEventListener("click", () => {\r\n      if (jungle.disabled != true) {\r\n        this.loadGrid(0);\r\n        jungle.disabled = true;\r\n        desert.disabled = false;\r\n        northpole.disabled = false;\r\n\r\n        jungle.setAttribute("class", "nes-btn is-disabled");\r\n        desert.setAttribute("class", "nes-btn is-warning");\r\n        northpole.setAttribute("class", "nes-btn");\r\n      }\r\n    });\r\n\r\n    desert.addEventListener("click", () => {\r\n      if (desert.disabled != true) {\r\n        this.loadGrid(2);\r\n        desert.disabled = true;\r\n        jungle.disabled = false;\r\n        northpole.disabled = false;\r\n\r\n        desert.setAttribute("class", "nes-btn is-disabled");\r\n        jungle.setAttribute("class", "nes-btn is-success");\r\n        northpole.setAttribute("class", "nes-btn");\r\n      }\r\n    });\r\n\r\n    northpole.addEventListener("click", () => {\r\n      if (northpole.disabled != true) {\r\n        this.loadGrid(1);\r\n        northpole.disabled = true;\r\n        desert.disabled = false;\r\n        jungle.disabled = false;\r\n\r\n        northpole.setAttribute("class", "nes-btn is-disabled");\r\n        jungle.setAttribute("class", "nes-btn is-success");\r\n        desert.setAttribute("class", "nes-btn is-warning");\r\n      }\r\n    });\r\n\r\n    // ---------------------------------------------------------------------------------------------------------\r\n\r\n    // Initialise the map from jungle\r\n    this.loadGrid(0);\r\n  }\r\n\r\n  loadGrid(terrain) {\r\n    // Terrain index: 0 is jungle, 1 is northpole, 3 is desert\r\n    this.terrain = terrain;\r\n    this.zoocontroller.loadGrid(this);\r\n  }\r\n\r\n  paintGrid(grid) {\r\n    this.grid = grid;\r\n    this.selected = this.grid[this.terrain].grid;\r\n    this.weathercontroller.updateWeather(\r\n      this.grid[this.terrain].reference_city\r\n    );\r\n    this.initRemove();\r\n    this.drawBoard();\r\n  }\r\n\r\n  drawBoard() {\r\n    let oldBoard = document.getElementById("grid");\r\n    if (oldBoard != null) {\r\n      oldBoard.remove();\r\n    }\r\n\r\n    this.table = document.createElement("table");\r\n    this.table.setAttribute("id", "grid");\r\n\r\n    for (let i = 0; i < this.zw; i++) {\r\n      this.tr = document.createElement("tr");\r\n      for (let y = 0; y < this.zh; y++) {\r\n        this.td = document.createElement("td");\r\n\r\n        // Drag and drop events\r\n        this.td.addEventListener("dragover", (e) => {\r\n          e.preventDefault();\r\n        });\r\n\r\n        this.td.addEventListener("dragenter", (e) => {\r\n          e.preventDefault();\r\n        });\r\n\r\n        let grid = this.grid;\r\n        let terrain = this.terrain;\r\n        let zoocontroller = this.zoocontroller;\r\n\r\n        this.td.addEventListener("drop", function(e) {\r\n          let data = e.dataTransfer.getData("Text");\r\n          let monster = document.getElementById(data);\r\n\r\n          if (monster != null) {\r\n            if (\r\n              !this.hasChildNodes() &&\r\n              monster.getAttribute("draggable") === "true"\r\n            ) {\r\n              let origin = monster.getAttribute("id").split("x");\r\n              let coordid = this.getAttribute("id").split("-");\r\n\r\n              if(monster.getAttribute("id") === "-1x-1") {\r\n                zoocontroller.addMonsterToGrid(\r\n                  grid,\r\n                  terrain,\r\n                  coordid[0],\r\n                  coordid[1]\r\n                );\r\n\r\n                let nowgrid = grid;\r\n                let map = terrain;\r\n                monster.addEventListener("click", (e) => {\r\n                  let coords = monster.getAttribute("id").split("x");\r\n                  let selectedmonster = zoocontroller.getMonsterByPosition(nowgrid, map, coords[0], coords[1]);\r\n  \r\n      \r\n                  alert(\'Monster selected: \' + selectedmonster.name + \'\\n\' +\r\n                  \'Element: \' + selectedmonster.element + \'\\n\' +\r\n                  \'Arms: \' + selectedmonster.arms + \'\\n\' +\r\n                  \'Type of arms: \' + selectedmonster.typearms + \'\\n\' +\r\n                  \'Legs: \' + selectedmonster.legs + \'\\n\' +\r\n                  \'Eyes: \' + selectedmonster.eyes + \'\\n\' +\r\n                  \'Fur type: \' + selectedmonster.furtype + \'\\n\' +\r\n                  \'Can fly: \' + selectedmonster.fly + \'\\n\' +\r\n                  \'Can swim: \' + selectedmonster.swim + \'\\n\' +\r\n                  \'Colour: \' + selectedmonster.colour + \'\\n\'\r\n                  );\r\n                });\r\n\r\n              } else {\r\n                zoocontroller.addExistingMonsterToGrid(\r\n                  grid,\r\n                  terrain,\r\n                  origin[0],\r\n                  origin[1],\r\n                  coordid[0],\r\n                  coordid[1]\r\n                );\r\n              }\r\n\r\n              if (monster.getAttribute("id") !== "-1x-1") {\r\n                zoocontroller.deleteMonsterFromGrid(\r\n                  grid,\r\n                  terrain,\r\n                  origin[0],\r\n                  origin[1]\r\n                );\r\n              }\r\n\r\n              monster.setAttribute("id", coordid[0] + "x" + coordid[1]);\r\n              this.append(monster);\r\n            }\r\n          }\r\n        });\r\n\r\n        this.td.setAttribute("id", i + "-" + y);\r\n\r\n        if (typeof this.selected[i].Columns[y] === "object") {\r\n          let monster = this.selected[i].Columns[y];\r\n          this.img = document.createElement("img");\r\n          this.img.setAttribute("class", "monster");\r\n\r\n          //Every monster gets an id based on their coordinates\r\n          this.img.setAttribute("id", i + "x" + y);\r\n\r\n          switch (monster.element) {\r\n            case "fire":\r\n              this.img.src = "../src/Resources/orangemonster.png";\r\n              break;\r\n            case "water":\r\n              this.img.src = "../src/Resources/bluemonster.png";\r\n              break;\r\n            case "earth":\r\n              this.img.src = "../src/Resources/brownmonster.png";\r\n              break;\r\n            case "wind":\r\n              this.img.src = "../src/Resources/whitemonster.png";\r\n              break;\r\n\r\n            default:\r\n              alert("Warning: could not find resource for monster");\r\n              break;\r\n          }\r\n\r\n          this.img.draggable = true;\r\n          this.img.addEventListener("dragstart", (e) => {\r\n            e.dataTransfer.setData("Text", e.target.id);\r\n          });\r\n\r\n          let clicked = this.img;\r\n          let zoocontroller = this.zoocontroller;\r\n          let grid = this.grid;\r\n          let map = this.terrain;\r\n          this.img.addEventListener("click", (e) => {\r\n            let coords = clicked.getAttribute("id").split("x");\r\n            let selectedmonster = zoocontroller.getMonsterByPosition(grid, map, coords[0], coords[1]);\r\n\r\n            alert(\'Monster selected: \' + selectedmonster.name + \'\\n\' +\r\n            \'Element: \' + selectedmonster.element + \'\\n\' +\r\n            \'Arms: \' + selectedmonster.arms + \'\\n\' +\r\n            \'Type of arms: \' + selectedmonster.typearms + \'\\n\' +\r\n            \'Legs: \' + selectedmonster.legs + \'\\n\' +\r\n            \'Eyes: \' + selectedmonster.eyes + \'\\n\' +\r\n            \'Fur type: \' + selectedmonster.furtype + \'\\n\' +\r\n            \'Can fly: \' + selectedmonster.fly + \'\\n\' +\r\n            \'Can swim: \' + selectedmonster.swim + \'\\n\' +\r\n            \'Colour: \' + selectedmonster.colour + \'\\n\'\r\n            );\r\n          });\r\n          this.td.appendChild(this.img);\r\n        }\r\n\r\n        if (this.selected[i].Columns[y] == 1) {\r\n          this.img = document.createElement("img");\r\n          this.img.setAttribute("class", "stone");\r\n\r\n          //Every monster gets an id based on their coordinates\r\n          this.img.setAttribute("id", i + "x" + y);\r\n\r\n          switch (terrain) {\r\n            // Jungle\r\n            case 0:\r\n              this.img.src = "../src/Resources/junglerock.png";\r\n              document.getElementById("map").style.backgroundColor = "#289150";\r\n              break;\r\n\r\n            // Nortpole\r\n            case 1:\r\n              this.img.src = "../src/Resources/icechunk.png";\r\n              document.getElementById("map").style.backgroundColor = "#D8FFFF";\r\n              break;\r\n\r\n            // Desert\r\n            case 2:\r\n              this.img.src = "../src/Resources/cactus.png";\r\n              document.getElementById("map").style.backgroundColor = "#EDC9AF";\r\n              break;\r\n\r\n            default:\r\n              break;\r\n          }\r\n          this.td.appendChild(this.img);\r\n        }\r\n        this.tr.appendChild(this.td);\r\n      }\r\n      this.table.appendChild(this.tr);\r\n    }\r\n    this.map.appendChild(this.table);\r\n  }\r\n\r\n  initRemove() {\r\n    let grid = this.grid;\r\n    let terrain = this.terrain;\r\n    let zoocontroller = this.zoocontroller;\r\n\r\n    this.remove.addEventListener("drop", (e) => {\r\n      let data = e.dataTransfer.getData("Text");\r\n      let monster = document.getElementById(data);\r\n      if (monster != null) {\r\n        let origin = monster.getAttribute("id").split("x");\r\n\r\n        zoocontroller.deleteMonsterFromGrid(\r\n          grid,\r\n          terrain,\r\n          origin[0],\r\n          origin[1]\r\n        );\r\n\r\n        monster.remove();\r\n      }\r\n    });\r\n\r\n    this.remove.addEventListener("dragover", (e) => {\r\n      e.preventDefault();\r\n    });\r\n\r\n    this.remove.addEventListener("dragenter", (e) => {\r\n      e.preventDefault();\r\n    });\r\n  }\r\n}\r\n\n// CONCATENATED MODULE: ./src/Model/WeatherDataService.js\nclass WeatherDataService {\r\n\r\n    constructor() {\r\n        this.apikey = \'6efc35c3c2611e414ea66da76b2e3f0b\';\r\n        this.units = \'metric\';\r\n    }\r\n\r\n    async getCurrentWeather(cityName) {\r\n        let response = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${this.apikey}&units=${this.units}`);\r\n        return response.json();\r\n    }\r\n}\n// CONCATENATED MODULE: ./src/View/WeatherView.js\nclass WeatherView {\r\n\r\n    constructor() {\r\n        this.img = document.getElementById(\'weatherimg\');\r\n        this.temp = document.getElementById(\'temp\');\r\n        this.rain = false;\r\n\r\n        this.initRainSwitch();\r\n    }\r\n\r\n    initRainSwitch() {\r\n        let rainswitch = document.getElementById(\'rainswitch\');\r\n        let ownclass = this;\r\n        rainswitch.addEventListener("click", (e) => {\r\n            e.preventDefault();\r\n            if(ownclass.rain) {\r\n                ownclass.updateWeather(ownclass.temperature, "Clear");\r\n                ownclass.rain = false;\r\n            } else {\r\n                ownclass.updateWeather(ownclass.temperature, "Rain");\r\n            }\r\n        });\r\n    }\r\n\r\n    updateWeather(temp, rain) {\r\n        this.temperature = temp;\r\n        this.temp.innerText = `${temp}° Celcius`;\r\n\r\n\r\n        if(rain === \'Rain\' || rain === \'Shower rain\') {\r\n            this.rain = true;\r\n            if(document.getElementById(\'rain\') === null) {\r\n                let canvas = document.createElement(\'canvas\');\r\n                canvas.setAttribute(\'id\', \'rain\');\r\n                document.getElementById(\'map\').appendChild(canvas);\r\n                this.startRain(300);\r\n            }\r\n        } else {\r\n            let canvas = document.getElementById(\'rain\');\r\n            if(canvas !== null) {\r\n                canvas.parentNode.removeChild(canvas);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Function for initiating rain canvas\r\n\r\n    startRain(maxParts) {\r\n        let canvas = document.getElementById("rain");\r\n\r\n        if (canvas.getContext) {\r\n            let ctx = canvas.getContext(\'2d\');\r\n            let w = canvas.width;\r\n            let h = canvas.height;\r\n            ctx.strokeStyle = \'rgba(46,86,147,0.3)\';\r\n            ctx.lineWidth = 0.7;\r\n            ctx.lineCap = \'round\';\r\n\r\n\r\n            let init = [];\r\n            for (let a = 0; a < maxParts; a++) {\r\n                init.push({\r\n                    x: Math.random() * w,\r\n                    y: Math.random() * h,\r\n                    l: Math.random() * 1,\r\n                    xs: -4 + Math.random() * 4 + 2,\r\n                    ys: Math.random() * 10 + 10\r\n                })\r\n            }\r\n\r\n            let particles = [];\r\n            for (let b = 0; b < maxParts; b++) {\r\n                particles[b] = init[b];\r\n            }\r\n\r\n            let draw = () => {\r\n                ctx.clearRect(0, 0, w, h);\r\n                for (let c = 0; c < particles.length; c++) {\r\n                    let p = particles[c];\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(p.x, p.y);\r\n                    ctx.lineTo(p.x + p.l * p.xs, p.y + p.l * p.ys);\r\n                    ctx.stroke();\r\n                }\r\n                move();\r\n            }\r\n\r\n            let move = () => {\r\n                for (let b = 0; b < particles.length; b++) {\r\n                    let p = particles[b];\r\n                    p.x += p.xs;\r\n                    p.y += p.ys;\r\n                    if (p.x > w || p.y > h) {\r\n                        p.x = Math.random() * w;\r\n                        p.y = -20;\r\n                    }\r\n                }\r\n            }\r\n\r\n            setInterval(draw, 80);\r\n\r\n        }\r\n    }\r\n}\n// CONCATENATED MODULE: ./src/Controller/WeatherController.js\n\r\n\r\n\r\nclass WeatherController_WeatherController {\r\n    constructor() {\r\n        this.weatherdata = new WeatherDataService();\r\n        this.weatherview = new WeatherView();\r\n    }\r\n\r\n    async updateWeather(city) {\r\n        let weatherview = this.weatherview;\r\n        let data = await this.weatherdata.getCurrentWeather(city);\r\n        weatherview.updateWeather(data.main.temp, data.weather[0].main);\r\n    }\r\n}\n// CONCATENATED MODULE: ./src/Model/MapService.js\nclass MapService {\r\n  async loadGrid() {\r\n    let grid = await fetch("./map/grid.json");\r\n    let STORAGE_KEY = "zoo-grid";\r\n\r\n    // Put the whole grid from localstorage in a variable\r\n    let storage = JSON.parse(localStorage.getItem(STORAGE_KEY));\r\n\r\n    if (storage != null) {\r\n      grid = storage;\r\n\r\n    // If the grid is not present in localstorage yet, put the whole grid as loaded from the local grid.json file in there\r\n    } else {\r\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(grid));\r\n    }\r\n\r\n    return grid;\r\n  }\r\n\r\n  addMonsterToGrid(grid, terrain, monster, x, y) {\r\n    monster.x = x;\r\n    monster.y = y;\r\n    monster.map = terrain;\r\n    grid[terrain].grid[x].Columns[y] = monster;\r\n    this.saveToLocalStorage(grid);\r\n  }\r\n\r\n  deleteMonsterFromGrid(grid, terrain, x, y) {\r\n    grid[terrain].grid[x].Columns[y] = "0";\r\n    this.saveToLocalStorage(grid);\r\n  }\r\n\r\n  saveToLocalStorage(grid) {\r\n    let STORAGE_KEY = "zoo-grid";\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(grid));\r\n  }\r\n\r\n  getMonsterByPosition(grid, map, x, y) {\r\n    return grid[map].grid[x].Columns[y];\r\n  }\r\n\r\n}\r\n\n// CONCATENATED MODULE: ./src/Model/Monster.js\nclass Monster_Monster{\r\n    // MonsterData consists of element, name, arms, type_arms, legs, eyes, skintype, ability to fly, ability to swim, colour ,map, x coordinate, y coordinate\r\n    constructor(name, element, arms, typearms, legs, eyes, furtype, fly, swim, colour, map, x, y){\r\n        this.name = name;\r\n        this.element = element;\r\n        this.arms = arms;\r\n        this.typearms = typearms;\r\n        this.legs = legs;\r\n        this.eyes = eyes;\r\n        this.furtype = furtype;\r\n        this.fly = fly;\r\n        this.swim = swim;\r\n        this.colour = colour;\r\n        this.map = map;\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n\r\nclass Monster_FireMonster extends Monster_Monster{\r\n    constructor(){\r\n        super();\r\n        this.arms = [1,2,3,4,5,6];\r\n        this.typearms = ["Tentacles","Claws","Claw-wings"];\r\n        this.legs = [2];\r\n        this.eyes = [1,2,3,4];\r\n        this.furtype = ["Scales","Feathers"];\r\n        this.fly = "no";\r\n        this.swim = "no";\r\n        this.color = ["Red","Orange","Brown"];\r\n    }\r\n}\r\n\r\nclass Monster_WaterMonster extends Monster_Monster{\r\n    constructor(){\r\n        super();\r\n        this.arms = [1,2,3,4,5,6,7,8];\r\n        this.typearms = ["Tentacles","Fins"];\r\n        this.legs = [1,2,3,4];\r\n        this.eyes = [1,2,3,4,5,6,7,8];\r\n        this.furtype = ["Scales","Slime"];\r\n        this.fly = "no";\r\n        this.swim = "yes";\r\n        this.color = ["Blue","Red","Green"];\r\n    }\r\n}\r\n\r\nclass Monster_EarthMonster extends Monster_Monster{\r\n    constructor(){\r\n        super();\r\n        this.arms = [2];\r\n        this.typearms = ["Claws"];\r\n        this.legs = [2,4,6];\r\n        this.eyes = [2];\r\n        this.furtype = ["Hair","Scales","Slime"];\r\n        this.fly = "no";\r\n        this.swim = "no";\r\n        this.color = ["Purple","Orange","White"];\r\n    }\r\n}\r\n\r\nclass Monster_WindMonster extends Monster_Monster{\r\n    constructor(){\r\n        super();\r\n        this.arms = [2];\r\n        this.typearms = ["Wings","Claw-wings"];\r\n        this.legs = [0,2];\r\n        this.eyes = [2];\r\n        this.furtype = ["Feathers","Hair","Scales"];\r\n        this.fly = "yes";\r\n        this.swim = "no";\r\n        this.color = ["White","Blue","Purple"];\r\n    }\r\n}\n// CONCATENATED MODULE: ./src/Controller/ZooController.js\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass ZooController_ZooController\r\n{\r\n    //el constructor\r\n    constructor(){\r\n        this.weathercontroller = new WeatherController_WeatherController();\r\n\r\n        this.monsterservice = new MonsterService_MonsterService();\r\n        this.createmonsterview =  new CreateMonsterView(this);\r\n        this.mapservice = new MapService();\r\n        this.fireMonster = new Monster_FireMonster();\r\n        this.waterMonster = new Monster_WaterMonster();\r\n        this.earthMonster =  new Monster_EarthMonster();\r\n        this.windMonster = new Monster_WindMonster();\r\n\r\n        this.mapview = new MapView(this, this.weathercontroller);\r\n    }\r\n\r\n    addMonsterToGrid(grid, terrain, x, y) {\r\n        this.mapservice.addMonsterToGrid(grid, terrain, this.getLastMonster(), x, y);\r\n    }\r\n\r\n    addExistingMonsterToGrid(grid, terrain, ox, oy, x, y) {\r\n        this.mapservice.addMonsterToGrid(grid, terrain, this.getMonsterByPosition(grid, terrain, ox, oy), x, y);\r\n    }\r\n\r\n    deleteMonsterFromGrid(grid, terrain, x, y) {\r\n        this.mapservice.deleteMonsterFromGrid(grid, terrain, x, y);\r\n    }\r\n\r\n    addMonster(name, element, arms, typearms, legs, eyes, furtype, fly, swim, colour, map, x, y){\r\n        this.monsterservice.saveMonster(name, element, arms, typearms, legs, eyes, furtype, fly, swim, colour, map, x, y);\r\n    }\r\n\r\n    loadGrid(mapview) {\r\n        this.mapservice.loadGrid().then((grid) => {\r\n            mapview.paintGrid(grid);\r\n        });\r\n    }\r\n\r\n    getLastMonster() {\r\n        return this.monsterservice.getLastMonster();\r\n    }\r\n\r\n    getMonsterByPosition(grid, map, x, y) {\r\n        return this.mapservice.getMonsterByPosition(grid, map, x, y);\r\n    }\r\n\r\n    interaction(grid, map) {\r\n        let monsters = this.monsterservice.getAllMonsters(grid, map);  \r\n    }\r\n\r\n    getArms(value){\r\n        let arms;\r\n        switch(value) {\r\n            case "fire":\r\n                arms = this.fireMonster.arms;\r\n                break;\r\n            case "water":\r\n                arms = this.waterMonster.arms;\r\n                break;\r\n            case "wind":\r\n                arms = this.windMonster.arms;\r\n                break;\r\n            case "earth":\r\n                arms = this.earthMonster.arms\r\n                break;\r\n            default:\r\n                arms = 0;\r\n          }\r\n        return arms;\r\n    }\r\n\r\n    getTypeArms(value){\r\n        let typeArms;\r\n        switch(value) {\r\n            case "fire":\r\n                typeArms = this.fireMonster.typearms;\r\n                break;\r\n            case "water":\r\n                typeArms = this.waterMonster.typearms;\r\n                break;\r\n            case "wind":\r\n                typeArms = this.windMonster.typearms;\r\n                break;\r\n            case "earth":\r\n                typeArms = this.earthMonster.typearms;\r\n                break;\r\n            default:\r\n                typeArms = 0;\r\n          }\r\n        return typeArms;        \r\n    }\r\n\r\n    getLegs(value){\r\n        let legs;\r\n        switch(value) {\r\n            case "fire":\r\n                legs = this.fireMonster.legs;\r\n                break;\r\n            case "water":\r\n                legs = this.waterMonster.legs;\r\n                break;\r\n            case "wind":\r\n                legs = this.windMonster.legs;\r\n                break;\r\n            case "earth":\r\n                legs = this.earthMonster.legs;\r\n                break;\r\n            default:\r\n                legs = 0;\r\n          }\r\n        return legs;\r\n    }\r\n\r\n    getEyes(value){\r\n        let eyes;\r\n        switch(value) {\r\n            case "fire":\r\n                eyes = this.fireMonster.eyes;\r\n                break;\r\n            case "water":\r\n                eyes = this.waterMonster.eyes;\r\n                break;\r\n            case "wind":\r\n                eyes = this.windMonster.eyes;\r\n                break;\r\n            case "earth":\r\n                eyes = this.earthMonster.eyes;\r\n                break;\r\n            default:\r\n                eyes = 0;\r\n          }\r\n        return eyes;\r\n    }\r\n\r\n    getFurType(value){\r\n        let furType;\r\n        switch(value) {\r\n            case "fire":\r\n                furType = this.fireMonster.furtype;\r\n                break;\r\n            case "water":\r\n                furType = this.waterMonster.furtype;\r\n                break;\r\n            case "wind":\r\n                furType = this.windMonster.furtype;\r\n                break;\r\n            case "earth":\r\n                furType = this.earthMonster.furtype;\r\n                break;\r\n            default:\r\n                furType = 0;\r\n          }\r\n        return furType;\r\n    }\r\n\r\n    getFly(value){\r\n        let fly;\r\n        switch(value) {\r\n            case "fire":\r\n                fly = this.fireMonster.fly;\r\n                break;\r\n            case "water":\r\n                fly = this.waterMonster.fly;\r\n                break;\r\n            case "wind":\r\n                fly = this.windMonster.fly;\r\n                break;\r\n            case "earth":\r\n                fly = this.earthMonster.fly;\r\n                break;\r\n            default:\r\n                fly = 0;\r\n          }\r\n        return fly;\r\n    }\r\n\r\n    getSwim(value){\r\n        let swim;\r\n        switch(value) {\r\n            case "fire":\r\n                swim = this.fireMonster.swim;\r\n                break;\r\n            case "water":\r\n                swim = this.waterMonster.swim;\r\n                break;\r\n            case "wind":\r\n                swim = this.windMonster.swim;\r\n                break;\r\n            case "earth":\r\n                swim = this.earthMonster.swim;\r\n                break;\r\n            default:\r\n                swim = 0;\r\n          }\r\n        return swim;\r\n    }\r\n\r\n    getColor(value){\r\n        let color;\r\n        switch(value) {\r\n            case "fire":\r\n                color = this.fireMonster.color;\r\n                break;\r\n            case "water":\r\n                color = this.waterMonster.color;\r\n                break;\r\n            case "wind":\r\n                color = this.windMonster.color;\r\n                break;\r\n            case "earth":\r\n                color = this.earthMonster.color;\r\n                break;\r\n            default:\r\n                color = 0;\r\n          }\r\n        return color;\r\n    }\r\n}\n// CONCATENATED MODULE: ./src/app.js\n\r\n\r\nlet zoocontroller = new ZooController_ZooController();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kZWwvTW9uc3Rlci5qcz81MThkIiwid2VicGFjazovLy8uL3NyYy9tb2RlbC9Nb25zdGVyU2VydmljZS5qcz8wODkyIiwid2VicGFjazovLy8uL3NyYy92aWV3L0NyZWF0ZU1vbnN0ZXJWaWV3LmpzP2M3NzAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXcvTWFwVmlldy5qcz8wOTQ4Iiwid2VicGFjazovLy8uL3NyYy9Nb2RlbC9XZWF0aGVyRGF0YVNlcnZpY2UuanM/ZmM4ZSIsIndlYnBhY2s6Ly8vLi9zcmMvVmlldy9XZWF0aGVyVmlldy5qcz84NjFjIiwid2VicGFjazovLy8uL3NyYy9Db250cm9sbGVyL1dlYXRoZXJDb250cm9sbGVyLmpzPzE1ZjQiLCJ3ZWJwYWNrOi8vLy4vc3JjL01vZGVsL01hcFNlcnZpY2UuanM/MjA4MiIsIndlYnBhY2s6Ly8vLi9zcmMvTW9kZWwvTW9uc3Rlci5qcz84ZTRiIiwid2VicGFjazovLy8uL3NyYy9Db250cm9sbGVyL1pvb0NvbnRyb2xsZXIuanM/YmNkOSIsIndlYnBhY2s6Ly8vLi9zcmMvYXBwLmpzPzExMTIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEM7O0FDekVvQztBQUM3QixNQUFNLDZCQUFjO0FBQzNCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsNkJBQTZCLE9BQU87QUFDcEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7OztBQUdBOztBQUVBO0FBQ0EsMkJBQTJCLFFBQVE7QUFDbkM7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTs7QUFFQTs7O0FDMUNPOztBQUVQO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLDhDQUE4QyxRQUFRO0FBQ3REO0FBQ0E7QUFDQSxhQUFhOzs7QUFHYjs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsOENBQThDLFFBQVE7QUFDdEQ7QUFDQTtBQUNBLGFBQWE7O0FBRWI7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw4Q0FBOEMsUUFBUTtBQUN0RDtBQUNBO0FBQ0EsYUFBYTs7QUFFYjs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsOENBQThDLFFBQVE7QUFDdEQ7QUFDQTtBQUNBLGFBQWE7O0FBRWI7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLDhDQUE4QyxRQUFRO0FBQ3REO0FBQ0E7QUFDQSxhQUFhOztBQUViLDJEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTs7QUFFYjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSw4Q0FBOEMsUUFBUTtBQUN0RDtBQUNBO0FBQ0EsYUFBYTs7QUFFYjtBQUNBLEtBQUs7O0FBRUw7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsMENBQTBDLFFBQVE7QUFDbEQ7QUFDQTtBQUNBLFNBQVM7OztBQUdUOztBQUVBOztBQUVBO0FBQ0E7QUFDQSwwQ0FBMEMsUUFBUTtBQUNsRDtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDBDQUEwQyxRQUFRO0FBQ2xEO0FBQ0E7QUFDQSxTQUFTOztBQUVUOztBQUVBOztBQUVBO0FBQ0E7QUFDQSwwQ0FBMEMsUUFBUTtBQUNsRDtBQUNBO0FBQ0EsU0FBUzs7QUFFVDs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsMENBQTBDLFFBQVE7QUFDbEQ7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsMENBQTBDLFFBQVE7QUFDbEQ7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQSxDQUFDOztBQUVEOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxzQ0FBc0MsUUFBUTtBQUM5QztBQUNBO0FBQ0EsS0FBSzs7QUFFTDs7QUFFQTs7QUFFQTtBQUNBO0FBQ0Esc0NBQXNDLFFBQVE7QUFDOUM7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxzQ0FBc0MsUUFBUTtBQUM5QztBQUNBO0FBQ0EsS0FBSzs7QUFFTDs7QUFFQTs7QUFFQTtBQUNBO0FBQ0Esc0NBQXNDLFFBQVE7QUFDOUM7QUFDQTtBQUNBLEtBQUs7O0FBRUw7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLHNDQUFzQyxRQUFRO0FBQzlDO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLHNDQUFzQyxRQUFRO0FBQzlDO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0EsQ0FBQzs7QUFFRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSw0Q0FBNEMsUUFBUTtBQUNwRDtBQUNBO0FBQ0EsV0FBVzs7O0FBR1g7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLDRDQUE0QyxRQUFRO0FBQ3BEO0FBQ0E7QUFDQSxXQUFXOztBQUVYO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsNENBQTRDLFFBQVE7QUFDcEQ7QUFDQTtBQUNBLFdBQVc7O0FBRVg7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLDRDQUE0QyxRQUFRO0FBQ3BEO0FBQ0E7QUFDQSxXQUFXOztBQUVYOztBQUVBOztBQUVBO0FBQ0E7QUFDQSw0Q0FBNEMsUUFBUTtBQUNwRDtBQUNBO0FBQ0EsV0FBVzs7O0FBR1gsMEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXOztBQUVYO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLDRDQUE0QyxRQUFRO0FBQ3BEO0FBQ0E7QUFDQSxXQUFXOztBQUVYO0FBQ0EsR0FBRztBQUNIOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7O0FDam1CTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsbUJBQW1CLGFBQWE7QUFDaEM7QUFDQSxxQkFBcUIsYUFBYTtBQUNsQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjs7QUFFakIsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7O0FBRVg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7OztBQ2pUTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHVGQUF1RixTQUFTLFNBQVMsWUFBWSxTQUFTLFdBQVc7QUFDekk7QUFDQTtBQUNBLEM7O0FDWE87O0FBRVA7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTtBQUNBLGlDQUFpQyxLQUFLOzs7QUFHdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQSwyQkFBMkIsY0FBYztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7O0FBRUE7QUFDQSwyQkFBMkIsY0FBYztBQUN6QztBQUNBOztBQUVBO0FBQ0E7QUFDQSwrQkFBK0Isc0JBQXNCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwrQkFBK0Isc0JBQXNCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsQzs7QUN2R2lFO0FBQ2Y7O0FBRTNDLE1BQU0sbUNBQWlCO0FBQzlCO0FBQ0EsK0JBQStCLGtCQUFrQjtBQUNqRCwrQkFBK0IsV0FBVztBQUMxQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQzs7QUNkTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7O0FDekNPLE1BQU0sZUFBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPLE1BQU0sbUJBQVcsU0FBUyxlQUFPO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTyxNQUFNLG9CQUFZLFNBQVMsZUFBTztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRU8sTUFBTSxvQkFBWSxTQUFTLGVBQU87QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVRLE1BQU0sbUJBQVcsU0FBUyxlQUFPO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDOztBQ3pFd0Q7QUFDTTtBQUNwQjtBQUNjO0FBQ1A7QUFDRjtBQUNDO0FBQ0E7QUFDRDs7QUFFaEMsTUFBTSwyQkFBYTtBQUNsQztBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsbUNBQWlCOztBQUV0RCxrQ0FBa0MsNkJBQWM7QUFDaEQsc0NBQXNDLGlCQUFpQjtBQUN2RCw4QkFBOEIsVUFBVTtBQUN4QywrQkFBK0IsbUJBQVc7QUFDMUMsZ0NBQWdDLG9CQUFZO0FBQzVDLGlDQUFpQyxvQkFBWTtBQUM3QywrQkFBK0IsbUJBQVc7O0FBRTFDLDJCQUEyQixPQUFPO0FBQ2xDOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHFFO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQzs7QUNwT3VEOztBQUV2RCx3QkFBd0IsMkJBQWEiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBNb25zdGVye1xyXG4gICAgLy8gTW9uc3RlckRhdGEgY29uc2lzdHMgb2YgZWxlbWVudCwgbmFtZSwgYXJtcywgdHlwZV9hcm1zLCBsZWdzLCBleWVzLCBza2ludHlwZSwgYWJpbGl0eSB0byBmbHksIGFiaWxpdHkgdG8gc3dpbSwgY29sb3VyICxtYXAsIHggY29vcmRpbmF0ZSwgeSBjb29yZGluYXRlXHJcbiAgICBjb25zdHJ1Y3RvcihuYW1lLCBlbGVtZW50LCBhcm1zLCB0eXBlYXJtcywgbGVncywgZXllcywgZnVydHlwZSwgZmx5LCBzd2ltLCBjb2xvdXIsIG1hcCwgeCwgeSl7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcclxuICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xyXG4gICAgICAgIHRoaXMuYXJtcyA9IGFybXM7XHJcbiAgICAgICAgdGhpcy50eXBlYXJtcyA9IHR5cGVhcm1zO1xyXG4gICAgICAgIHRoaXMubGVncyA9IGxlZ3M7XHJcbiAgICAgICAgdGhpcy5leWVzID0gZXllcztcclxuICAgICAgICB0aGlzLmZ1cnR5cGUgPSBmdXJ0eXBlO1xyXG4gICAgICAgIHRoaXMuZmx5ID0gZmx5O1xyXG4gICAgICAgIHRoaXMuc3dpbSA9IHN3aW07XHJcbiAgICAgICAgdGhpcy5jb2xvdXIgPSBjb2xvdXI7XHJcbiAgICAgICAgdGhpcy5tYXAgPSBtYXA7XHJcbiAgICAgICAgdGhpcy54ID0geDtcclxuICAgICAgICB0aGlzLnkgPSB5O1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRmlyZU1vbnN0ZXIgZXh0ZW5kcyBNb25zdGVye1xyXG4gICAgY29uc3RydWN0b3IoKXtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMuYXJtcyA9IFsxLDIsMyw0LDUsNl07XHJcbiAgICAgICAgdGhpcy50eXBlYXJtcyA9IFtcIlRlbnRhY2xlc1wiLFwiQ2xhd3NcIixcIkNsYXctd2luZ3NcIl07XHJcbiAgICAgICAgdGhpcy5sZWdzID0gWzJdO1xyXG4gICAgICAgIHRoaXMuZXllcyA9IFsxLDIsMyw0XTtcclxuICAgICAgICB0aGlzLmZ1cnR5cGUgPSBbXCJTY2FsZXNcIixcIkZlYXRoZXJzXCJdO1xyXG4gICAgICAgIHRoaXMuZmx5ID0gXCJub1wiO1xyXG4gICAgICAgIHRoaXMuc3dpbSA9IFwibm9cIjtcclxuICAgICAgICB0aGlzLmNvbG9yID0gW1wiUmVkXCIsXCJPcmFuZ2VcIixcIkJyb3duXCJdO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgV2F0ZXJNb25zdGVyIGV4dGVuZHMgTW9uc3RlcntcclxuICAgIGNvbnN0cnVjdG9yKCl7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLmFybXMgPSBbMSwyLDMsNCw1LDYsNyw4XTtcclxuICAgICAgICB0aGlzLnR5cGVhcm1zID0gW1wiVGVudGFjbGVzXCIsXCJGaW5zXCJdO1xyXG4gICAgICAgIHRoaXMubGVncyA9IFsxLDIsMyw0XTtcclxuICAgICAgICB0aGlzLmV5ZXMgPSBbMSwyLDMsNCw1LDYsNyw4XTtcclxuICAgICAgICB0aGlzLmZ1cnR5cGUgPSBbXCJTY2FsZXNcIixcIlNsaW1lXCJdO1xyXG4gICAgICAgIHRoaXMuZmx5ID0gXCJub1wiO1xyXG4gICAgICAgIHRoaXMuc3dpbSA9IFwieWVzXCI7XHJcbiAgICAgICAgdGhpcy5jb2xvciA9IFtcIkJsdWVcIixcIlJlZFwiLFwiR3JlZW5cIl07XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBFYXJ0aE1vbnN0ZXIgZXh0ZW5kcyBNb25zdGVye1xyXG4gICAgY29uc3RydWN0b3IoKXtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMuYXJtcyA9IFsyXTtcclxuICAgICAgICB0aGlzLnR5cGVhcm1zID0gW1wiQ2xhd3NcIl07XHJcbiAgICAgICAgdGhpcy5sZWdzID0gWzIsNCw2XTtcclxuICAgICAgICB0aGlzLmV5ZXMgPSBbMl07XHJcbiAgICAgICAgdGhpcy5mdXJ0eXBlID0gW1wiSGFpclwiLFwiU2NhbGVzXCIsXCJTbGltZVwiXTtcclxuICAgICAgICB0aGlzLmZseSA9IFwibm9cIjtcclxuICAgICAgICB0aGlzLnN3aW0gPSBcIm5vXCI7XHJcbiAgICAgICAgdGhpcy5jb2xvciA9IFtcIlB1cnBsZVwiLFwiT3JhbmdlXCIsXCJXaGl0ZVwiXTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0ICBjbGFzcyBXaW5kTW9uc3RlciBleHRlbmRzIE1vbnN0ZXJ7XHJcbiAgICBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgdGhpcy5hcm1zID0gWzJdO1xyXG4gICAgICAgIHRoaXMudHlwZWFybXMgPSBbXCJXaW5nc1wiLFwiQ2xhdy13aW5nc1wiXTtcclxuICAgICAgICB0aGlzLmxlZ3MgPSBbMCwyXTtcclxuICAgICAgICB0aGlzLmV5ZXMgPSBbMl07XHJcbiAgICAgICAgdGhpcy5mdXJ0eXBlID0gW1wiRmVhdGhlcnNcIixcIkhhaXJcIixcIlNjYWxlc1wiXTtcclxuICAgICAgICB0aGlzLmZseSA9IFwieWVzXCI7XHJcbiAgICAgICAgdGhpcy5zd2ltID0gXCJub1wiO1xyXG4gICAgICAgIHRoaXMuY29sb3IgPSBbXCJXaGl0ZVwiLFwiQmx1ZVwiLFwiUHVycGxlXCJdO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IHsgTW9uc3RlciB9IGZyb20gJy4vTW9uc3Rlcic7XHJcbmV4cG9ydCBjbGFzcyBNb25zdGVyU2VydmljZVxyXG57XHJcbiAgICBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgICAgIHRoaXMubW9uc3RlcnMgPSBbXVxyXG4gICAgfVxyXG5cclxuICAgIGdldE1vbnN0ZXJzKClcclxuICAgIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5tb25zdGVycztcclxuICAgIH1cclxuXHJcbiAgICBzYXZlTW9uc3RlcihuYW1lLCBlbGVtZW50LCBhcm1zLCB0eXBlYXJtcywgbGVncywgZXllcywgZnVydHlwZSwgZmx5LCBzd2ltLCBjb2xvdXIsIG1hcCwgeCwgeSl7XHJcbiAgICAgICAgbGV0IG5ld01vbnN0ZXIgPSBuZXcgTW9uc3RlcihuYW1lLCBlbGVtZW50LCBhcm1zLCB0eXBlYXJtcywgbGVncywgZXllcywgZnVydHlwZSwgZmx5LCBzd2ltLCBjb2xvdXIsIG1hcCwgeCwgeSk7XHJcbiAgICAgICAgdGhpcy5tb25zdGVycy5wdXNoKG5ld01vbnN0ZXIpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldExhc3RNb25zdGVyKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLm1vbnN0ZXJzW3RoaXMubW9uc3RlcnMubGVuZ3RoIC0xXTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgZ2V0QWxsTW9uc3RlcnMoZ3JpZCwgbWFwKSB7XHJcbiAgICAgICAgbGV0IG1vbnN0ZXJzID0gW107XHJcbiAgICAgICAgbGV0IGNvbHVtbnMgPSBbXTtcclxuICAgICAgICBsZXQgY29sdW1uczMgPSBbXTtcclxuXHJcblxyXG4gICAgICAgIGxldCBjb2x1bW5zMiA9IGdyaWRbbWFwXS5ncmlkO1xyXG5cclxuICAgICAgICBjb2x1bW5zMi5mb3JFYWNoKGVsZW1lbnQgPT4ge1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDEwOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIGNvbHVtbnMucHVzaChlbGVtZW50KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBjb2x1bW5zLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgIGNvbHVtbnMzLnB1c2goZWxlbWVudCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHJldHVybiBtb25zdGVycztcclxuICAgIH1cclxuICAgIFxyXG59XHJcbiIsImV4cG9ydCBjbGFzcyBDcmVhdGVNb25zdGVyVmlldyB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKGNvbnRyb2xsZXIpIHtcclxuICAgIHRoaXMuY29udHJvbGxlciA9IGNvbnRyb2xsZXI7XHJcblxyXG4gICAgdGhpcy50ZW1wbGF0ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY3JlYXRlX21vbnN0ZXJcIik7XHJcblxyXG4gICAgdGhpcy5yYWRpb19maXJlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJlbGVtZW50X2ZpcmVcIik7XHJcbiAgICB0aGlzLnJhZGlvX3dhdGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJlbGVtZW50X3dhdGVyXCIpO1xyXG4gICAgdGhpcy5yYWRpb19lYXJ0aCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZWxlbWVudF9lYXJ0aFwiKTtcclxuICAgIHRoaXMucmFkaW9fd2luZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZWxlbWVudF93aW5kXCIpO1xyXG4gICAgdGhpcy5yZW1vdmUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJlbW92ZVwiKTtcclxuXHJcbiAgICB0aGlzLnNldEVsZW1lbnRFdmVudHMoY29udHJvbGxlcik7XHJcbiAgfVxyXG5cclxuICB1cGRhdGVGb3JtKGNvbnRyb2xsZXIpIHtcclxuICAgIHRoaXMubW9uc3RlcmZvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1vbnN0ZXJfZm9ybVwiKTtcclxuXHJcbiAgICBsZXQgY3JlYXRlZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY3JlYXRlZFwiKTtcclxuXHJcbiAgICB0aGlzLm1vbnN0ZXJmb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgZnVuY3Rpb24oZSkge1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gICAgICBpZiAoY3JlYXRlZC5oYXNDaGlsZE5vZGVzKCkpIHtcclxuICAgICAgICB3aGlsZSAoY3JlYXRlZC5maXJzdENoaWxkKSB7XHJcbiAgICAgICAgICBjcmVhdGVkLnJlbW92ZUNoaWxkKGNyZWF0ZWQuZmlyc3RDaGlsZCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIHRoaXMuaW1nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcclxuICAgICAgdGhpcy5pbWcuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJjcmVhdGVkXCIpO1xyXG5cclxuICAgICAgbGV0IHNyYyA9IFwiXCI7XHJcblxyXG4gICAgICBzd2l0Y2ggKHRoaXMuZWxlbWVudC52YWx1ZSkge1xyXG4gICAgICAgIGNhc2UgXCJmaXJlXCI6XHJcbiAgICAgICAgICBzcmMgPSBcIi4uL3NyYy9SZXNvdXJjZXMvb3JhbmdlbW9uc3Rlci5wbmdcIjtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgXCJ3YXRlclwiOlxyXG4gICAgICAgICAgc3JjID0gXCIuLi9zcmMvUmVzb3VyY2VzL2JsdWVtb25zdGVyLnBuZ1wiO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSBcImVhcnRoXCI6XHJcbiAgICAgICAgICBzcmMgPSBcIi4uL3NyYy9SZXNvdXJjZXMvYnJvd25tb25zdGVyLnBuZ1wiO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSBcIndpbmRcIjpcclxuICAgICAgICAgIHNyYyA9IFwiLi4vc3JjL1Jlc291cmNlcy93aGl0ZW1vbnN0ZXIucG5nXCI7XHJcbiAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICB9XHJcbiAgICAgIHRoaXMuaW1nLnNyYyA9IHNyYztcclxuICAgICAgdGhpcy5pbWcuZHJhZ2dhYmxlID0gdHJ1ZTtcclxuICAgICAgdGhpcy5pbWcuc2V0QXR0cmlidXRlKCdpZCcsICctMXgtMScpO1xyXG4gICAgICB0aGlzLmltZy5hZGRFdmVudExpc3RlbmVyKFwiZHJhZ3N0YXJ0XCIsIChlKSA9PiB7XHJcbiAgICAgICAgZS5kYXRhVHJhbnNmZXIuc2V0RGF0YShcIlRleHRcIiwgZS50YXJnZXQuaWQpO1xyXG4gICAgICB9KTtcclxuICAgICAgY3JlYXRlZC5hcHBlbmRDaGlsZCh0aGlzLmltZyk7XHJcblxyXG4gICAgICBsZXQgbmFtZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibmFtZVwiKS52YWx1ZTtcclxuICAgICAgbGV0IGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImVsZW1lbnRcIikudmFsdWU7XHJcbiAgICAgIGxldCBhcm1zID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhcm1zXCIpLnZhbHVlO1xyXG4gICAgICBsZXQgdHlwZWFybXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInR5cGVfYXJtc1wiKS52YWx1ZTtcclxuICAgICAgbGV0IGxlZ3MgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxlZ3NcIikudmFsdWU7XHJcbiAgICAgIGxldCBleWVzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJleWVzXCIpLnZhbHVlO1xyXG4gICAgICBsZXQgZnVydHlwZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZnVydHlwZVwiKS52YWx1ZTtcclxuICAgICAgbGV0IGZseSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZmx5XCIpLnZhbHVlO1xyXG4gICAgICBsZXQgc3dpbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3dpbVwiKS52YWx1ZTtcclxuICAgICAgbGV0IGNvbG91ciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29sb3VyXCIpLnZhbHVlO1xyXG4gICAgICBcclxuICAgICAgY29udHJvbGxlci5hZGRNb25zdGVyKG5hbWUsIGVsZW1lbnQsIGFybXMsIHR5cGVhcm1zLCBsZWdzLCBleWVzLCBmdXJ0eXBlLCBmbHksIHN3aW0sIGNvbG91ciwgbnVsbCwgbnVsbCwgbnVsbCk7XHJcblxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBjbGVhckZvcm0oKSB7XHJcbiAgICBsZXQgZm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibW9uc3Rlcl9mb3JtXCIpO1xyXG4gICAgd2hpbGUgKGZvcm0uaGFzQ2hpbGROb2RlcygpKSB7XHJcbiAgICAgIGZvcm0ucmVtb3ZlQ2hpbGQoZm9ybS5maXJzdENoaWxkKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHNldEVsZW1lbnRFdmVudHMoY29udHJvbGxlcikge1xyXG4gICAgbGV0IG93bmNsYXNzID0gdGhpcztcclxuICAgIHRoaXMucmFkaW9fZmlyZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICBpZiAodGhpcy5jaGVja2VkKSB7XHJcbiAgICAgICAgICAgIG93bmNsYXNzLmNsZWFyRm9ybSgpO1xyXG4gICAgICAgICAgICBvd25jbGFzcy5nZW5lcmFsRnJvbSgpO1xyXG5cclxuICAgICAgICAgICAgbGV0IGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImVsZW1lbnRcIik7XHJcbiAgICAgICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgXCJmaXJlXCIpO1xyXG5cclxuICAgICAgICAgICAgbGV0IGFybXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFybXNcIik7XHJcblxyXG4gICAgICAgICAgICBsZXQgYW1vdW50YXJtcyA9IGNvbnRyb2xsZXIuZ2V0QXJtcyhcImZpcmVcIik7XHJcblxyXG4gICAgICAgICAgICBhbW91bnRhcm1zLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgICAgbGV0IG9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XHJcbiAgICAgICAgICAgICAgb3B0aW9uLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIGAke2VsZW1lbnR9YCk7XHJcbiAgICAgICAgICAgICAgb3B0aW9uLmlubmVySFRNTCA9IGVsZW1lbnQ7XHJcbiAgICAgICAgICAgICAgYXJtcy5hcHBlbmRDaGlsZChvcHRpb24pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgXHJcblxyXG4gICAgICAgICAgICBsZXQgdHlwZWFybXNzZWxlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInR5cGVfYXJtc1wiKTtcclxuXHJcbiAgICAgICAgICAgIGxldCBhcm10eXBlcyA9IGNvbnRyb2xsZXIuZ2V0VHlwZUFybXMoXCJmaXJlXCIpO1xyXG5cclxuICAgICAgICAgICAgYXJtdHlwZXMuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuICAgICAgICAgICAgICBsZXQgb3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcclxuICAgICAgICAgICAgICBvcHRpb24uc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgYCR7ZWxlbWVudH1gKTtcclxuICAgICAgICAgICAgICBvcHRpb24uaW5uZXJIVE1MID0gZWxlbWVudDtcclxuICAgICAgICAgICAgICB0eXBlYXJtc3NlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24pO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIGxldCBsZWdzbGFiZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxlZ3NsYWJlbFwiKTtcclxuICAgICAgICAgICAgbGVnc2xhYmVsLmlubmVySFRNTCA9IFwiTGVnczogXCI7XHJcblxyXG4gICAgICAgICAgICBsZXQgbGVnc3NlbGVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibGVnc1wiKTtcclxuICAgICAgICAgICAgbGV0IGxlZ3NvcHRpb25zID0gY29udHJvbGxlci5nZXRMZWdzKFwiZmlyZVwiKTtcclxuXHJcbiAgICAgICAgICAgIGxlZ3NvcHRpb25zLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgICAgbGV0IG9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XHJcbiAgICAgICAgICAgICAgb3B0aW9uLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIGAke2VsZW1lbnR9YCk7XHJcbiAgICAgICAgICAgICAgb3B0aW9uLmlubmVySFRNTCA9IGVsZW1lbnQ7XHJcbiAgICAgICAgICAgICAgbGVnc3NlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24pO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIGxldCBleWVzc2VsZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJleWVzXCIpO1xyXG5cclxuICAgICAgICAgICAgbGV0IGV5ZXMgPSBjb250cm9sbGVyLmdldEV5ZXMoXCJmaXJlXCIpO1xyXG5cclxuICAgICAgICAgICAgZXllcy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xyXG4gICAgICAgICAgICAgIGxldCBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xyXG4gICAgICAgICAgICAgIG9wdGlvbi5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBgJHtlbGVtZW50fWApO1xyXG4gICAgICAgICAgICAgIG9wdGlvbi5pbm5lckhUTUwgPSBlbGVtZW50O1xyXG4gICAgICAgICAgICAgIGV5ZXNzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uKTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBsZXQgZnVydHlwZXNlbGVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZnVydHlwZVwiKTtcclxuXHJcbiAgICAgICAgICAgIGxldCBmdXJ0eXBlcyA9IGNvbnRyb2xsZXIuZ2V0RnVyVHlwZShcImZpcmVcIik7XHJcblxyXG4gICAgICAgICAgICBmdXJ0eXBlcy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xyXG4gICAgICAgICAgICAgIGxldCBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xyXG4gICAgICAgICAgICAgIG9wdGlvbi5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBgJHtlbGVtZW50fWApO1xyXG4gICAgICAgICAgICAgIG9wdGlvbi5pbm5lckhUTUwgPSBlbGVtZW50O1xyXG4gICAgICAgICAgICAgIGZ1cnR5cGVzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgZnVydHlwZXNlbGVjdC5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsICgpID0+eyBcclxuICAgICAgICAgICAgICBpZihmdXJ0eXBlLnZhbHVlID09IFwiRmVhdGhlcnNcIil7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZseWxhYmVsXCIpLmlubmVySFRNTCA9IFwiQ2FuIGZseTogeWVzXCI7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZseWxhYmVsXCIpLmlubmVySFRNTCA9IFwiQ2FuIGZseTogbm9cIjtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgbGV0IGZseWxhYmVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmbHlsYWJlbFwiKTtcclxuICAgICAgICAgICAgbGV0IGZseSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZmx5XCIpO1xyXG5cclxuICAgICAgICAgICAgZmx5bGFiZWwuaW5uZXJIVE1MID0gXCJDYW4gZmx5OiBcIiArIGNvbnRyb2xsZXIuZ2V0Rmx5KFwiZmlyZVwiKTtcclxuICAgICAgICAgICAgZmx5LnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIGNvbnRyb2xsZXIuZ2V0Rmx5KFwiZmlyZVwiKSk7XHJcblxyXG4gICAgICAgICAgICBsZXQgc3dpbWxhYmVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzd2ltbGFiZWxcIik7XHJcbiAgICAgICAgICAgIGxldCBzd2ltID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzd2ltXCIpO1xyXG5cclxuICAgICAgICAgICAgc3dpbWxhYmVsLmlubmVySFRNTCA9IFwiQ2FuIHN3aW06IFwiICsgY29udHJvbGxlci5nZXRTd2ltKFwiZmlyZVwiKTtcclxuICAgICAgICAgICAgc3dpbS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBjb250cm9sbGVyLmdldFN3aW0oXCJmaXJlXCIpKTtcclxuXHJcbiAgICAgICAgICAgIGxldCBjb2xvdXJzZWxlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvbG91clwiKTtcclxuXHJcbiAgICAgICAgICAgIGxldCBjb2xvdXJzID0gY29udHJvbGxlci5nZXRDb2xvcihcImZpcmVcIik7XHJcblxyXG4gICAgICAgICAgICBjb2xvdXJzLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgICAgbGV0IG9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XHJcbiAgICAgICAgICAgICAgb3B0aW9uLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIGAke2VsZW1lbnR9YCk7XHJcbiAgICAgICAgICAgICAgb3B0aW9uLmlubmVySFRNTCA9IGVsZW1lbnQ7XHJcbiAgICAgICAgICAgICAgY29sb3Vyc2VsZWN0LmFwcGVuZENoaWxkKG9wdGlvbik7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMucmFkaW9fZmlyZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy51cGRhdGVGb3JtKHRoaXMuY29udHJvbGxlcikpO1xyXG5cclxuICAgIHRoaXMucmFkaW9fd2F0ZXIuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKCkge1xyXG4gICAgICBpZiAodGhpcy5jaGVja2VkKSB7XHJcbiAgICAgICAgb3duY2xhc3MuY2xlYXJGb3JtKCk7XHJcbiAgICAgICAgb3duY2xhc3MuZ2VuZXJhbEZyb20oKTtcclxuXHJcbiAgICAgICAgbGV0IGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImVsZW1lbnRcIik7XHJcbiAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBcIndhdGVyXCIpO1xyXG5cclxuICAgICAgICBsZXQgYXJtcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYXJtc1wiKTtcclxuXHJcbiAgICAgICAgbGV0IGFtb3VudGFybXMgPSBjb250cm9sbGVyLmdldEFybXMoXCJ3YXRlclwiKTtcclxuXHJcbiAgICAgICAgYW1vdW50YXJtcy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xyXG4gICAgICAgICAgbGV0IG9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XHJcbiAgICAgICAgICBvcHRpb24uc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgYCR7ZWxlbWVudH1gKTtcclxuICAgICAgICAgIG9wdGlvbi5pbm5lckhUTUwgPSBlbGVtZW50O1xyXG4gICAgICAgICAgYXJtcy5hcHBlbmRDaGlsZChvcHRpb24pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIFxyXG5cclxuICAgICAgICBsZXQgdHlwZWFybXNzZWxlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInR5cGVfYXJtc1wiKTtcclxuXHJcbiAgICAgICAgbGV0IGFybXR5cGVzID0gY29udHJvbGxlci5nZXRUeXBlQXJtcyhcIndhdGVyXCIpO1xyXG5cclxuICAgICAgICBhcm10eXBlcy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xyXG4gICAgICAgICAgbGV0IG9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XHJcbiAgICAgICAgICBvcHRpb24uc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgYCR7ZWxlbWVudH1gKTtcclxuICAgICAgICAgIG9wdGlvbi5pbm5lckhUTUwgPSBlbGVtZW50O1xyXG4gICAgICAgICAgdHlwZWFybXNzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgbGV0IGxlZ3NsYWJlbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibGVnc2xhYmVsXCIpO1xyXG4gICAgICAgIGxlZ3NsYWJlbC5pbm5lckhUTUwgPSBcIkxlZ3M6IFwiO1xyXG5cclxuICAgICAgICBsZXQgbGVnc3NlbGVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibGVnc1wiKTtcclxuICAgICAgICBsZXQgbGVnc29wdGlvbnMgPSBjb250cm9sbGVyLmdldExlZ3MoXCJ3YXRlclwiKTtcclxuXHJcbiAgICAgICAgbGVnc29wdGlvbnMuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuICAgICAgICAgIGxldCBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xyXG4gICAgICAgICAgb3B0aW9uLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIGAke2VsZW1lbnR9YCk7XHJcbiAgICAgICAgICBvcHRpb24uaW5uZXJIVE1MID0gZWxlbWVudDtcclxuICAgICAgICAgIGxlZ3NzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgbGV0IGV5ZXNzZWxlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImV5ZXNcIik7XHJcblxyXG4gICAgICAgIGxldCBleWVzID0gY29udHJvbGxlci5nZXRFeWVzKFwid2F0ZXJcIik7XHJcblxyXG4gICAgICAgIGV5ZXMuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuICAgICAgICAgIGxldCBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xyXG4gICAgICAgICAgb3B0aW9uLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIGAke2VsZW1lbnR9YCk7XHJcbiAgICAgICAgICBvcHRpb24uaW5uZXJIVE1MID0gZWxlbWVudDtcclxuICAgICAgICAgIGV5ZXNzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgbGV0IGZ1cnR5cGVzZWxlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZ1cnR5cGVcIik7XHJcblxyXG4gICAgICAgIGxldCBmdXJ0eXBlcyA9IGNvbnRyb2xsZXIuZ2V0RnVyVHlwZShcIndhdGVyXCIpO1xyXG5cclxuICAgICAgICBmdXJ0eXBlcy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xyXG4gICAgICAgICAgbGV0IG9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XHJcbiAgICAgICAgICBvcHRpb24uc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgYCR7ZWxlbWVudH1gKTtcclxuICAgICAgICAgIG9wdGlvbi5pbm5lckhUTUwgPSBlbGVtZW50O1xyXG4gICAgICAgICAgZnVydHlwZXNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24pO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBsZXQgZmx5bGFiZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZseWxhYmVsXCIpO1xyXG4gICAgICAgIGxldCBmbHkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZseVwiKTtcclxuXHJcbiAgICAgICAgZmx5bGFiZWwuaW5uZXJIVE1MID0gXCJDYW4gZmx5OiBcIiArIGNvbnRyb2xsZXIuZ2V0Rmx5KFwid2F0ZXJcIik7XHJcbiAgICAgICAgZmx5LnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIGNvbnRyb2xsZXIuZ2V0Rmx5KFwid2F0ZXJcIikpO1xyXG5cclxuICAgICAgICBsZXQgc3dpbWxhYmVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzd2ltbGFiZWxcIik7XHJcbiAgICAgICAgbGV0IHN3aW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInN3aW1cIik7XHJcblxyXG4gICAgICAgIHN3aW1sYWJlbC5pbm5lckhUTUwgPSBcIkNhbiBzd2ltOiBcIiArIGNvbnRyb2xsZXIuZ2V0U3dpbShcIndhdGVyXCIpO1xyXG4gICAgICAgIHN3aW0uc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgY29udHJvbGxlci5nZXRTd2ltKFwid2F0ZXJcIikpO1xyXG5cclxuICAgICAgICBsZXQgY29sb3Vyc2VsZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb2xvdXJcIik7XHJcblxyXG4gICAgICAgIGxldCBjb2xvdXJzID0gY29udHJvbGxlci5nZXRDb2xvcihcIndhdGVyXCIpO1xyXG5cclxuICAgICAgICBjb2xvdXJzLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgICBsZXQgb3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcclxuICAgICAgICAgIG9wdGlvbi5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBgJHtlbGVtZW50fWApO1xyXG4gICAgICAgICAgb3B0aW9uLmlubmVySFRNTCA9IGVsZW1lbnQ7XHJcbiAgICAgICAgICBjb2xvdXJzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBcclxuICAgICAgfVxyXG59KTtcclxuXHJcbnRoaXMucmFkaW9fd2F0ZXIuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMudXBkYXRlRm9ybSh0aGlzLmNvbnRyb2xsZXIpKTtcclxuXHJcblxyXG50aGlzLnJhZGlvX2VhcnRoLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbigpIHtcclxuICBpZiAodGhpcy5jaGVja2VkKSB7XHJcbiAgICBvd25jbGFzcy5jbGVhckZvcm0oKTtcclxuICAgIG93bmNsYXNzLmdlbmVyYWxGcm9tKCk7XHJcblxyXG4gICAgbGV0IGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImVsZW1lbnRcIik7XHJcbiAgICBlbGVtZW50LnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIFwiZWFydGhcIik7XHJcblxyXG4gICAgbGV0IGFybXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFybXNcIik7XHJcblxyXG4gICAgbGV0IGFtb3VudGFybXMgPSBjb250cm9sbGVyLmdldEFybXMoXCJlYXJ0aFwiKTtcclxuXHJcbiAgICBhbW91bnRhcm1zLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgIGxldCBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xyXG4gICAgICBvcHRpb24uc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgYCR7ZWxlbWVudH1gKTtcclxuICAgICAgb3B0aW9uLmlubmVySFRNTCA9IGVsZW1lbnQ7XHJcbiAgICAgIGFybXMuYXBwZW5kQ2hpbGQob3B0aW9uKTtcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICBsZXQgdHlwZWFybXNzZWxlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInR5cGVfYXJtc1wiKTtcclxuXHJcbiAgICBsZXQgYXJtdHlwZXMgPSBjb250cm9sbGVyLmdldFR5cGVBcm1zKFwiZWFydGhcIik7XHJcblxyXG4gICAgYXJtdHlwZXMuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuICAgICAgbGV0IG9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XHJcbiAgICAgIG9wdGlvbi5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBgJHtlbGVtZW50fWApO1xyXG4gICAgICBvcHRpb24uaW5uZXJIVE1MID0gZWxlbWVudDtcclxuICAgICAgdHlwZWFybXNzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGxldCBsZWdzbGFiZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxlZ3NsYWJlbFwiKTtcclxuICAgIGxlZ3NsYWJlbC5pbm5lckhUTUwgPSBcIkxlZ3M6IFwiO1xyXG5cclxuICAgIGxldCBsZWdzc2VsZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsZWdzXCIpO1xyXG4gICAgbGV0IGxlZ3NvcHRpb25zID0gY29udHJvbGxlci5nZXRMZWdzKFwiZWFydGhcIik7XHJcblxyXG4gICAgbGVnc29wdGlvbnMuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuICAgICAgbGV0IG9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XHJcbiAgICAgIG9wdGlvbi5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBgJHtlbGVtZW50fWApO1xyXG4gICAgICBvcHRpb24uaW5uZXJIVE1MID0gZWxlbWVudDtcclxuICAgICAgbGVnc3NlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgbGV0IGV5ZXNzZWxlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImV5ZXNcIik7XHJcblxyXG4gICAgbGV0IGV5ZXMgPSBjb250cm9sbGVyLmdldEV5ZXMoXCJlYXJ0aFwiKTtcclxuXHJcbiAgICBleWVzLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgIGxldCBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xyXG4gICAgICBvcHRpb24uc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgYCR7ZWxlbWVudH1gKTtcclxuICAgICAgb3B0aW9uLmlubmVySFRNTCA9IGVsZW1lbnQ7XHJcbiAgICAgIGV5ZXNzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGxldCBmdXJ0eXBlc2VsZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmdXJ0eXBlXCIpO1xyXG5cclxuICAgIGxldCBmdXJ0eXBlcyA9IGNvbnRyb2xsZXIuZ2V0RnVyVHlwZShcImVhcnRoXCIpO1xyXG5cclxuICAgIGZ1cnR5cGVzLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgIGxldCBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xyXG4gICAgICBvcHRpb24uc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgYCR7ZWxlbWVudH1gKTtcclxuICAgICAgb3B0aW9uLmlubmVySFRNTCA9IGVsZW1lbnQ7XHJcbiAgICAgIGZ1cnR5cGVzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGxldCBmbHlsYWJlbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZmx5bGFiZWxcIik7XHJcbiAgICBsZXQgZmx5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmbHlcIik7XHJcblxyXG4gICAgZmx5bGFiZWwuaW5uZXJIVE1MID0gXCJDYW4gZmx5OiBcIiArIGNvbnRyb2xsZXIuZ2V0Rmx5KFwiZWFydGhcIik7XHJcbiAgICBmbHkuc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgY29udHJvbGxlci5nZXRGbHkoXCJlYXJ0aFwiKSk7XHJcblxyXG4gICAgbGV0IHN3aW1sYWJlbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3dpbWxhYmVsXCIpO1xyXG4gICAgbGV0IHN3aW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInN3aW1cIik7XHJcblxyXG4gICAgc3dpbWxhYmVsLmlubmVySFRNTCA9IFwiQ2FuIHN3aW06IFwiICsgY29udHJvbGxlci5nZXRTd2ltKFwiZWFydGhcIik7XHJcbiAgICBzd2ltLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIGNvbnRyb2xsZXIuZ2V0U3dpbShcImVhcnRoXCIpKTtcclxuXHJcbiAgICBsZXQgY29sb3Vyc2VsZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb2xvdXJcIik7XHJcblxyXG4gICAgbGV0IGNvbG91cnMgPSBjb250cm9sbGVyLmdldENvbG9yKFwiZWFydGhcIik7XHJcblxyXG4gICAgY29sb3Vycy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xyXG4gICAgICBsZXQgb3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcclxuICAgICAgb3B0aW9uLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIGAke2VsZW1lbnR9YCk7XHJcbiAgICAgIG9wdGlvbi5pbm5lckhUTUwgPSBlbGVtZW50O1xyXG4gICAgICBjb2xvdXJzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uKTtcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgfVxyXG59KTtcclxuXHJcbnRoaXMucmFkaW9fZWFydGguYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMudXBkYXRlRm9ybSh0aGlzLmNvbnRyb2xsZXIpKTtcclxuXHJcbnRoaXMucmFkaW9fd2luZC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuY2hlY2tlZCkge1xyXG4gICAgICAgICAgb3duY2xhc3MuY2xlYXJGb3JtKCk7XHJcbiAgICAgICAgICBvd25jbGFzcy5nZW5lcmFsRnJvbSgpO1xyXG5cclxuICAgICAgICAgIGxldCBlbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJlbGVtZW50XCIpO1xyXG4gICAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBcIndpbmRcIik7XHJcblxyXG4gICAgICAgICAgbGV0IGFybXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFybXNcIik7XHJcblxyXG4gICAgICAgICAgbGV0IGFtb3VudGFybXMgPSBjb250cm9sbGVyLmdldEFybXMoXCJ3aW5kXCIpO1xyXG5cclxuICAgICAgICAgIGFtb3VudGFybXMuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuICAgICAgICAgICAgbGV0IG9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XHJcbiAgICAgICAgICAgIG9wdGlvbi5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBgJHtlbGVtZW50fWApO1xyXG4gICAgICAgICAgICBvcHRpb24uaW5uZXJIVE1MID0gZWxlbWVudDtcclxuICAgICAgICAgICAgYXJtcy5hcHBlbmRDaGlsZChvcHRpb24pO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgICBcclxuXHJcbiAgICAgICAgICBsZXQgdHlwZWFybXNzZWxlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInR5cGVfYXJtc1wiKTtcclxuXHJcbiAgICAgICAgICBsZXQgYXJtdHlwZXMgPSBjb250cm9sbGVyLmdldFR5cGVBcm1zKFwid2luZFwiKTtcclxuXHJcbiAgICAgICAgICBhcm10eXBlcy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xyXG4gICAgICAgICAgICBsZXQgb3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcclxuICAgICAgICAgICAgb3B0aW9uLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIGAke2VsZW1lbnR9YCk7XHJcbiAgICAgICAgICAgIG9wdGlvbi5pbm5lckhUTUwgPSBlbGVtZW50O1xyXG4gICAgICAgICAgICB0eXBlYXJtc3NlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24pO1xyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgbGV0IGxlZ3NsYWJlbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibGVnc2xhYmVsXCIpO1xyXG4gICAgICAgICAgbGVnc2xhYmVsLmlubmVySFRNTCA9IFwiTGVnczogXCI7XHJcblxyXG4gICAgICAgICAgbGV0IGxlZ3NzZWxlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxlZ3NcIik7XHJcbiAgICAgICAgICBsZXQgbGVnc29wdGlvbnMgPSBjb250cm9sbGVyLmdldExlZ3MoXCJ3aW5kXCIpO1xyXG5cclxuICAgICAgICAgIGxlZ3NvcHRpb25zLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgIGxldCBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xyXG4gICAgICAgICAgICBvcHRpb24uc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgYCR7ZWxlbWVudH1gKTtcclxuICAgICAgICAgICAgb3B0aW9uLmlubmVySFRNTCA9IGVsZW1lbnQ7XHJcbiAgICAgICAgICAgIGxlZ3NzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uKTtcclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgIGxldCBleWVzc2VsZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJleWVzXCIpO1xyXG5cclxuICAgICAgICAgIGxldCBleWVzID0gY29udHJvbGxlci5nZXRFeWVzKFwid2luZFwiKTtcclxuXHJcbiAgICAgICAgICBleWVzLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgIGxldCBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xyXG4gICAgICAgICAgICBvcHRpb24uc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgYCR7ZWxlbWVudH1gKTtcclxuICAgICAgICAgICAgb3B0aW9uLmlubmVySFRNTCA9IGVsZW1lbnQ7XHJcbiAgICAgICAgICAgIGV5ZXNzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uKTtcclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgIGxldCBmdXJ0eXBlc2VsZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmdXJ0eXBlXCIpO1xyXG5cclxuICAgICAgICAgIGxldCBmdXJ0eXBlcyA9IGNvbnRyb2xsZXIuZ2V0RnVyVHlwZShcIndpbmRcIik7XHJcblxyXG4gICAgICAgICAgZnVydHlwZXMuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuICAgICAgICAgICAgbGV0IG9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XHJcbiAgICAgICAgICAgIG9wdGlvbi5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBgJHtlbGVtZW50fWApO1xyXG4gICAgICAgICAgICBvcHRpb24uaW5uZXJIVE1MID0gZWxlbWVudDtcclxuICAgICAgICAgICAgZnVydHlwZXNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24pO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgIGZ1cnR5cGVzZWxlY3QuYWRkRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLCAoKSA9PiB7IFxyXG4gICAgICAgICAgICBpZihmdXJ0eXBlLnZhbHVlICE9IFwiRmVhdGhlcnNcIil7XHJcbiAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzd2ltbGFiZWxcIikuaW5uZXJIVE1MID0gXCJDYW4gc3dpbTogeWVzXCI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInN3aW1sYWJlbFwiKS5pbm5lckhUTUwgPSBcIkNhbiBzd2ltOiBub1wiO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICBsZXQgZmx5bGFiZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZseWxhYmVsXCIpO1xyXG4gICAgICAgICAgbGV0IGZseSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZmx5XCIpO1xyXG5cclxuICAgICAgICAgIGZseWxhYmVsLmlubmVySFRNTCA9IFwiQ2FuIGZseTogXCIgKyBjb250cm9sbGVyLmdldEZseShcIndpbmRcIik7XHJcbiAgICAgICAgICBmbHkuc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgY29udHJvbGxlci5nZXRGbHkoXCJ3aW5kXCIpKTtcclxuXHJcbiAgICAgICAgICBsZXQgc3dpbWxhYmVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzd2ltbGFiZWxcIik7XHJcbiAgICAgICAgICBsZXQgc3dpbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3dpbVwiKTtcclxuXHJcbiAgICAgICAgICBzd2ltbGFiZWwuaW5uZXJIVE1MID0gXCJDYW4gc3dpbTogXCIgKyBjb250cm9sbGVyLmdldFN3aW0oXCJ3aW5kXCIpO1xyXG4gICAgICAgICAgc3dpbS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBjb250cm9sbGVyLmdldFN3aW0oXCJ3aW5kXCIpKTtcclxuXHJcbiAgICAgICAgICBsZXQgY29sb3Vyc2VsZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb2xvdXJcIik7XHJcblxyXG4gICAgICAgICAgbGV0IGNvbG91cnMgPSBjb250cm9sbGVyLmdldENvbG9yKFwid2luZFwiKTtcclxuXHJcbiAgICAgICAgICBjb2xvdXJzLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgIGxldCBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xyXG4gICAgICAgICAgICBvcHRpb24uc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgYCR7ZWxlbWVudH1gKTtcclxuICAgICAgICAgICAgb3B0aW9uLmlubmVySFRNTCA9IGVsZW1lbnQ7XHJcbiAgICAgICAgICAgIGNvbG91cnNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24pO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgfSk7XHJcbnRoaXMucmFkaW9fd2luZC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy51cGRhdGVGb3JtKHRoaXMuY29udHJvbGxlcikpO1xyXG5cclxuICB9XHJcblxyXG4gIGdlbmVyYWxGcm9tKCl7XHJcbiAgICBsZXQgZm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibW9uc3Rlcl9mb3JtXCIpO1xyXG4gICAgICAgICAgICAvLyBUT0RPOiBSZW1vdmUgcHJldmlvdXMgZm9ybVxyXG5cclxuICAgICAgICAgICAgbGV0IGZpZWxkc2V0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZpZWxkc2V0XCIpO1xyXG4gICAgICAgICAgICBsZXQgbmFtZWxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xyXG4gICAgICAgICAgICBuYW1lbGFiZWwuaW5uZXJIVE1MID0gXCJOYW1lOlwiO1xyXG4gICAgICAgICAgICBsZXQgbmFtZWlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xyXG4gICAgICAgICAgICBuYW1laW5wdXQuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJuYW1lXCIpO1xyXG4gICAgICAgICAgICBuYW1laW5wdXQuc2V0QXR0cmlidXRlKFwibmFtZVwiLCBcIm5hbWVcIik7XHJcblxyXG4gICAgICAgICAgICBmaWVsZHNldC5hcHBlbmRDaGlsZChuYW1lbGFiZWwpO1xyXG4gICAgICAgICAgICBmaWVsZHNldC5hcHBlbmRDaGlsZChuYW1laW5wdXQpO1xyXG5cclxuICAgICAgICAgICAgZm9ybS5hcHBlbmRDaGlsZChmaWVsZHNldCk7XHJcblxyXG4gICAgICAgICAgICBsZXQgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcclxuICAgICAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImVsZW1lbnRcIik7XHJcbiAgICAgICAgICAgIC8vIFZhbHVlIHdpbGwgYmUgc2V0IGJ5IGVsZW1lbnRcclxuICAgICAgICAgICAgZWxlbWVudC5oaWRkZW4gPSB0cnVlO1xyXG5cclxuICAgICAgICAgICAgZm9ybS5hcHBlbmRDaGlsZChlbGVtZW50KTtcclxuXHJcbiAgICAgICAgICAgIGxldCBmaWVsZHNldDIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZmllbGRzZXRcIik7XHJcbiAgICAgICAgICAgIGxldCBhcm1zbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XHJcbiAgICAgICAgICAgIGFybXNsYWJlbC5pbm5lckhUTUwgPSBcIkFybXM6XCI7XHJcbiAgICAgICAgICAgIGxldCBzZWxlY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2VsZWN0XCIpO1xyXG4gICAgICAgICAgICBzZWxlY3Quc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJhcm1zXCIpO1xyXG4gICAgICAgICAgICAvLyBBbW91bnQgb2Ygb3B0aW9ucyBzd2lsIGJlIHNldCBieSBlbGVtZW50XHJcblxyXG4gICAgICAgICAgICBmaWVsZHNldDIuYXBwZW5kQ2hpbGQoYXJtc2xhYmVsKTtcclxuICAgICAgICAgICAgZmllbGRzZXQyLmFwcGVuZENoaWxkKHNlbGVjdCk7XHJcblxyXG4gICAgICAgICAgICBmb3JtLmFwcGVuZENoaWxkKGZpZWxkc2V0Mik7XHJcblxyXG4gICAgICAgICAgICBsZXQgZmllbGRzZXQzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZpZWxkc2V0XCIpO1xyXG4gICAgICAgICAgICBsZXQgdHlwZWFybXNsYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcclxuICAgICAgICAgICAgdHlwZWFybXNsYWJlbC5pbm5lckhUTUwgPSBcIlR5cGUgYXJtczpcIlxyXG5cclxuICAgICAgICAgICAgbGV0IHR5cGVhcm1zc2VsZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNlbGVjdFwiKTtcclxuICAgICAgICAgICAgdHlwZWFybXNzZWxlY3Quc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJ0eXBlX2FybXNcIik7XHJcblxyXG4gICAgICAgICAgICBmaWVsZHNldDMuYXBwZW5kQ2hpbGQodHlwZWFybXNzZWxlY3QpO1xyXG5cclxuICAgICAgICAgICAgZm9ybS5hcHBlbmRDaGlsZCh0eXBlYXJtc2xhYmVsKTtcclxuICAgICAgICAgICAgZm9ybS5hcHBlbmRDaGlsZChmaWVsZHNldDMpO1xyXG5cclxuICAgICAgICAgICAgbGV0IGZpZWxkc2V0NCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmaWVsZHNldFwiKTtcclxuICAgICAgICAgICAgbGV0IGxlZ3NsYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcclxuICAgICAgICAgICAgbGVnc2xhYmVsLnNldEF0dHJpYnV0ZShcImlkXCIsIFwibGVnc2xhYmVsXCIpO1xyXG4gICAgICAgICAgICBsZWdzbGFiZWwuaW5uZXJIVE1MID0gXCJMZWdzOiBcIjtcclxuXHJcbiAgICAgICAgICAgIGxldCBsZWdzc2VsZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNlbGVjdFwiKTtcclxuICAgICAgICAgICAgbGVnc3NlbGVjdC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImxlZ3NcIik7XHJcblxyXG4gICAgICAgICAgICBmaWVsZHNldDQuYXBwZW5kQ2hpbGQobGVnc2xhYmVsKTtcclxuICAgICAgICAgICAgZmllbGRzZXQ0LmFwcGVuZENoaWxkKGxlZ3NzZWxlY3QpO1xyXG4gICAgICAgICAgICBmb3JtLmFwcGVuZENoaWxkKGZpZWxkc2V0NCk7XHJcblxyXG4gICAgICAgICAgICBsZXQgZmllbGRzZXQ5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZpZWxkc2V0XCIpO1xyXG4gICAgICAgICAgICBsZXQgZXllc2xhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xyXG4gICAgICAgICAgICBleWVzbGFiZWwuaW5uZXJIVE1MID0gXCJFeWVzOlwiO1xyXG4gICAgICAgICAgICBsZXQgc2VsZWN0MiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzZWxlY3RcIik7XHJcbiAgICAgICAgICAgIHNlbGVjdDIuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJleWVzXCIpO1xyXG4gICAgICAgICAgICAvLyBBbW91bnQgb2YgZXllcyBzZXQgYnkgZWxlbWVudFxyXG5cclxuICAgICAgICAgICAgZmllbGRzZXQ5LmFwcGVuZENoaWxkKGV5ZXNsYWJlbCk7XHJcbiAgICAgICAgICAgIGZpZWxkc2V0OS5hcHBlbmRDaGlsZChzZWxlY3QyKTtcclxuXHJcbiAgICAgICAgICAgIGZvcm0uYXBwZW5kKGZpZWxkc2V0OSk7XHJcblxyXG4gICAgICAgICAgICBsZXQgZmllbGRzZXQ1ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZpZWxkc2V0XCIpO1xyXG4gICAgICAgICAgICBsZXQgZnVydHlwZWxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xyXG4gICAgICAgICAgICBmdXJ0eXBlbGFiZWwuaW5uZXJIVE1MID0gXCJGdXIgdHlwZTpcIjtcclxuICAgICAgICAgICAgbGV0IHR5cGVmdXJzZWxlY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2VsZWN0XCIpO1xyXG4gICAgICAgICAgICB0eXBlZnVyc2VsZWN0LnNldEF0dHJpYnV0ZShcImlkXCIsIFwiZnVydHlwZVwiKTtcclxuXHJcbiAgICAgICAgICAgIGZpZWxkc2V0NS5hcHBlbmRDaGlsZChmdXJ0eXBlbGFiZWwpO1xyXG4gICAgICAgICAgICBmaWVsZHNldDUuYXBwZW5kQ2hpbGQodHlwZWZ1cnNlbGVjdCk7XHJcbiAgICAgICAgICAgIGZvcm0uYXBwZW5kQ2hpbGQoZmllbGRzZXQ1KTtcclxuXHJcbiAgICAgICAgICAgIGxldCBmaWVsZHNldDYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZmllbGRzZXRcIik7XHJcbiAgICAgICAgICAgIGxldCBmbHlsYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcclxuICAgICAgICAgICAgZmx5bGFiZWwuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJmbHlsYWJlbFwiKVxyXG4gICAgICAgICAgICBmbHlsYWJlbC5pbm5lckhUTUwgPSBcIkNhbiBmbHk6IFwiO1xyXG4gICAgICAgICAgICBsZXQgZmx5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xyXG4gICAgICAgICAgICBmbHkuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJmbHlcIik7XHJcbiAgICAgICAgICAgIGZseS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBcIlwiKTtcclxuICAgICAgICAgICAgZmx5LnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwiaGlkZGVuXCIpO1xyXG5cclxuICAgICAgICAgICAgZmllbGRzZXQ2LmFwcGVuZENoaWxkKGZseWxhYmVsKTtcclxuICAgICAgICAgICAgZmllbGRzZXQ2LmFwcGVuZENoaWxkKGZseSk7XHJcblxyXG4gICAgICAgICAgICBmb3JtLmFwcGVuZENoaWxkKGZpZWxkc2V0Nik7XHJcblxyXG4gICAgICAgICAgICBsZXQgZmllbGRzZXQ3ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZpZWxkc2V0XCIpO1xyXG4gICAgICAgICAgICBsZXQgc3dpbWxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xyXG4gICAgICAgICAgICBzd2ltbGFiZWwuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJzd2ltbGFiZWxcIilcclxuICAgICAgICAgICAgc3dpbWxhYmVsLmlubmVySFRNTCA9IFwiQ2FuIHN3aW06IFwiO1xyXG4gICAgICAgICAgICBsZXQgc3dpbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcclxuICAgICAgICAgICAgc3dpbS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcInN3aW1cIik7XHJcbiAgICAgICAgICAgIHN3aW0uc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgXCJcIik7XHJcbiAgICAgICAgICAgIHN3aW0uc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJoaWRkZW5cIik7XHJcblxyXG4gICAgICAgICAgICBmaWVsZHNldDYuYXBwZW5kQ2hpbGQoc3dpbWxhYmVsKTtcclxuICAgICAgICAgICAgZmllbGRzZXQ2LmFwcGVuZENoaWxkKHN3aW0pO1xyXG5cclxuICAgICAgICAgICAgZm9ybS5hcHBlbmRDaGlsZChmaWVsZHNldDcpO1xyXG5cclxuICAgICAgICAgICAgbGV0IGZpZWxkc2V0OCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmaWVsZHNldFwiKTtcclxuICAgICAgICAgICAgbGV0IGNvbG91cmxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xyXG4gICAgICAgICAgICBjb2xvdXJsYWJlbC5pbm5lckhUTUwgPSBcIkNvbG91cjpcIlxyXG5cclxuICAgICAgICAgICAgbGV0IGNvbG91cnNlbGVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzZWxlY3RcIik7XHJcbiAgICAgICAgICAgIGNvbG91cnNlbGVjdC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImNvbG91clwiKTtcclxuXHJcbiAgICAgICAgICAgIGZpZWxkc2V0OC5hcHBlbmRDaGlsZChjb2xvdXJzZWxlY3QpO1xyXG5cclxuICAgICAgICAgICAgZm9ybS5hcHBlbmRDaGlsZChjb2xvdXJsYWJlbCk7XHJcbiAgICAgICAgICAgIGZvcm0uYXBwZW5kQ2hpbGQoZmllbGRzZXQ4KTtcclxuXHJcbiAgICAgICAgICAgIGxldCBzdWJtaXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XHJcbiAgICAgICAgICAgIHN1Ym1pdC5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwic3VibWl0XCIpO1xyXG4gICAgICAgICAgICBzdWJtaXQuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJuZXMtYnRuIGlzLXN1Y2Nlc3NcIik7XHJcbiAgICAgICAgICAgIHN1Ym1pdC5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBcIlN1Ym1pdFwiKTtcclxuXHJcbiAgICAgICAgICAgIGZvcm0uYXBwZW5kQ2hpbGQoc3VibWl0KTtcclxuICAgICAgICAgICAgdGhpcy51cGRhdGVGb3JtKHRoaXMuY29udHJvbGxlcik7XHJcbiAgICAgICAgICB9XHJcbn1cclxuIiwiZXhwb3J0IGNsYXNzIE1hcFZpZXcge1xyXG4gIGNvbnN0cnVjdG9yKHpvb2NvbnRyb2xsZXIsIHdlYXRoZXJjb250cm9sbGVyKSB7XHJcbiAgICB0aGlzLm1hcCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFwXCIpO1xyXG4gICAgdGhpcy5yZW1vdmUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJlbW92ZVwiKTtcclxuXHJcbiAgICB0aGlzLnpvb2NvbnRyb2xsZXIgPSB6b29jb250cm9sbGVyO1xyXG4gICAgdGhpcy53ZWF0aGVyY29udHJvbGxlciA9IHdlYXRoZXJjb250cm9sbGVyO1xyXG5cclxuICAgIC8vIFpvbyB3aWR0aCAoencpIGFuZCB6b28gaGVpZ2h0ICh6aClcclxuXHJcbiAgICB0aGlzLnp3ID0gMTA7XHJcbiAgICB0aGlzLnpoID0gMTA7XHJcblxyXG4gICAgLy8gTG9hZCBidXR0b25zIGZyb20gaW5kZXguaHRtbFxyXG5cclxuICAgIGxldCBqdW5nbGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImp1bmdsZVwiKTtcclxuICAgIGxldCBkZXNlcnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRlc2VydFwiKTtcclxuICAgIGxldCBub3J0aHBvbGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm5vcnRocG9sZVwiKTtcclxuXHJcbiAgICBqdW5nbGUuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAganVuZ2xlLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibmVzLWJ0biBpcy1kaXNhYmxlZFwiKTtcclxuXHJcbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgIC8vIEJ1dHRvbnMgZm9yIHN3aXRjaGluZyBiZXR3ZWVuIGVudmlyb25tZW50c1xyXG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4gICAganVuZ2xlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIGlmIChqdW5nbGUuZGlzYWJsZWQgIT0gdHJ1ZSkge1xyXG4gICAgICAgIHRoaXMubG9hZEdyaWQoMCk7XHJcbiAgICAgICAganVuZ2xlLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICBkZXNlcnQuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICBub3J0aHBvbGUuZGlzYWJsZWQgPSBmYWxzZTtcclxuXHJcbiAgICAgICAganVuZ2xlLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibmVzLWJ0biBpcy1kaXNhYmxlZFwiKTtcclxuICAgICAgICBkZXNlcnQuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJuZXMtYnRuIGlzLXdhcm5pbmdcIik7XHJcbiAgICAgICAgbm9ydGhwb2xlLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibmVzLWJ0blwiKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgZGVzZXJ0LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIGlmIChkZXNlcnQuZGlzYWJsZWQgIT0gdHJ1ZSkge1xyXG4gICAgICAgIHRoaXMubG9hZEdyaWQoMik7XHJcbiAgICAgICAgZGVzZXJ0LmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICBqdW5nbGUuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICBub3J0aHBvbGUuZGlzYWJsZWQgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgZGVzZXJ0LnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibmVzLWJ0biBpcy1kaXNhYmxlZFwiKTtcclxuICAgICAgICBqdW5nbGUuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJuZXMtYnRuIGlzLXN1Y2Nlc3NcIik7XHJcbiAgICAgICAgbm9ydGhwb2xlLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibmVzLWJ0blwiKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgbm9ydGhwb2xlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIGlmIChub3J0aHBvbGUuZGlzYWJsZWQgIT0gdHJ1ZSkge1xyXG4gICAgICAgIHRoaXMubG9hZEdyaWQoMSk7XHJcbiAgICAgICAgbm9ydGhwb2xlLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICBkZXNlcnQuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICBqdW5nbGUuZGlzYWJsZWQgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgbm9ydGhwb2xlLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibmVzLWJ0biBpcy1kaXNhYmxlZFwiKTtcclxuICAgICAgICBqdW5nbGUuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJuZXMtYnRuIGlzLXN1Y2Nlc3NcIik7XHJcbiAgICAgICAgZGVzZXJ0LnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibmVzLWJ0biBpcy13YXJuaW5nXCIpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbiAgICAvLyBJbml0aWFsaXNlIHRoZSBtYXAgZnJvbSBqdW5nbGVcclxuICAgIHRoaXMubG9hZEdyaWQoMCk7XHJcbiAgfVxyXG5cclxuICBsb2FkR3JpZCh0ZXJyYWluKSB7XHJcbiAgICAvLyBUZXJyYWluIGluZGV4OiAwIGlzIGp1bmdsZSwgMSBpcyBub3J0aHBvbGUsIDMgaXMgZGVzZXJ0XHJcbiAgICB0aGlzLnRlcnJhaW4gPSB0ZXJyYWluO1xyXG4gICAgdGhpcy56b29jb250cm9sbGVyLmxvYWRHcmlkKHRoaXMpO1xyXG4gIH1cclxuXHJcbiAgcGFpbnRHcmlkKGdyaWQpIHtcclxuICAgIHRoaXMuZ3JpZCA9IGdyaWQ7XHJcbiAgICB0aGlzLnNlbGVjdGVkID0gdGhpcy5ncmlkW3RoaXMudGVycmFpbl0uZ3JpZDtcclxuICAgIHRoaXMud2VhdGhlcmNvbnRyb2xsZXIudXBkYXRlV2VhdGhlcihcclxuICAgICAgdGhpcy5ncmlkW3RoaXMudGVycmFpbl0ucmVmZXJlbmNlX2NpdHlcclxuICAgICk7XHJcbiAgICB0aGlzLmluaXRSZW1vdmUoKTtcclxuICAgIHRoaXMuZHJhd0JvYXJkKCk7XHJcbiAgfVxyXG5cclxuICBkcmF3Qm9hcmQoKSB7XHJcbiAgICBsZXQgb2xkQm9hcmQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImdyaWRcIik7XHJcbiAgICBpZiAob2xkQm9hcmQgIT0gbnVsbCkge1xyXG4gICAgICBvbGRCb2FyZC5yZW1vdmUoKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLnRhYmxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRhYmxlXCIpO1xyXG4gICAgdGhpcy50YWJsZS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImdyaWRcIik7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnp3OyBpKyspIHtcclxuICAgICAgdGhpcy50ciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0clwiKTtcclxuICAgICAgZm9yIChsZXQgeSA9IDA7IHkgPCB0aGlzLnpoOyB5KyspIHtcclxuICAgICAgICB0aGlzLnRkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRkXCIpO1xyXG5cclxuICAgICAgICAvLyBEcmFnIGFuZCBkcm9wIGV2ZW50c1xyXG4gICAgICAgIHRoaXMudGQuYWRkRXZlbnRMaXN0ZW5lcihcImRyYWdvdmVyXCIsIChlKSA9PiB7XHJcbiAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMudGQuYWRkRXZlbnRMaXN0ZW5lcihcImRyYWdlbnRlclwiLCAoZSkgPT4ge1xyXG4gICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBsZXQgZ3JpZCA9IHRoaXMuZ3JpZDtcclxuICAgICAgICBsZXQgdGVycmFpbiA9IHRoaXMudGVycmFpbjtcclxuICAgICAgICBsZXQgem9vY29udHJvbGxlciA9IHRoaXMuem9vY29udHJvbGxlcjtcclxuXHJcbiAgICAgICAgdGhpcy50ZC5hZGRFdmVudExpc3RlbmVyKFwiZHJvcFwiLCBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICBsZXQgZGF0YSA9IGUuZGF0YVRyYW5zZmVyLmdldERhdGEoXCJUZXh0XCIpO1xyXG4gICAgICAgICAgbGV0IG1vbnN0ZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChkYXRhKTtcclxuXHJcbiAgICAgICAgICBpZiAobW9uc3RlciAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIGlmIChcclxuICAgICAgICAgICAgICAhdGhpcy5oYXNDaGlsZE5vZGVzKCkgJiZcclxuICAgICAgICAgICAgICBtb25zdGVyLmdldEF0dHJpYnV0ZShcImRyYWdnYWJsZVwiKSA9PT0gXCJ0cnVlXCJcclxuICAgICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgICAgbGV0IG9yaWdpbiA9IG1vbnN0ZXIuZ2V0QXR0cmlidXRlKFwiaWRcIikuc3BsaXQoXCJ4XCIpO1xyXG4gICAgICAgICAgICAgIGxldCBjb29yZGlkID0gdGhpcy5nZXRBdHRyaWJ1dGUoXCJpZFwiKS5zcGxpdChcIi1cIik7XHJcblxyXG4gICAgICAgICAgICAgIGlmKG1vbnN0ZXIuZ2V0QXR0cmlidXRlKFwiaWRcIikgPT09IFwiLTF4LTFcIikge1xyXG4gICAgICAgICAgICAgICAgem9vY29udHJvbGxlci5hZGRNb25zdGVyVG9HcmlkKFxyXG4gICAgICAgICAgICAgICAgICBncmlkLFxyXG4gICAgICAgICAgICAgICAgICB0ZXJyYWluLFxyXG4gICAgICAgICAgICAgICAgICBjb29yZGlkWzBdLFxyXG4gICAgICAgICAgICAgICAgICBjb29yZGlkWzFdXHJcbiAgICAgICAgICAgICAgICApO1xyXG5cclxuICAgICAgICAgICAgICAgIGxldCBub3dncmlkID0gZ3JpZDtcclxuICAgICAgICAgICAgICAgIGxldCBtYXAgPSB0ZXJyYWluO1xyXG4gICAgICAgICAgICAgICAgbW9uc3Rlci5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcclxuICAgICAgICAgICAgICAgICAgbGV0IGNvb3JkcyA9IG1vbnN0ZXIuZ2V0QXR0cmlidXRlKFwiaWRcIikuc3BsaXQoXCJ4XCIpO1xyXG4gICAgICAgICAgICAgICAgICBsZXQgc2VsZWN0ZWRtb25zdGVyID0gem9vY29udHJvbGxlci5nZXRNb25zdGVyQnlQb3NpdGlvbihub3dncmlkLCBtYXAsIGNvb3Jkc1swXSwgY29vcmRzWzFdKTtcclxuICBcclxuICAgICAgXHJcbiAgICAgICAgICAgICAgICAgIGFsZXJ0KCdNb25zdGVyIHNlbGVjdGVkOiAnICsgc2VsZWN0ZWRtb25zdGVyLm5hbWUgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICdFbGVtZW50OiAnICsgc2VsZWN0ZWRtb25zdGVyLmVsZW1lbnQgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICdBcm1zOiAnICsgc2VsZWN0ZWRtb25zdGVyLmFybXMgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICdUeXBlIG9mIGFybXM6ICcgKyBzZWxlY3RlZG1vbnN0ZXIudHlwZWFybXMgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICdMZWdzOiAnICsgc2VsZWN0ZWRtb25zdGVyLmxlZ3MgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICdFeWVzOiAnICsgc2VsZWN0ZWRtb25zdGVyLmV5ZXMgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICdGdXIgdHlwZTogJyArIHNlbGVjdGVkbW9uc3Rlci5mdXJ0eXBlICsgJ1xcbicgK1xyXG4gICAgICAgICAgICAgICAgICAnQ2FuIGZseTogJyArIHNlbGVjdGVkbW9uc3Rlci5mbHkgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICdDYW4gc3dpbTogJyArIHNlbGVjdGVkbW9uc3Rlci5zd2ltICsgJ1xcbicgK1xyXG4gICAgICAgICAgICAgICAgICAnQ29sb3VyOiAnICsgc2VsZWN0ZWRtb25zdGVyLmNvbG91ciArICdcXG4nXHJcbiAgICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHpvb2NvbnRyb2xsZXIuYWRkRXhpc3RpbmdNb25zdGVyVG9HcmlkKFxyXG4gICAgICAgICAgICAgICAgICBncmlkLFxyXG4gICAgICAgICAgICAgICAgICB0ZXJyYWluLFxyXG4gICAgICAgICAgICAgICAgICBvcmlnaW5bMF0sXHJcbiAgICAgICAgICAgICAgICAgIG9yaWdpblsxXSxcclxuICAgICAgICAgICAgICAgICAgY29vcmRpZFswXSxcclxuICAgICAgICAgICAgICAgICAgY29vcmRpZFsxXVxyXG4gICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIGlmIChtb25zdGVyLmdldEF0dHJpYnV0ZShcImlkXCIpICE9PSBcIi0xeC0xXCIpIHtcclxuICAgICAgICAgICAgICAgIHpvb2NvbnRyb2xsZXIuZGVsZXRlTW9uc3RlckZyb21HcmlkKFxyXG4gICAgICAgICAgICAgICAgICBncmlkLFxyXG4gICAgICAgICAgICAgICAgICB0ZXJyYWluLFxyXG4gICAgICAgICAgICAgICAgICBvcmlnaW5bMF0sXHJcbiAgICAgICAgICAgICAgICAgIG9yaWdpblsxXVxyXG4gICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIG1vbnN0ZXIuc2V0QXR0cmlidXRlKFwiaWRcIiwgY29vcmRpZFswXSArIFwieFwiICsgY29vcmRpZFsxXSk7XHJcbiAgICAgICAgICAgICAgdGhpcy5hcHBlbmQobW9uc3Rlcik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy50ZC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBpICsgXCItXCIgKyB5KTtcclxuXHJcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnNlbGVjdGVkW2ldLkNvbHVtbnNbeV0gPT09IFwib2JqZWN0XCIpIHtcclxuICAgICAgICAgIGxldCBtb25zdGVyID0gdGhpcy5zZWxlY3RlZFtpXS5Db2x1bW5zW3ldO1xyXG4gICAgICAgICAgdGhpcy5pbWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xyXG4gICAgICAgICAgdGhpcy5pbWcuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJtb25zdGVyXCIpO1xyXG5cclxuICAgICAgICAgIC8vRXZlcnkgbW9uc3RlciBnZXRzIGFuIGlkIGJhc2VkIG9uIHRoZWlyIGNvb3JkaW5hdGVzXHJcbiAgICAgICAgICB0aGlzLmltZy5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBpICsgXCJ4XCIgKyB5KTtcclxuXHJcbiAgICAgICAgICBzd2l0Y2ggKG1vbnN0ZXIuZWxlbWVudCkge1xyXG4gICAgICAgICAgICBjYXNlIFwiZmlyZVwiOlxyXG4gICAgICAgICAgICAgIHRoaXMuaW1nLnNyYyA9IFwiLi4vc3JjL1Jlc291cmNlcy9vcmFuZ2Vtb25zdGVyLnBuZ1wiO1xyXG4gICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwid2F0ZXJcIjpcclxuICAgICAgICAgICAgICB0aGlzLmltZy5zcmMgPSBcIi4uL3NyYy9SZXNvdXJjZXMvYmx1ZW1vbnN0ZXIucG5nXCI7XHJcbiAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJlYXJ0aFwiOlxyXG4gICAgICAgICAgICAgIHRoaXMuaW1nLnNyYyA9IFwiLi4vc3JjL1Jlc291cmNlcy9icm93bm1vbnN0ZXIucG5nXCI7XHJcbiAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJ3aW5kXCI6XHJcbiAgICAgICAgICAgICAgdGhpcy5pbWcuc3JjID0gXCIuLi9zcmMvUmVzb3VyY2VzL3doaXRlbW9uc3Rlci5wbmdcIjtcclxuICAgICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgYWxlcnQoXCJXYXJuaW5nOiBjb3VsZCBub3QgZmluZCByZXNvdXJjZSBmb3IgbW9uc3RlclwiKTtcclxuICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICB0aGlzLmltZy5kcmFnZ2FibGUgPSB0cnVlO1xyXG4gICAgICAgICAgdGhpcy5pbWcuYWRkRXZlbnRMaXN0ZW5lcihcImRyYWdzdGFydFwiLCAoZSkgPT4ge1xyXG4gICAgICAgICAgICBlLmRhdGFUcmFuc2Zlci5zZXREYXRhKFwiVGV4dFwiLCBlLnRhcmdldC5pZCk7XHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICBsZXQgY2xpY2tlZCA9IHRoaXMuaW1nO1xyXG4gICAgICAgICAgbGV0IHpvb2NvbnRyb2xsZXIgPSB0aGlzLnpvb2NvbnRyb2xsZXI7XHJcbiAgICAgICAgICBsZXQgZ3JpZCA9IHRoaXMuZ3JpZDtcclxuICAgICAgICAgIGxldCBtYXAgPSB0aGlzLnRlcnJhaW47XHJcbiAgICAgICAgICB0aGlzLmltZy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcclxuICAgICAgICAgICAgbGV0IGNvb3JkcyA9IGNsaWNrZWQuZ2V0QXR0cmlidXRlKFwiaWRcIikuc3BsaXQoXCJ4XCIpO1xyXG4gICAgICAgICAgICBsZXQgc2VsZWN0ZWRtb25zdGVyID0gem9vY29udHJvbGxlci5nZXRNb25zdGVyQnlQb3NpdGlvbihncmlkLCBtYXAsIGNvb3Jkc1swXSwgY29vcmRzWzFdKTtcclxuXHJcbiAgICAgICAgICAgIGFsZXJ0KCdNb25zdGVyIHNlbGVjdGVkOiAnICsgc2VsZWN0ZWRtb25zdGVyLm5hbWUgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICdFbGVtZW50OiAnICsgc2VsZWN0ZWRtb25zdGVyLmVsZW1lbnQgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICdBcm1zOiAnICsgc2VsZWN0ZWRtb25zdGVyLmFybXMgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICdUeXBlIG9mIGFybXM6ICcgKyBzZWxlY3RlZG1vbnN0ZXIudHlwZWFybXMgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICdMZWdzOiAnICsgc2VsZWN0ZWRtb25zdGVyLmxlZ3MgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICdFeWVzOiAnICsgc2VsZWN0ZWRtb25zdGVyLmV5ZXMgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICdGdXIgdHlwZTogJyArIHNlbGVjdGVkbW9uc3Rlci5mdXJ0eXBlICsgJ1xcbicgK1xyXG4gICAgICAgICAgICAnQ2FuIGZseTogJyArIHNlbGVjdGVkbW9uc3Rlci5mbHkgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICdDYW4gc3dpbTogJyArIHNlbGVjdGVkbW9uc3Rlci5zd2ltICsgJ1xcbicgK1xyXG4gICAgICAgICAgICAnQ29sb3VyOiAnICsgc2VsZWN0ZWRtb25zdGVyLmNvbG91ciArICdcXG4nXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAgIHRoaXMudGQuYXBwZW5kQ2hpbGQodGhpcy5pbWcpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRbaV0uQ29sdW1uc1t5XSA9PSAxKSB7XHJcbiAgICAgICAgICB0aGlzLmltZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XHJcbiAgICAgICAgICB0aGlzLmltZy5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcInN0b25lXCIpO1xyXG5cclxuICAgICAgICAgIC8vRXZlcnkgbW9uc3RlciBnZXRzIGFuIGlkIGJhc2VkIG9uIHRoZWlyIGNvb3JkaW5hdGVzXHJcbiAgICAgICAgICB0aGlzLmltZy5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBpICsgXCJ4XCIgKyB5KTtcclxuXHJcbiAgICAgICAgICBzd2l0Y2ggKHRlcnJhaW4pIHtcclxuICAgICAgICAgICAgLy8gSnVuZ2xlXHJcbiAgICAgICAgICAgIGNhc2UgMDpcclxuICAgICAgICAgICAgICB0aGlzLmltZy5zcmMgPSBcIi4uL3NyYy9SZXNvdXJjZXMvanVuZ2xlcm9jay5wbmdcIjtcclxuICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1hcFwiKS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcIiMyODkxNTBcIjtcclxuICAgICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICAgIC8vIE5vcnRwb2xlXHJcbiAgICAgICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgICB0aGlzLmltZy5zcmMgPSBcIi4uL3NyYy9SZXNvdXJjZXMvaWNlY2h1bmsucG5nXCI7XHJcbiAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYXBcIikuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCIjRDhGRkZGXCI7XHJcbiAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICAvLyBEZXNlcnRcclxuICAgICAgICAgICAgY2FzZSAyOlxyXG4gICAgICAgICAgICAgIHRoaXMuaW1nLnNyYyA9IFwiLi4vc3JjL1Jlc291cmNlcy9jYWN0dXMucG5nXCI7XHJcbiAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYXBcIikuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCIjRURDOUFGXCI7XHJcbiAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgdGhpcy50ZC5hcHBlbmRDaGlsZCh0aGlzLmltZyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMudHIuYXBwZW5kQ2hpbGQodGhpcy50ZCk7XHJcbiAgICAgIH1cclxuICAgICAgdGhpcy50YWJsZS5hcHBlbmRDaGlsZCh0aGlzLnRyKTtcclxuICAgIH1cclxuICAgIHRoaXMubWFwLmFwcGVuZENoaWxkKHRoaXMudGFibGUpO1xyXG4gIH1cclxuXHJcbiAgaW5pdFJlbW92ZSgpIHtcclxuICAgIGxldCBncmlkID0gdGhpcy5ncmlkO1xyXG4gICAgbGV0IHRlcnJhaW4gPSB0aGlzLnRlcnJhaW47XHJcbiAgICBsZXQgem9vY29udHJvbGxlciA9IHRoaXMuem9vY29udHJvbGxlcjtcclxuXHJcbiAgICB0aGlzLnJlbW92ZS5hZGRFdmVudExpc3RlbmVyKFwiZHJvcFwiLCAoZSkgPT4ge1xyXG4gICAgICBsZXQgZGF0YSA9IGUuZGF0YVRyYW5zZmVyLmdldERhdGEoXCJUZXh0XCIpO1xyXG4gICAgICBsZXQgbW9uc3RlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGRhdGEpO1xyXG4gICAgICBpZiAobW9uc3RlciAhPSBudWxsKSB7XHJcbiAgICAgICAgbGV0IG9yaWdpbiA9IG1vbnN0ZXIuZ2V0QXR0cmlidXRlKFwiaWRcIikuc3BsaXQoXCJ4XCIpO1xyXG5cclxuICAgICAgICB6b29jb250cm9sbGVyLmRlbGV0ZU1vbnN0ZXJGcm9tR3JpZChcclxuICAgICAgICAgIGdyaWQsXHJcbiAgICAgICAgICB0ZXJyYWluLFxyXG4gICAgICAgICAgb3JpZ2luWzBdLFxyXG4gICAgICAgICAgb3JpZ2luWzFdXHJcbiAgICAgICAgKTtcclxuXHJcbiAgICAgICAgbW9uc3Rlci5yZW1vdmUoKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5yZW1vdmUuYWRkRXZlbnRMaXN0ZW5lcihcImRyYWdvdmVyXCIsIChlKSA9PiB7XHJcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMucmVtb3ZlLmFkZEV2ZW50TGlzdGVuZXIoXCJkcmFnZW50ZXJcIiwgKGUpID0+IHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBjbGFzcyBXZWF0aGVyRGF0YVNlcnZpY2Uge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMuYXBpa2V5ID0gJzZlZmMzNWMzYzI2MTFlNDE0ZWE2NmRhNzZiMmUzZjBiJztcclxuICAgICAgICB0aGlzLnVuaXRzID0gJ21ldHJpYyc7XHJcbiAgICB9XHJcblxyXG4gICAgYXN5bmMgZ2V0Q3VycmVudFdlYXRoZXIoY2l0eU5hbWUpIHtcclxuICAgICAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cDovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8yLjUvd2VhdGhlcj9xPSR7Y2l0eU5hbWV9JmFwcGlkPSR7dGhpcy5hcGlrZXl9JnVuaXRzPSR7dGhpcy51bml0c31gKTtcclxuICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xyXG4gICAgfVxyXG59IiwiZXhwb3J0IGNsYXNzIFdlYXRoZXJWaWV3IHtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB0aGlzLmltZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd3ZWF0aGVyaW1nJyk7XHJcbiAgICAgICAgdGhpcy50ZW1wID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RlbXAnKTtcclxuICAgICAgICB0aGlzLnJhaW4gPSBmYWxzZTtcclxuXHJcbiAgICAgICAgdGhpcy5pbml0UmFpblN3aXRjaCgpO1xyXG4gICAgfVxyXG5cclxuICAgIGluaXRSYWluU3dpdGNoKCkge1xyXG4gICAgICAgIGxldCByYWluc3dpdGNoID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JhaW5zd2l0Y2gnKTtcclxuICAgICAgICBsZXQgb3duY2xhc3MgPSB0aGlzO1xyXG4gICAgICAgIHJhaW5zd2l0Y2guYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XHJcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgaWYob3duY2xhc3MucmFpbikge1xyXG4gICAgICAgICAgICAgICAgb3duY2xhc3MudXBkYXRlV2VhdGhlcihvd25jbGFzcy50ZW1wZXJhdHVyZSwgXCJDbGVhclwiKTtcclxuICAgICAgICAgICAgICAgIG93bmNsYXNzLnJhaW4gPSBmYWxzZTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIG93bmNsYXNzLnVwZGF0ZVdlYXRoZXIob3duY2xhc3MudGVtcGVyYXR1cmUsIFwiUmFpblwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZVdlYXRoZXIodGVtcCwgcmFpbikge1xyXG4gICAgICAgIHRoaXMudGVtcGVyYXR1cmUgPSB0ZW1wO1xyXG4gICAgICAgIHRoaXMudGVtcC5pbm5lclRleHQgPSBgJHt0ZW1wfcKwIENlbGNpdXNgO1xyXG5cclxuXHJcbiAgICAgICAgaWYocmFpbiA9PT0gJ1JhaW4nIHx8IHJhaW4gPT09ICdTaG93ZXIgcmFpbicpIHtcclxuICAgICAgICAgICAgdGhpcy5yYWluID0gdHJ1ZTtcclxuICAgICAgICAgICAgaWYoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JhaW4nKSA9PT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgbGV0IGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpO1xyXG4gICAgICAgICAgICAgICAgY2FudmFzLnNldEF0dHJpYnV0ZSgnaWQnLCAncmFpbicpO1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21hcCcpLmFwcGVuZENoaWxkKGNhbnZhcyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0UmFpbigzMDApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgbGV0IGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyYWluJyk7XHJcbiAgICAgICAgICAgIGlmKGNhbnZhcyAhPT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgY2FudmFzLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoY2FudmFzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBGdW5jdGlvbiBmb3IgaW5pdGlhdGluZyByYWluIGNhbnZhc1xyXG5cclxuICAgIHN0YXJ0UmFpbihtYXhQYXJ0cykge1xyXG4gICAgICAgIGxldCBjYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJhaW5cIik7XHJcblxyXG4gICAgICAgIGlmIChjYW52YXMuZ2V0Q29udGV4dCkge1xyXG4gICAgICAgICAgICBsZXQgY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7XHJcbiAgICAgICAgICAgIGxldCB3ID0gY2FudmFzLndpZHRoO1xyXG4gICAgICAgICAgICBsZXQgaCA9IGNhbnZhcy5oZWlnaHQ7XHJcbiAgICAgICAgICAgIGN0eC5zdHJva2VTdHlsZSA9ICdyZ2JhKDQ2LDg2LDE0NywwLjMpJztcclxuICAgICAgICAgICAgY3R4LmxpbmVXaWR0aCA9IDAuNztcclxuICAgICAgICAgICAgY3R4LmxpbmVDYXAgPSAncm91bmQnO1xyXG5cclxuXHJcbiAgICAgICAgICAgIGxldCBpbml0ID0gW107XHJcbiAgICAgICAgICAgIGZvciAobGV0IGEgPSAwOyBhIDwgbWF4UGFydHM7IGErKykge1xyXG4gICAgICAgICAgICAgICAgaW5pdC5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICB4OiBNYXRoLnJhbmRvbSgpICogdyxcclxuICAgICAgICAgICAgICAgICAgICB5OiBNYXRoLnJhbmRvbSgpICogaCxcclxuICAgICAgICAgICAgICAgICAgICBsOiBNYXRoLnJhbmRvbSgpICogMSxcclxuICAgICAgICAgICAgICAgICAgICB4czogLTQgKyBNYXRoLnJhbmRvbSgpICogNCArIDIsXHJcbiAgICAgICAgICAgICAgICAgICAgeXM6IE1hdGgucmFuZG9tKCkgKiAxMCArIDEwXHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBsZXQgcGFydGljbGVzID0gW107XHJcbiAgICAgICAgICAgIGZvciAobGV0IGIgPSAwOyBiIDwgbWF4UGFydHM7IGIrKykge1xyXG4gICAgICAgICAgICAgICAgcGFydGljbGVzW2JdID0gaW5pdFtiXTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgbGV0IGRyYXcgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjdHguY2xlYXJSZWN0KDAsIDAsIHcsIGgpO1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgYyA9IDA7IGMgPCBwYXJ0aWNsZXMubGVuZ3RoOyBjKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgcCA9IHBhcnRpY2xlc1tjXTtcclxuICAgICAgICAgICAgICAgICAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgY3R4Lm1vdmVUbyhwLngsIHAueSk7XHJcbiAgICAgICAgICAgICAgICAgICAgY3R4LmxpbmVUbyhwLnggKyBwLmwgKiBwLnhzLCBwLnkgKyBwLmwgKiBwLnlzKTtcclxuICAgICAgICAgICAgICAgICAgICBjdHguc3Ryb2tlKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBtb3ZlKCk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGxldCBtb3ZlID0gKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgYiA9IDA7IGIgPCBwYXJ0aWNsZXMubGVuZ3RoOyBiKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgcCA9IHBhcnRpY2xlc1tiXTtcclxuICAgICAgICAgICAgICAgICAgICBwLnggKz0gcC54cztcclxuICAgICAgICAgICAgICAgICAgICBwLnkgKz0gcC55cztcclxuICAgICAgICAgICAgICAgICAgICBpZiAocC54ID4gdyB8fCBwLnkgPiBoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHAueCA9IE1hdGgucmFuZG9tKCkgKiB3O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwLnkgPSAtMjA7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBzZXRJbnRlcnZhbChkcmF3LCA4MCk7XHJcblxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsImltcG9ydCB7IFdlYXRoZXJEYXRhU2VydmljZSB9IGZyb20gXCIuLi9Nb2RlbC9XZWF0aGVyRGF0YVNlcnZpY2VcIjtcclxuaW1wb3J0IHsgV2VhdGhlclZpZXcgfSBmcm9tIFwiLi4vVmlldy9XZWF0aGVyVmlld1wiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFdlYXRoZXJDb250cm9sbGVyIHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMud2VhdGhlcmRhdGEgPSBuZXcgV2VhdGhlckRhdGFTZXJ2aWNlKCk7XHJcbiAgICAgICAgdGhpcy53ZWF0aGVydmlldyA9IG5ldyBXZWF0aGVyVmlldygpO1xyXG4gICAgfVxyXG5cclxuICAgIGFzeW5jIHVwZGF0ZVdlYXRoZXIoY2l0eSkge1xyXG4gICAgICAgIGxldCB3ZWF0aGVydmlldyA9IHRoaXMud2VhdGhlcnZpZXc7XHJcbiAgICAgICAgbGV0IGRhdGEgPSBhd2FpdCB0aGlzLndlYXRoZXJkYXRhLmdldEN1cnJlbnRXZWF0aGVyKGNpdHkpO1xyXG4gICAgICAgIHdlYXRoZXJ2aWV3LnVwZGF0ZVdlYXRoZXIoZGF0YS5tYWluLnRlbXAsIGRhdGEud2VhdGhlclswXS5tYWluKTtcclxuICAgIH1cclxufSIsImV4cG9ydCBjbGFzcyBNYXBTZXJ2aWNlIHtcclxuICBhc3luYyBsb2FkR3JpZCgpIHtcclxuICAgIGxldCBncmlkID0gYXdhaXQgZmV0Y2goXCIuL21hcC9ncmlkLmpzb25cIik7XHJcbiAgICBsZXQgU1RPUkFHRV9LRVkgPSBcInpvby1ncmlkXCI7XHJcblxyXG4gICAgLy8gUHV0IHRoZSB3aG9sZSBncmlkIGZyb20gbG9jYWxzdG9yYWdlIGluIGEgdmFyaWFibGVcclxuICAgIGxldCBzdG9yYWdlID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShTVE9SQUdFX0tFWSkpO1xyXG5cclxuICAgIGlmIChzdG9yYWdlICE9IG51bGwpIHtcclxuICAgICAgZ3JpZCA9IHN0b3JhZ2U7XHJcblxyXG4gICAgLy8gSWYgdGhlIGdyaWQgaXMgbm90IHByZXNlbnQgaW4gbG9jYWxzdG9yYWdlIHlldCwgcHV0IHRoZSB3aG9sZSBncmlkIGFzIGxvYWRlZCBmcm9tIHRoZSBsb2NhbCBncmlkLmpzb24gZmlsZSBpbiB0aGVyZVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oU1RPUkFHRV9LRVksIEpTT04uc3RyaW5naWZ5KGdyaWQpKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gZ3JpZDtcclxuICB9XHJcblxyXG4gIGFkZE1vbnN0ZXJUb0dyaWQoZ3JpZCwgdGVycmFpbiwgbW9uc3RlciwgeCwgeSkge1xyXG4gICAgbW9uc3Rlci54ID0geDtcclxuICAgIG1vbnN0ZXIueSA9IHk7XHJcbiAgICBtb25zdGVyLm1hcCA9IHRlcnJhaW47XHJcbiAgICBncmlkW3RlcnJhaW5dLmdyaWRbeF0uQ29sdW1uc1t5XSA9IG1vbnN0ZXI7XHJcbiAgICB0aGlzLnNhdmVUb0xvY2FsU3RvcmFnZShncmlkKTtcclxuICB9XHJcblxyXG4gIGRlbGV0ZU1vbnN0ZXJGcm9tR3JpZChncmlkLCB0ZXJyYWluLCB4LCB5KSB7XHJcbiAgICBncmlkW3RlcnJhaW5dLmdyaWRbeF0uQ29sdW1uc1t5XSA9IFwiMFwiO1xyXG4gICAgdGhpcy5zYXZlVG9Mb2NhbFN0b3JhZ2UoZ3JpZCk7XHJcbiAgfVxyXG5cclxuICBzYXZlVG9Mb2NhbFN0b3JhZ2UoZ3JpZCkge1xyXG4gICAgbGV0IFNUT1JBR0VfS0VZID0gXCJ6b28tZ3JpZFwiO1xyXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oU1RPUkFHRV9LRVksIEpTT04uc3RyaW5naWZ5KGdyaWQpKTtcclxuICB9XHJcblxyXG4gIGdldE1vbnN0ZXJCeVBvc2l0aW9uKGdyaWQsIG1hcCwgeCwgeSkge1xyXG4gICAgcmV0dXJuIGdyaWRbbWFwXS5ncmlkW3hdLkNvbHVtbnNbeV07XHJcbiAgfVxyXG5cclxufVxyXG4iLCJleHBvcnQgY2xhc3MgTW9uc3RlcntcclxuICAgIC8vIE1vbnN0ZXJEYXRhIGNvbnNpc3RzIG9mIGVsZW1lbnQsIG5hbWUsIGFybXMsIHR5cGVfYXJtcywgbGVncywgZXllcywgc2tpbnR5cGUsIGFiaWxpdHkgdG8gZmx5LCBhYmlsaXR5IHRvIHN3aW0sIGNvbG91ciAsbWFwLCB4IGNvb3JkaW5hdGUsIHkgY29vcmRpbmF0ZVxyXG4gICAgY29uc3RydWN0b3IobmFtZSwgZWxlbWVudCwgYXJtcywgdHlwZWFybXMsIGxlZ3MsIGV5ZXMsIGZ1cnR5cGUsIGZseSwgc3dpbSwgY29sb3VyLCBtYXAsIHgsIHkpe1xyXG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcclxuICAgICAgICB0aGlzLmFybXMgPSBhcm1zO1xyXG4gICAgICAgIHRoaXMudHlwZWFybXMgPSB0eXBlYXJtcztcclxuICAgICAgICB0aGlzLmxlZ3MgPSBsZWdzO1xyXG4gICAgICAgIHRoaXMuZXllcyA9IGV5ZXM7XHJcbiAgICAgICAgdGhpcy5mdXJ0eXBlID0gZnVydHlwZTtcclxuICAgICAgICB0aGlzLmZseSA9IGZseTtcclxuICAgICAgICB0aGlzLnN3aW0gPSBzd2ltO1xyXG4gICAgICAgIHRoaXMuY29sb3VyID0gY29sb3VyO1xyXG4gICAgICAgIHRoaXMubWFwID0gbWFwO1xyXG4gICAgICAgIHRoaXMueCA9IHg7XHJcbiAgICAgICAgdGhpcy55ID0geTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEZpcmVNb25zdGVyIGV4dGVuZHMgTW9uc3RlcntcclxuICAgIGNvbnN0cnVjdG9yKCl7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLmFybXMgPSBbMSwyLDMsNCw1LDZdO1xyXG4gICAgICAgIHRoaXMudHlwZWFybXMgPSBbXCJUZW50YWNsZXNcIixcIkNsYXdzXCIsXCJDbGF3LXdpbmdzXCJdO1xyXG4gICAgICAgIHRoaXMubGVncyA9IFsyXTtcclxuICAgICAgICB0aGlzLmV5ZXMgPSBbMSwyLDMsNF07XHJcbiAgICAgICAgdGhpcy5mdXJ0eXBlID0gW1wiU2NhbGVzXCIsXCJGZWF0aGVyc1wiXTtcclxuICAgICAgICB0aGlzLmZseSA9IFwibm9cIjtcclxuICAgICAgICB0aGlzLnN3aW0gPSBcIm5vXCI7XHJcbiAgICAgICAgdGhpcy5jb2xvciA9IFtcIlJlZFwiLFwiT3JhbmdlXCIsXCJCcm93blwiXTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFdhdGVyTW9uc3RlciBleHRlbmRzIE1vbnN0ZXJ7XHJcbiAgICBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgdGhpcy5hcm1zID0gWzEsMiwzLDQsNSw2LDcsOF07XHJcbiAgICAgICAgdGhpcy50eXBlYXJtcyA9IFtcIlRlbnRhY2xlc1wiLFwiRmluc1wiXTtcclxuICAgICAgICB0aGlzLmxlZ3MgPSBbMSwyLDMsNF07XHJcbiAgICAgICAgdGhpcy5leWVzID0gWzEsMiwzLDQsNSw2LDcsOF07XHJcbiAgICAgICAgdGhpcy5mdXJ0eXBlID0gW1wiU2NhbGVzXCIsXCJTbGltZVwiXTtcclxuICAgICAgICB0aGlzLmZseSA9IFwibm9cIjtcclxuICAgICAgICB0aGlzLnN3aW0gPSBcInllc1wiO1xyXG4gICAgICAgIHRoaXMuY29sb3IgPSBbXCJCbHVlXCIsXCJSZWRcIixcIkdyZWVuXCJdO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRWFydGhNb25zdGVyIGV4dGVuZHMgTW9uc3RlcntcclxuICAgIGNvbnN0cnVjdG9yKCl7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLmFybXMgPSBbMl07XHJcbiAgICAgICAgdGhpcy50eXBlYXJtcyA9IFtcIkNsYXdzXCJdO1xyXG4gICAgICAgIHRoaXMubGVncyA9IFsyLDQsNl07XHJcbiAgICAgICAgdGhpcy5leWVzID0gWzJdO1xyXG4gICAgICAgIHRoaXMuZnVydHlwZSA9IFtcIkhhaXJcIixcIlNjYWxlc1wiLFwiU2xpbWVcIl07XHJcbiAgICAgICAgdGhpcy5mbHkgPSBcIm5vXCI7XHJcbiAgICAgICAgdGhpcy5zd2ltID0gXCJub1wiO1xyXG4gICAgICAgIHRoaXMuY29sb3IgPSBbXCJQdXJwbGVcIixcIk9yYW5nZVwiLFwiV2hpdGVcIl07XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCAgY2xhc3MgV2luZE1vbnN0ZXIgZXh0ZW5kcyBNb25zdGVye1xyXG4gICAgY29uc3RydWN0b3IoKXtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMuYXJtcyA9IFsyXTtcclxuICAgICAgICB0aGlzLnR5cGVhcm1zID0gW1wiV2luZ3NcIixcIkNsYXctd2luZ3NcIl07XHJcbiAgICAgICAgdGhpcy5sZWdzID0gWzAsMl07XHJcbiAgICAgICAgdGhpcy5leWVzID0gWzJdO1xyXG4gICAgICAgIHRoaXMuZnVydHlwZSA9IFtcIkZlYXRoZXJzXCIsXCJIYWlyXCIsXCJTY2FsZXNcIl07XHJcbiAgICAgICAgdGhpcy5mbHkgPSBcInllc1wiO1xyXG4gICAgICAgIHRoaXMuc3dpbSA9IFwibm9cIjtcclxuICAgICAgICB0aGlzLmNvbG9yID0gW1wiV2hpdGVcIixcIkJsdWVcIixcIlB1cnBsZVwiXTtcclxuICAgIH1cclxufSIsImltcG9ydCB7IE1vbnN0ZXJTZXJ2aWNlIH0gZnJvbSAnLi4vbW9kZWwvTW9uc3RlclNlcnZpY2UnXHJcbmltcG9ydCB7IENyZWF0ZU1vbnN0ZXJWaWV3IH0gZnJvbSAnLi4vdmlldy9DcmVhdGVNb25zdGVyVmlldyc7XHJcbmltcG9ydCB7IE1hcFZpZXcgfSBmcm9tICcuLi92aWV3L01hcFZpZXcnO1xyXG5pbXBvcnQgeyBXZWF0aGVyQ29udHJvbGxlciB9IGZyb20gJy4vV2VhdGhlckNvbnRyb2xsZXInO1xyXG5pbXBvcnQgeyBNYXBTZXJ2aWNlIH0gZnJvbSAnLi4vTW9kZWwvTWFwU2VydmljZSc7XHJcbmltcG9ydCB7IEZpcmVNb25zdGVyIH0gZnJvbSAnLi4vTW9kZWwvTW9uc3Rlcic7XHJcbmltcG9ydCB7IFdhdGVyTW9uc3RlciB9IGZyb20gJy4uL01vZGVsL01vbnN0ZXInO1xyXG5pbXBvcnQgeyBFYXJ0aE1vbnN0ZXIgfSBmcm9tICcuLi9Nb2RlbC9Nb25zdGVyJztcclxuaW1wb3J0IHsgV2luZE1vbnN0ZXIgfSBmcm9tICcuLi9Nb2RlbC9Nb25zdGVyJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFpvb0NvbnRyb2xsZXJcclxue1xyXG4gICAgLy9lbCBjb25zdHJ1Y3RvclxyXG4gICAgY29uc3RydWN0b3IoKXtcclxuICAgICAgICB0aGlzLndlYXRoZXJjb250cm9sbGVyID0gbmV3IFdlYXRoZXJDb250cm9sbGVyKCk7XHJcblxyXG4gICAgICAgIHRoaXMubW9uc3RlcnNlcnZpY2UgPSBuZXcgTW9uc3RlclNlcnZpY2UoKTtcclxuICAgICAgICB0aGlzLmNyZWF0ZW1vbnN0ZXJ2aWV3ID0gIG5ldyBDcmVhdGVNb25zdGVyVmlldyh0aGlzKTtcclxuICAgICAgICB0aGlzLm1hcHNlcnZpY2UgPSBuZXcgTWFwU2VydmljZSgpO1xyXG4gICAgICAgIHRoaXMuZmlyZU1vbnN0ZXIgPSBuZXcgRmlyZU1vbnN0ZXIoKTtcclxuICAgICAgICB0aGlzLndhdGVyTW9uc3RlciA9IG5ldyBXYXRlck1vbnN0ZXIoKTtcclxuICAgICAgICB0aGlzLmVhcnRoTW9uc3RlciA9ICBuZXcgRWFydGhNb25zdGVyKCk7XHJcbiAgICAgICAgdGhpcy53aW5kTW9uc3RlciA9IG5ldyBXaW5kTW9uc3RlcigpO1xyXG5cclxuICAgICAgICB0aGlzLm1hcHZpZXcgPSBuZXcgTWFwVmlldyh0aGlzLCB0aGlzLndlYXRoZXJjb250cm9sbGVyKTtcclxuICAgIH1cclxuXHJcbiAgICBhZGRNb25zdGVyVG9HcmlkKGdyaWQsIHRlcnJhaW4sIHgsIHkpIHtcclxuICAgICAgICB0aGlzLm1hcHNlcnZpY2UuYWRkTW9uc3RlclRvR3JpZChncmlkLCB0ZXJyYWluLCB0aGlzLmdldExhc3RNb25zdGVyKCksIHgsIHkpO1xyXG4gICAgfVxyXG5cclxuICAgIGFkZEV4aXN0aW5nTW9uc3RlclRvR3JpZChncmlkLCB0ZXJyYWluLCBveCwgb3ksIHgsIHkpIHtcclxuICAgICAgICB0aGlzLm1hcHNlcnZpY2UuYWRkTW9uc3RlclRvR3JpZChncmlkLCB0ZXJyYWluLCB0aGlzLmdldE1vbnN0ZXJCeVBvc2l0aW9uKGdyaWQsIHRlcnJhaW4sIG94LCBveSksIHgsIHkpO1xyXG4gICAgfVxyXG5cclxuICAgIGRlbGV0ZU1vbnN0ZXJGcm9tR3JpZChncmlkLCB0ZXJyYWluLCB4LCB5KSB7XHJcbiAgICAgICAgdGhpcy5tYXBzZXJ2aWNlLmRlbGV0ZU1vbnN0ZXJGcm9tR3JpZChncmlkLCB0ZXJyYWluLCB4LCB5KTtcclxuICAgIH1cclxuXHJcbiAgICBhZGRNb25zdGVyKG5hbWUsIGVsZW1lbnQsIGFybXMsIHR5cGVhcm1zLCBsZWdzLCBleWVzLCBmdXJ0eXBlLCBmbHksIHN3aW0sIGNvbG91ciwgbWFwLCB4LCB5KXtcclxuICAgICAgICB0aGlzLm1vbnN0ZXJzZXJ2aWNlLnNhdmVNb25zdGVyKG5hbWUsIGVsZW1lbnQsIGFybXMsIHR5cGVhcm1zLCBsZWdzLCBleWVzLCBmdXJ0eXBlLCBmbHksIHN3aW0sIGNvbG91ciwgbWFwLCB4LCB5KTtcclxuICAgIH1cclxuXHJcbiAgICBsb2FkR3JpZChtYXB2aWV3KSB7XHJcbiAgICAgICAgdGhpcy5tYXBzZXJ2aWNlLmxvYWRHcmlkKCkudGhlbigoZ3JpZCkgPT4ge1xyXG4gICAgICAgICAgICBtYXB2aWV3LnBhaW50R3JpZChncmlkKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRMYXN0TW9uc3RlcigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5tb25zdGVyc2VydmljZS5nZXRMYXN0TW9uc3RlcigpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldE1vbnN0ZXJCeVBvc2l0aW9uKGdyaWQsIG1hcCwgeCwgeSkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLm1hcHNlcnZpY2UuZ2V0TW9uc3RlckJ5UG9zaXRpb24oZ3JpZCwgbWFwLCB4LCB5KTtcclxuICAgIH1cclxuXHJcbiAgICBpbnRlcmFjdGlvbihncmlkLCBtYXApIHtcclxuICAgICAgICBsZXQgbW9uc3RlcnMgPSB0aGlzLm1vbnN0ZXJzZXJ2aWNlLmdldEFsbE1vbnN0ZXJzKGdyaWQsIG1hcCk7ICBcclxuICAgIH1cclxuXHJcbiAgICBnZXRBcm1zKHZhbHVlKXtcclxuICAgICAgICBsZXQgYXJtcztcclxuICAgICAgICBzd2l0Y2godmFsdWUpIHtcclxuICAgICAgICAgICAgY2FzZSBcImZpcmVcIjpcclxuICAgICAgICAgICAgICAgIGFybXMgPSB0aGlzLmZpcmVNb25zdGVyLmFybXM7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcIndhdGVyXCI6XHJcbiAgICAgICAgICAgICAgICBhcm1zID0gdGhpcy53YXRlck1vbnN0ZXIuYXJtcztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwid2luZFwiOlxyXG4gICAgICAgICAgICAgICAgYXJtcyA9IHRoaXMud2luZE1vbnN0ZXIuYXJtcztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwiZWFydGhcIjpcclxuICAgICAgICAgICAgICAgIGFybXMgPSB0aGlzLmVhcnRoTW9uc3Rlci5hcm1zXHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIGFybXMgPSAwO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBhcm1zO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFR5cGVBcm1zKHZhbHVlKXtcclxuICAgICAgICBsZXQgdHlwZUFybXM7XHJcbiAgICAgICAgc3dpdGNoKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIGNhc2UgXCJmaXJlXCI6XHJcbiAgICAgICAgICAgICAgICB0eXBlQXJtcyA9IHRoaXMuZmlyZU1vbnN0ZXIudHlwZWFybXM7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcIndhdGVyXCI6XHJcbiAgICAgICAgICAgICAgICB0eXBlQXJtcyA9IHRoaXMud2F0ZXJNb25zdGVyLnR5cGVhcm1zO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJ3aW5kXCI6XHJcbiAgICAgICAgICAgICAgICB0eXBlQXJtcyA9IHRoaXMud2luZE1vbnN0ZXIudHlwZWFybXM7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcImVhcnRoXCI6XHJcbiAgICAgICAgICAgICAgICB0eXBlQXJtcyA9IHRoaXMuZWFydGhNb25zdGVyLnR5cGVhcm1zO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICB0eXBlQXJtcyA9IDA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHR5cGVBcm1zOyAgICAgICAgXHJcbiAgICB9XHJcblxyXG4gICAgZ2V0TGVncyh2YWx1ZSl7XHJcbiAgICAgICAgbGV0IGxlZ3M7XHJcbiAgICAgICAgc3dpdGNoKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIGNhc2UgXCJmaXJlXCI6XHJcbiAgICAgICAgICAgICAgICBsZWdzID0gdGhpcy5maXJlTW9uc3Rlci5sZWdzO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJ3YXRlclwiOlxyXG4gICAgICAgICAgICAgICAgbGVncyA9IHRoaXMud2F0ZXJNb25zdGVyLmxlZ3M7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcIndpbmRcIjpcclxuICAgICAgICAgICAgICAgIGxlZ3MgPSB0aGlzLndpbmRNb25zdGVyLmxlZ3M7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcImVhcnRoXCI6XHJcbiAgICAgICAgICAgICAgICBsZWdzID0gdGhpcy5lYXJ0aE1vbnN0ZXIubGVncztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgbGVncyA9IDA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGxlZ3M7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0RXllcyh2YWx1ZSl7XHJcbiAgICAgICAgbGV0IGV5ZXM7XHJcbiAgICAgICAgc3dpdGNoKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIGNhc2UgXCJmaXJlXCI6XHJcbiAgICAgICAgICAgICAgICBleWVzID0gdGhpcy5maXJlTW9uc3Rlci5leWVzO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJ3YXRlclwiOlxyXG4gICAgICAgICAgICAgICAgZXllcyA9IHRoaXMud2F0ZXJNb25zdGVyLmV5ZXM7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcIndpbmRcIjpcclxuICAgICAgICAgICAgICAgIGV5ZXMgPSB0aGlzLndpbmRNb25zdGVyLmV5ZXM7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcImVhcnRoXCI6XHJcbiAgICAgICAgICAgICAgICBleWVzID0gdGhpcy5lYXJ0aE1vbnN0ZXIuZXllcztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgZXllcyA9IDA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGV5ZXM7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0RnVyVHlwZSh2YWx1ZSl7XHJcbiAgICAgICAgbGV0IGZ1clR5cGU7XHJcbiAgICAgICAgc3dpdGNoKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIGNhc2UgXCJmaXJlXCI6XHJcbiAgICAgICAgICAgICAgICBmdXJUeXBlID0gdGhpcy5maXJlTW9uc3Rlci5mdXJ0eXBlO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJ3YXRlclwiOlxyXG4gICAgICAgICAgICAgICAgZnVyVHlwZSA9IHRoaXMud2F0ZXJNb25zdGVyLmZ1cnR5cGU7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcIndpbmRcIjpcclxuICAgICAgICAgICAgICAgIGZ1clR5cGUgPSB0aGlzLndpbmRNb25zdGVyLmZ1cnR5cGU7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcImVhcnRoXCI6XHJcbiAgICAgICAgICAgICAgICBmdXJUeXBlID0gdGhpcy5lYXJ0aE1vbnN0ZXIuZnVydHlwZTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgZnVyVHlwZSA9IDA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGZ1clR5cGU7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0Rmx5KHZhbHVlKXtcclxuICAgICAgICBsZXQgZmx5O1xyXG4gICAgICAgIHN3aXRjaCh2YWx1ZSkge1xyXG4gICAgICAgICAgICBjYXNlIFwiZmlyZVwiOlxyXG4gICAgICAgICAgICAgICAgZmx5ID0gdGhpcy5maXJlTW9uc3Rlci5mbHk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcIndhdGVyXCI6XHJcbiAgICAgICAgICAgICAgICBmbHkgPSB0aGlzLndhdGVyTW9uc3Rlci5mbHk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcIndpbmRcIjpcclxuICAgICAgICAgICAgICAgIGZseSA9IHRoaXMud2luZE1vbnN0ZXIuZmx5O1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJlYXJ0aFwiOlxyXG4gICAgICAgICAgICAgICAgZmx5ID0gdGhpcy5lYXJ0aE1vbnN0ZXIuZmx5O1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBmbHkgPSAwO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBmbHk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0U3dpbSh2YWx1ZSl7XHJcbiAgICAgICAgbGV0IHN3aW07XHJcbiAgICAgICAgc3dpdGNoKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIGNhc2UgXCJmaXJlXCI6XHJcbiAgICAgICAgICAgICAgICBzd2ltID0gdGhpcy5maXJlTW9uc3Rlci5zd2ltO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJ3YXRlclwiOlxyXG4gICAgICAgICAgICAgICAgc3dpbSA9IHRoaXMud2F0ZXJNb25zdGVyLnN3aW07XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcIndpbmRcIjpcclxuICAgICAgICAgICAgICAgIHN3aW0gPSB0aGlzLndpbmRNb25zdGVyLnN3aW07XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcImVhcnRoXCI6XHJcbiAgICAgICAgICAgICAgICBzd2ltID0gdGhpcy5lYXJ0aE1vbnN0ZXIuc3dpbTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgc3dpbSA9IDA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHN3aW07XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0Q29sb3IodmFsdWUpe1xyXG4gICAgICAgIGxldCBjb2xvcjtcclxuICAgICAgICBzd2l0Y2godmFsdWUpIHtcclxuICAgICAgICAgICAgY2FzZSBcImZpcmVcIjpcclxuICAgICAgICAgICAgICAgIGNvbG9yID0gdGhpcy5maXJlTW9uc3Rlci5jb2xvcjtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwid2F0ZXJcIjpcclxuICAgICAgICAgICAgICAgIGNvbG9yID0gdGhpcy53YXRlck1vbnN0ZXIuY29sb3I7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcIndpbmRcIjpcclxuICAgICAgICAgICAgICAgIGNvbG9yID0gdGhpcy53aW5kTW9uc3Rlci5jb2xvcjtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwiZWFydGhcIjpcclxuICAgICAgICAgICAgICAgIGNvbG9yID0gdGhpcy5lYXJ0aE1vbnN0ZXIuY29sb3I7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIGNvbG9yID0gMDtcclxuICAgICAgICAgIH1cclxuICAgICAgICByZXR1cm4gY29sb3I7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgWm9vQ29udHJvbGxlciBmcm9tICcuL0NvbnRyb2xsZXIvWm9vQ29udHJvbGxlcic7XHJcblxyXG5sZXQgem9vY29udHJvbGxlciA9IG5ldyBab29Db250cm9sbGVyKCk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n')}]);