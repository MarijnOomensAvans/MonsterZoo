!function(I){var g={};function C(c){if(g[c])return g[c].exports;var l=g[c]={i:c,l:!1,exports:{}};return I[c].call(l.exports,l,l.exports,C),l.l=!0,l.exports}C.m=I,C.c=g,C.d=function(I,g,c){C.o(I,g)||Object.defineProperty(I,g,{enumerable:!0,get:c})},C.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},C.t=function(I,g){if(1&g&&(I=C(I)),8&g)return I;if(4&g&&"object"==typeof I&&I&&I.__esModule)return I;var c=Object.create(null);if(C.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:I}),2&g&&"string"!=typeof I)for(var l in I)C.d(c,l,function(g){return I[g]}.bind(null,l));return c},C.n=function(I){var g=I&&I.__esModule?function(){return I.default}:function(){return I};return C.d(g,"a",g),g},C.o=function(I,g){return Object.prototype.hasOwnProperty.call(I,g)},C.p="",C(C.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/model/Monster.js\nclass Monster{\r\n    // MonsterData consists of element, name, arms, type_arms, legs, eyes, skintype, ability to fly, ability to swim, colour ,map, x coordinate, y coordinate\r\n    constructor(name, element, arms, typearms, legs, eyes, furtype, fly, swim, colour, map, x, y){\r\n        this.name = name;\r\n        this.element = element;\r\n        this.arms = arms;\r\n        this.typearms = typearms;\r\n        this.legs = legs;\r\n        this.eyes = eyes;\r\n        this.furtype = furtype;\r\n        this.fly = fly;\r\n        this.swim = swim;\r\n        this.colour = colour;\r\n        this.map = map;\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n\r\nclass FireMonster extends Monster{\r\n    constructor(){\r\n        super();\r\n        this.arms = [1,2,3,4,5,6];\r\n        this.typearms = ["Tentacles","Claws","Claw-wings"];\r\n        this.legs = [2];\r\n        this.eyes = [1,2,3,4];\r\n        this.furtype = ["Scales","Feathers"];\r\n        this.fly = "yes";\r\n        this.swim = "no";\r\n        this.color = ["Red","Orange","Brown"];\r\n    }\r\n}\r\n\r\nclass WaterMonster extends Monster{\r\n    constructor(){\r\n        super();\r\n        this.arms = [1,2,3,4,5,6,7,8];\r\n        this.typearms = ["Tentacles","Fins"];\r\n        this.legs = [1,2,3,4];\r\n        this.eyes = [1,2,3,4,5,6,7,8];\r\n        this.furtype = ["Scales","Slime"];\r\n        this.fly = "no";\r\n        this.swim = "yes";\r\n        this.color = ["Blue","Red","Green"];\r\n    }\r\n}\r\n\r\nclass EarthMonster extends Monster{\r\n    constructor(){\r\n        super();\r\n        this.arms = [2];\r\n        this.typearms = "Claws";\r\n        this.legs = [2,4,6];\r\n        this.eyes = [2];\r\n        this.furtype = ["Hair","Scales","Slime"];\r\n        this.fly = "no";\r\n        this.swim = "no";\r\n        this.color = ["Purple","Orange","White"];\r\n    }\r\n}\r\n\r\nclass WindMonster extends Monster{\r\n    constructor(){\r\n        super();\r\n        this.arms = [2];\r\n        this.typearms = ["Wings","Claw-wings"];\r\n        this.legs = [0,2];\r\n        this.eyes = [2];\r\n        this.furtype = ["Feathers","Hair","Scales"];\r\n        this.fly = "yes";\r\n        this.swim = "no";\r\n        this.color = ["White","Blue","Purple"];\r\n    }\r\n}\n// CONCATENATED MODULE: ./src/model/MonsterService.js\n\r\n\r\n\r\nclass MonsterService_MonsterService\r\n{\r\n    constructor(){\r\n        this.monsters = [\r\n            new Monster("fire", "Marijn", 2, "tentacles", 2, 4, "scales", false, false, "orange", 0, 1, 1)\r\n        ]\r\n    }\r\n\r\n    getMonsters()\r\n    {\r\n        return this.monsters;\r\n    }\r\n\r\n    saveMonster(name, element, arms, typearms, legs, eyes, furtype, fly, swim, colour, map, x, y){\r\n        let newMonster = new Monster(name, element, arms, typearms, legs, eyes, furtype, fly, swim, colour, map, x, y);\r\n        this.monsters.push(newMonster);\r\n    }\r\n\r\n    getLastMonster() {\r\n        return this.monsters[this.monsters.length -1];\r\n    }\r\n    \r\n}\r\n\n// CONCATENATED MODULE: ./src/view/CreateMonsterView.js\nclass CreateMonsterView {\r\n\r\n  constructor(controller) {\r\n    this.controller = controller;\r\n\r\n    this.template = document.getElementById("create_monster");\r\n\r\n    this.radio_fire = document.getElementById("element_fire");\r\n    this.radio_water = document.getElementById("element_water");\r\n    this.radio_earth = document.getElementById("element_earth");\r\n    this.radio_wind = document.getElementById("element_wind");\r\n    this.remove = document.getElementById("remove");\r\n\r\n    this.setElementEvents(controller);\r\n  }\r\n\r\n  updateForm(controller) {\r\n    this.monsterform = document.getElementById("monster_form");\r\n\r\n    let created = document.getElementById("created");\r\n\r\n    this.monsterform.addEventListener("submit", function(e) {\r\n      e.preventDefault();\r\n\r\n      if (created.hasChildNodes()) {\r\n        while (created.firstChild) {\r\n          created.removeChild(created.firstChild);\r\n        }\r\n      }\r\n      this.img = document.createElement("img");\r\n      this.img.setAttribute("class", "created");\r\n\r\n      let src = "";\r\n\r\n      switch (this.element.value) {\r\n        case "fire":\r\n          src = "../src/Resources/orangemonster.png";\r\n          break;\r\n        case "water":\r\n          src = "../src/Resources/bluemonster.png";\r\n          break;\r\n        case "earth":\r\n          src = "../src/Resources/brownmonster.png";\r\n          break;\r\n        case "wind":\r\n          src = "../src/Resources/whitemonster.png";\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n      this.img.src = src;\r\n      this.img.draggable = true;\r\n      this.img.setAttribute(\'id\', \'-1x-1\');\r\n      this.img.addEventListener("dragstart", function(e) {\r\n        e.dataTransfer.setData("Text", e.target.id);\r\n      });\r\n      created.appendChild(this.img);\r\n\r\n      let name = document.getElementById("name").value;\r\n      let element = document.getElementById("element").value;\r\n      let arms = document.getElementById("arms").value;\r\n      let typearms = document.getElementById("type_arms").value;\r\n      let legs = document.getElementById("legs").value;\r\n      let eyes = document.getElementById("eyes").value;\r\n      let furtype = document.getElementById("furtype").value;\r\n      let fly = document.getElementById("fly").value;\r\n      let swim = document.getElementById("swim").value;\r\n      let colour = document.getElementById("colour").value;\r\n      \r\n      controller.addMonster(name, element, arms, typearms, legs, eyes, furtype, fly, swim, colour, null, null, null);\r\n\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    let form = document.getElementById("monster_form");\r\n    while (form.hasChildNodes()) {\r\n      form.removeChild(form.firstChild);\r\n    }\r\n  }\r\n\r\n  setElementEvents(controller) {\r\n    let ownclass = this;\r\n    this.radio_fire.addEventListener("click", function() {\r\n          if (this.checked) {\r\n            ownclass.clearForm();\r\n            ownclass.generalFrom();\r\n\r\n            let element = document.getElementById("element");\r\n            element.setAttribute("value", "fire");\r\n\r\n            let arms = document.getElementById("arms");\r\n\r\n            let amountarms = controller.getArms("fire");\r\n\r\n            amountarms.forEach(element => {\r\n              let option = document.createElement("option");\r\n              option.setAttribute("value", `${element}`);\r\n              option.innerHTML = element;\r\n              arms.appendChild(option);\r\n            });\r\n            \r\n\r\n            let typearmsselect = document.getElementById("type_arms");\r\n\r\n            let armtypes = controller.getTypeArms("fire");\r\n\r\n            armtypes.forEach(element => {\r\n              let option = document.createElement("option");\r\n              option.setAttribute("value", `${element}`);\r\n              option.innerHTML = element;\r\n              typearmsselect.appendChild(option);\r\n            });\r\n\r\n            let legslabel = document.getElementById("legslabel");\r\n            legslabel.innerHTML = "Legs: " + controller.getLegs("fire");\r\n\r\n            let legsinput = document.getElementById("legs");\r\n            legsinput.setAttribute("value", controller.getLegs("fire"));\r\n\r\n            let eyesselect = document.getElementById("eyes");\r\n\r\n            let eyes = controller.getEyes("fire");\r\n\r\n            eyes.forEach(element => {\r\n              let option = document.createElement("option");\r\n              option.setAttribute("value", `${element}`);\r\n              option.innerHTML = element;\r\n              eyesselect.appendChild(option);\r\n            });\r\n\r\n            let furtypeselect = document.getElementById("furtype");\r\n\r\n            let furtypes = controller.getFurType("fire");\r\n\r\n            furtypes.forEach(element => {\r\n              let option = document.createElement("option");\r\n              option.setAttribute("value", `${element}`);\r\n              option.innerHTML = element;\r\n              furtypeselect.appendChild(option);\r\n            });\r\n\r\n            let flylabel = document.getElementById("flylabel");\r\n            let fly = document.getElementById("fly");\r\n\r\n            flylabel.innerHTML = "Can fly: " + controller.getFly("fire");\r\n            fly.setAttribute("value", controller.getFly("fire"));\r\n\r\n            let swimlabel = document.getElementById("swimlabel");\r\n            let swim = document.getElementById("swim");\r\n\r\n            swimlabel.innerHTML = "Can swim: " + controller.getSwim("fire");\r\n            swim.setAttribute("value", controller.getSwim("fire"));\r\n\r\n            let colourselect = document.getElementById("colour");\r\n\r\n            let colours = controller.getColor("fire");\r\n\r\n            colours.forEach(element => {\r\n              let option = document.createElement("option");\r\n              option.setAttribute("value", `${element}`);\r\n              option.innerHTML = element;\r\n              colourselect.appendChild(option);\r\n            });\r\n            \r\n          }\r\n    });\r\n\r\n    this.radio_fire.addEventListener("click", this.updateForm(this.controller));\r\n\r\n    this.radio_water.addEventListener("click", function() {\r\n      if (this.checked) {\r\n        let form = document.getElementById("monster_form");\r\n        ownclass.clearForm();\r\n        ownclass.generalFrom();\r\n\r\n        let element = document.getElementById("element");\r\n        element.setAttribute("value", "fire");\r\n\r\n        let arms = document.getElementById("arms");\r\n        // for loop with arms\r\n        \r\n        // for(let i = 1; i < 7; i++) {\r\n        //   let option = document.createElement("option");\r\n        //   option.setAttribute("value", `${i}`);\r\n        //   option.innerHTML = i;\r\n        //   arms.appendChild(option);\r\n        // }\r\n\r\n        let typearmsselect = document.getElementById("type_arms");\r\n\r\n        // let option1 = document.createElement("option");\r\n        // option1.setAttribute("value", "tentacles");\r\n        // option1.innerHTML = "Tentacles";\r\n        // let option2 = document.createElement("option");\r\n        // option2.setAttribute("value", "claws");\r\n        // option2.innerHTML = "Claws";\r\n        // let option3 = document.createElement("option");\r\n        // option3.setAttribute("value", "claw-wings");\r\n        // option3.innerHTML = "Claw-wings";\r\n\r\n        // typearmsselect.appendChild(option1);\r\n        // typearmsselect.appendChild(option2);\r\n        // typearmsselect.appendChild(option3);\r\n\r\n        let legsinput = document.getElementById("legs");\r\n        // legsinput.setAttribute("value", "2");\r\n\r\n        let eyesselect = document.getElementById("eyes");\r\n\r\n\r\n        // for(let i = 1; i < 5; i++) {\r\n        //   let option = document.createElement("option");\r\n        //   option.setAttribute("value", `${i}`);\r\n        //   option.innerHTML = i;\r\n        //   eyesselect.appendChild(option);\r\n        // }\r\n\r\n        let furtypeselect = document.getElementById("furtype");\r\n\r\n        // let option11 = document.createElement("option");\r\n        // option11.setAttribute("value", "scales");\r\n        // option11.innerHTML = "Scales";\r\n        // let option22 = document.createElement("option");\r\n        // option22.setAttribute("value", "feathers");\r\n        // option22.innerHTML = "Feathers";\r\n\r\n        // typefurselect.appendChild(option11);\r\n        // typefurselect.appendChild(option22);\r\n\r\n        let fly = document.getElementById("fly");\r\n\r\n        // flylabel.innerHTML = "Can fly: no";\r\n        // let fly = document.createElement("input");\r\n        // fly.setAttribute("value", "false");\r\n\r\n\r\n        let swim = document.getElementById("swim");\r\n\r\n        // swimlabel.innerHTML = "Can swim: no";\r\n        // let swim = document.createElement("input");\r\n        // swim.setAttribute("value", "false");\r\n\r\n\r\n        let colourselect = document.getElementById("colour");\r\n\r\n        // let option111 = document.createElement("option");\r\n        // option111.setAttribute("value", "red");\r\n        // option111.innerHTML = "Red";\r\n        // let option222 = document.createElement("option");\r\n        // option222.setAttribute("value", "orange");\r\n        // option222.innerHTML = "Orange";\r\n        // let option333 = document.createElement("option");\r\n        // option333.setAttribute("value", "brown");\r\n        // option333.innerHTML = "Brown";\r\n\r\n        // colourselect.appendChild(option111);\r\n        // colourselect.appendChild(option222);\r\n        // colourselect.appendChild(option333);\r\n      }\r\n});\r\n\r\nthis.radio_water.addEventListener("click", this.updateForm(this.controller));\r\n\r\n\r\nthis.radio_earth.addEventListener("click", function() {\r\n  if (this.checked) {\r\n    let form = document.getElementById("monster_form");\r\n    ownclass.clearForm();\r\n    ownclass.generalFrom();\r\n\r\n    let element = document.getElementById("element");\r\n    element.setAttribute("value", "fire");\r\n\r\n    let arms = document.getElementById("arms");\r\n    // for loop with arms\r\n    \r\n    // for(let i = 1; i < 7; i++) {\r\n    //   let option = document.createElement("option");\r\n    //   option.setAttribute("value", `${i}`);\r\n    //   option.innerHTML = i;\r\n    //   arms.appendChild(option);\r\n    // }\r\n\r\n    let typearmsselect = document.getElementById("type_arms");\r\n\r\n    // let option1 = document.createElement("option");\r\n    // option1.setAttribute("value", "tentacles");\r\n    // option1.innerHTML = "Tentacles";\r\n    // let option2 = document.createElement("option");\r\n    // option2.setAttribute("value", "claws");\r\n    // option2.innerHTML = "Claws";\r\n    // let option3 = document.createElement("option");\r\n    // option3.setAttribute("value", "claw-wings");\r\n    // option3.innerHTML = "Claw-wings";\r\n\r\n    // typearmsselect.appendChild(option1);\r\n    // typearmsselect.appendChild(option2);\r\n    // typearmsselect.appendChild(option3);\r\n\r\n    let legsinput = document.getElementById("legs");\r\n    // legsinput.setAttribute("value", "2");\r\n\r\n    let eyesselect = document.getElementById("eyes");\r\n\r\n\r\n    // for(let i = 1; i < 5; i++) {\r\n    //   let option = document.createElement("option");\r\n    //   option.setAttribute("value", `${i}`);\r\n    //   option.innerHTML = i;\r\n    //   eyesselect.appendChild(option);\r\n    // }\r\n\r\n    let furtypeselect = document.getElementById("furtype");\r\n\r\n    // let option11 = document.createElement("option");\r\n    // option11.setAttribute("value", "scales");\r\n    // option11.innerHTML = "Scales";\r\n    // let option22 = document.createElement("option");\r\n    // option22.setAttribute("value", "feathers");\r\n    // option22.innerHTML = "Feathers";\r\n\r\n    // typefurselect.appendChild(option11);\r\n    // typefurselect.appendChild(option22);\r\n\r\n    let fly = document.getElementById("fly");\r\n\r\n    // flylabel.innerHTML = "Can fly: no";\r\n    // let fly = document.createElement("input");\r\n    // fly.setAttribute("value", "false");\r\n\r\n\r\n    let swim = document.getElementById("swim");\r\n\r\n    // swimlabel.innerHTML = "Can swim: no";\r\n    // let swim = document.createElement("input");\r\n    // swim.setAttribute("value", "false");\r\n\r\n\r\n    let colourselect = document.getElementById("colour");\r\n\r\n    // let option111 = document.createElement("option");\r\n    // option111.setAttribute("value", "red");\r\n    // option111.innerHTML = "Red";\r\n    // let option222 = document.createElement("option");\r\n    // option222.setAttribute("value", "orange");\r\n    // option222.innerHTML = "Orange";\r\n    // let option333 = document.createElement("option");\r\n    // option333.setAttribute("value", "brown");\r\n    // option333.innerHTML = "Brown";\r\n\r\n    // colourselect.appendChild(option111);\r\n    // colourselect.appendChild(option222);\r\n    // colourselect.appendChild(option333);\r\n  }\r\n});\r\n\r\nthis.radio_earth.addEventListener("click", this.updateForm(this.controller));\r\n\r\n\r\nthis.radio_wind.addEventListener("click", function() {\r\n        if (this.checked) {\r\n          ownclass.clearForm();\r\n          ownclass.generalFrom();\r\n\r\n          let element = document.getElementById("element");\r\n          element.setAttribute("value", "wind");\r\n\r\n          let arms = document.getElementById("arms");\r\n\r\n          let amountarms = controller.getArms("wind");\r\n\r\n          amountarms.forEach(element => {\r\n            let option = document.createElement("option");\r\n            option.setAttribute("value", `${element}`);\r\n            option.innerHTML = element;\r\n            arms.appendChild(option);\r\n          });\r\n          \r\n\r\n          let typearmsselect = document.getElementById("type_arms");\r\n\r\n          let armtypes = controller.getTypeArms("wind");\r\n\r\n          armtypes.forEach(element => {\r\n            let option = document.createElement("option");\r\n            option.setAttribute("value", `${element}`);\r\n            option.innerHTML = element;\r\n            typearmsselect.appendChild(option);\r\n          });\r\n\r\n          let legslabel = document.getElementById("legslabel");\r\n          legslabel.innerHTML = "Legs: " + controller.getLegs("wind");\r\n\r\n          let legsinput = document.getElementById("legs");\r\n          legsinput.setAttribute("value", controller.getLegs("wind"));\r\n\r\n          let eyesselect = document.getElementById("eyes");\r\n\r\n          let eyes = controller.getEyes("wind");\r\n\r\n          eyes.forEach(element => {\r\n            let option = document.createElement("option");\r\n            option.setAttribute("value", `${element}`);\r\n            option.innerHTML = element;\r\n            eyesselect.appendChild(option);\r\n          });\r\n\r\n          let furtypeselect = document.getElementById("furtype");\r\n\r\n          let furtypes = controller.getFurType("wind");\r\n\r\n          furtypes.forEach(element => {\r\n            let option = document.createElement("option");\r\n            option.setAttribute("value", `${element}`);\r\n            option.innerHTML = element;\r\n            furtypeselect.appendChild(option);\r\n          });\r\n\r\n          let flylabel = document.getElementById("flylabel");\r\n          let fly = document.getElementById("fly");\r\n\r\n          flylabel.innerHTML = "Can fly: " + controller.getFly("wind");\r\n          fly.setAttribute("value", controller.getFly("wind"));\r\n\r\n          let swimlabel = document.getElementById("swimlabel");\r\n          let swim = document.getElementById("swim");\r\n\r\n          swimlabel.innerHTML = "Can swim: " + controller.getSwim("wind");\r\n          swim.setAttribute("value", controller.getSwim("wind"));\r\n\r\n          let colourselect = document.getElementById("colour");\r\n\r\n          let colours = controller.getColor("wind");\r\n\r\n          colours.forEach(element => {\r\n            let option = document.createElement("option");\r\n            option.setAttribute("value", `${element}`);\r\n            option.innerHTML = element;\r\n            colourselect.appendChild(option);\r\n          });\r\n          \r\n        }\r\n  });\r\nthis.radio_wind.addEventListener("click", this.updateForm(this.controller));\r\n\r\n  }\r\n\r\n  generalFrom(){\r\n    let form = document.getElementById("monster_form");\r\n            // TODO: Remove previous form\r\n\r\n            let fieldset = document.createElement("fieldset");\r\n            let namelabel = document.createElement("label");\r\n            namelabel.innerHTML = "Name:";\r\n            let nameinput = document.createElement("input");\r\n            nameinput.setAttribute("id", "name");\r\n            nameinput.setAttribute("name", "name");\r\n\r\n            fieldset.appendChild(namelabel);\r\n            fieldset.appendChild(nameinput);\r\n\r\n            form.appendChild(fieldset);\r\n\r\n            let element = document.createElement("input");\r\n            element.setAttribute("id", "element");\r\n            // Value will be set by element\r\n            element.hidden = true;\r\n\r\n            form.appendChild(element);\r\n\r\n            let fieldset2 = document.createElement("fieldset");\r\n            let armslabel = document.createElement("label");\r\n            armslabel.innerHTML = "Arms:";\r\n            let select = document.createElement("select");\r\n            select.setAttribute("id", "arms");\r\n            // Amount of options swil be set by element\r\n\r\n            fieldset2.appendChild(armslabel);\r\n            fieldset2.appendChild(select);\r\n\r\n            form.appendChild(fieldset2);\r\n\r\n            let fieldset3 = document.createElement("fieldset");\r\n            let typearmslabel = document.createElement("label");\r\n            typearmslabel.innerHTML = "Type arms:"\r\n\r\n            let typearmsselect = document.createElement("select");\r\n            typearmsselect.setAttribute("id", "type_arms");\r\n\r\n            fieldset3.appendChild(typearmsselect);\r\n\r\n            form.appendChild(typearmslabel);\r\n            form.appendChild(fieldset3);\r\n\r\n            let fieldset4 = document.createElement("fieldset");\r\n            let legslabel = document.createElement("label");\r\n            legslabel.setAttribute("id", "legslabel");\r\n            legslabel.innerHTML = "Legs: ";\r\n\r\n            let legsinput = document.createElement("input");\r\n            legsinput.setAttribute("id", "legs");\r\n            legsinput.setAttribute("class", "hidden");\r\n\r\n            fieldset4.appendChild(legslabel);\r\n            fieldset4.appendChild(legsinput);\r\n            form.appendChild(fieldset4);\r\n\r\n            let fieldset9 = document.createElement("fieldset");\r\n            let eyeslabel = document.createElement("label");\r\n            eyeslabel.innerHTML = "Eyes:";\r\n            let select2 = document.createElement("select");\r\n            select2.setAttribute("id", "eyes");\r\n            // Amount of eyes set by element\r\n\r\n            fieldset9.appendChild(eyeslabel);\r\n            fieldset9.appendChild(select2);\r\n\r\n            form.append(fieldset9);\r\n\r\n            let fieldset5 = document.createElement("fieldset");\r\n            let furtypelabel = document.createElement("label");\r\n            furtypelabel.innerHTML = "Fur type:";\r\n            let typefurselect = document.createElement("select");\r\n            typefurselect.setAttribute("id", "furtype");\r\n\r\n            fieldset5.appendChild(furtypelabel);\r\n            fieldset5.appendChild(typefurselect);\r\n            form.appendChild(fieldset5);\r\n\r\n            let fieldset6 = document.createElement("fieldset");\r\n            let flylabel = document.createElement("label");\r\n            flylabel.setAttribute("id", "flylabel")\r\n            flylabel.innerHTML = "Can fly: ";\r\n            let fly = document.createElement("input");\r\n            fly.setAttribute("id", "fly");\r\n            fly.setAttribute("value", "");\r\n            fly.setAttribute("class", "hidden");\r\n\r\n            fieldset6.appendChild(flylabel);\r\n            fieldset6.appendChild(fly);\r\n\r\n            form.appendChild(fieldset6);\r\n\r\n            let fieldset7 = document.createElement("fieldset");\r\n            let swimlabel = document.createElement("label");\r\n            swimlabel.setAttribute("id", "swimlabel")\r\n            swimlabel.innerHTML = "Can swim: ";\r\n            let swim = document.createElement("input");\r\n            swim.setAttribute("id", "swim");\r\n            swim.setAttribute("value", "");\r\n            swim.setAttribute("class", "hidden");\r\n\r\n            fieldset6.appendChild(swimlabel);\r\n            fieldset6.appendChild(swim);\r\n\r\n            form.appendChild(fieldset7);\r\n\r\n            let fieldset8 = document.createElement("fieldset");\r\n            let colourlabel = document.createElement("label");\r\n            colourlabel.innerHTML = "Colour:"\r\n\r\n            let colourselect = document.createElement("select");\r\n            colourselect.setAttribute("id", "colour");\r\n\r\n            fieldset8.appendChild(colourselect);\r\n\r\n            form.appendChild(colourlabel);\r\n            form.appendChild(fieldset8);\r\n\r\n            let resetbutton = document.createElement("input");\r\n            resetbutton.setAttribute("type", "reset");\r\n            resetbutton.setAttribute("class", "nes-btn is-error");\r\n            resetbutton.setAttribute("value", "Cancel");\r\n\r\n            let submit = document.createElement("input");\r\n            submit.setAttribute("type", "submit");\r\n            submit.setAttribute("class", "nes-btn is-success");\r\n            submit.setAttribute("value", "Submit");\r\n\r\n            form.appendChild(resetbutton);\r\n            form.appendChild(submit);\r\n            this.updateForm(this.controller);\r\n          }\r\n}\r\n\n// CONCATENATED MODULE: ./src/view/MapView.js\nclass MapView {\r\n  constructor(zoocontroller, weathercontroller) {\r\n    this.map = document.getElementById("map");\r\n    this.remove = document.getElementById("remove");\r\n\r\n    this.zoocontroller = zoocontroller;\r\n    this.weathercontroller = weathercontroller;\r\n\r\n    // Zoo width (zw) and zoo height (zh)\r\n\r\n    this.zw = 10;\r\n    this.zh = 10;\r\n\r\n    // Load buttons from index.html\r\n\r\n    let jungle = document.getElementById("jungle");\r\n    let desert = document.getElementById("desert");\r\n    let northpole = document.getElementById("northpole");\r\n\r\n    jungle.disabled = true;\r\n    jungle.setAttribute("class", "nes-btn is-disabled");\r\n\r\n    // ---------------------------------------------------------------------------------------------------------\r\n    // Buttons for switching between environments\r\n    // ---------------------------------------------------------------------------------------------------------\r\n\r\n    jungle.addEventListener("click", () => {\r\n      if (jungle.disabled != true) {\r\n        this.loadGrid(0);\r\n        jungle.disabled = true;\r\n        desert.disabled = false;\r\n        northpole.disabled = false;\r\n\r\n        jungle.setAttribute("class", "nes-btn is-disabled");\r\n        desert.setAttribute("class", "nes-btn is-warning");\r\n        northpole.setAttribute("class", "nes-btn");\r\n      }\r\n    });\r\n\r\n    desert.addEventListener("click", () => {\r\n      if (desert.disabled != true) {\r\n        this.loadGrid(2);\r\n        desert.disabled = true;\r\n        jungle.disabled = false;\r\n        northpole.disabled = false;\r\n\r\n        desert.setAttribute("class", "nes-btn is-disabled");\r\n        jungle.setAttribute("class", "nes-btn is-success");\r\n        northpole.setAttribute("class", "nes-btn");\r\n      }\r\n    });\r\n\r\n    northpole.addEventListener("click", () => {\r\n      if (northpole.disabled != true) {\r\n        this.loadGrid(1);\r\n        northpole.disabled = true;\r\n        desert.disabled = false;\r\n        jungle.disabled = false;\r\n\r\n        northpole.setAttribute("class", "nes-btn is-disabled");\r\n        jungle.setAttribute("class", "nes-btn is-success");\r\n        desert.setAttribute("class", "nes-btn is-warning");\r\n      }\r\n    });\r\n\r\n    // ---------------------------------------------------------------------------------------------------------\r\n\r\n    // Initialise the map from jungle\r\n    this.loadGrid(0);\r\n  }\r\n\r\n  loadGrid(terrain) {\r\n    // Terrain index: 0 is jungle, 1 is northpole, 3 is desert\r\n    this.terrain = terrain;\r\n    this.zoocontroller.loadGrid(this);\r\n  }\r\n\r\n  paintGrid(grid) {\r\n    this.grid = grid;\r\n    this.selected = this.grid[this.terrain].grid;\r\n    this.weathercontroller.updateWeather(\r\n      this.grid[this.terrain].reference_city\r\n    );\r\n    this.initRemove();\r\n    this.drawBoard();\r\n  }\r\n\r\n  drawBoard() {\r\n    let oldBoard = document.getElementById("grid");\r\n    if (oldBoard != null) {\r\n      oldBoard.remove();\r\n    }\r\n\r\n    this.table = document.createElement("table");\r\n    this.table.setAttribute("id", "grid");\r\n\r\n    for (let i = 0; i < this.zw; i++) {\r\n      this.tr = document.createElement("tr");\r\n      for (let y = 0; y < this.zh; y++) {\r\n        this.td = document.createElement("td");\r\n\r\n        // Drag and drop events\r\n        this.td.addEventListener("dragover", function(e) {\r\n          e.preventDefault();\r\n        });\r\n\r\n        this.td.addEventListener("dragenter", function(e) {\r\n          e.preventDefault();\r\n        });\r\n\r\n        let grid = this.grid;\r\n        let terrain = this.terrain;\r\n        let zoocontroller = this.zoocontroller;\r\n\r\n        this.td.addEventListener("drop", function(e) {\r\n          let data = e.dataTransfer.getData("Text");\r\n          let monster = document.getElementById(data);\r\n\r\n          if (monster != null) {\r\n            if (\r\n              !this.hasChildNodes() &&\r\n              monster.getAttribute("draggable") === "true"\r\n            ) {\r\n              let origin = monster.getAttribute("id").split("x");\r\n              let coordid = this.getAttribute("id").split("-");\r\n\r\n              if(monster.getAttribute("id") === "-1x-1") {\r\n                zoocontroller.addMonsterToGrid(\r\n                  grid,\r\n                  terrain,\r\n                  coordid[0],\r\n                  coordid[1]\r\n                );\r\n\r\n                let nowgrid = grid;\r\n                let map = terrain;\r\n                monster.addEventListener("click", function(e) {\r\n                  let coords = monster.getAttribute("id").split("x");\r\n                  let selectedmonster = zoocontroller.getMonsterByPosition(nowgrid, map, coords[0], coords[1]);\r\n  \r\n      \r\n                  alert(\'Monster selected: \' + selectedmonster.name + \'\\n\' +\r\n                  \'Element: \' + selectedmonster.element + \'\\n\' +\r\n                  \'Arms: \' + selectedmonster.arms + \'\\n\' +\r\n                  \'Type of arms: \' + selectedmonster.typearms + \'\\n\' +\r\n                  \'Legs: \' + selectedmonster.legs + \'\\n\' +\r\n                  \'Eyes: \' + selectedmonster.eyes + \'\\n\' +\r\n                  \'Fur type: \' + selectedmonster.furtype + \'\\n\' +\r\n                  \'Can fly: \' + selectedmonster.fly + \'\\n\' +\r\n                  \'Can swim: \' + selectedmonster.swim + \'\\n\' +\r\n                  \'Colour: \' + selectedmonster.colour + \'\\n\'\r\n                  );\r\n                });\r\n\r\n              } else {\r\n                zoocontroller.addExistingMonsterToGrid(\r\n                  grid,\r\n                  terrain,\r\n                  origin[0],\r\n                  origin[1],\r\n                  coordid[0],\r\n                  coordid[1]\r\n                );\r\n              }\r\n\r\n              if (monster.getAttribute("id") !== "-1x-1") {\r\n                zoocontroller.deleteMonsterFromGrid(\r\n                  grid,\r\n                  terrain,\r\n                  origin[0],\r\n                  origin[1]\r\n                );\r\n              }\r\n\r\n              monster.setAttribute("id", coordid[0] + "x" + coordid[1]);\r\n              this.append(monster);\r\n\r\n\r\n            }\r\n          }\r\n        });\r\n\r\n        this.td.setAttribute("id", i + "-" + y);\r\n\r\n        if (typeof this.selected[i].Columns[y] === "object") {\r\n          let monster = this.selected[i].Columns[y];\r\n          this.img = document.createElement("img");\r\n          this.img.setAttribute("class", "monster");\r\n\r\n          //Every monster gets an id based on their coordinates\r\n          this.img.setAttribute("id", i + "x" + y);\r\n\r\n          switch (monster.element) {\r\n            case "fire":\r\n              this.img.src = "../src/Resources/orangemonster.png";\r\n              break;\r\n            case "water":\r\n              this.img.src = "../src/Resources/bluemonster.png";\r\n              break;\r\n            case "earth":\r\n              this.img.src = "../src/Resources/brownmonster.png";\r\n              break;\r\n            case "wind":\r\n              this.img.src = "../src/Resources/whitemonster.png";\r\n              break;\r\n\r\n            default:\r\n              alert("Warning: could not find resource for monster");\r\n              break;\r\n          }\r\n\r\n          this.img.draggable = true;\r\n          this.img.addEventListener("dragstart", function(e) {\r\n            e.dataTransfer.setData("Text", e.target.id);\r\n          });\r\n\r\n          let clicked = this.img;\r\n          let zoocontroller = this.zoocontroller;\r\n          let grid = this.grid;\r\n          let map = this.terrain;\r\n          this.img.addEventListener("click", function(e) {\r\n            let coords = clicked.getAttribute("id").split("x");\r\n            let selectedmonster = zoocontroller.getMonsterByPosition(grid, map, coords[0], coords[1]);\r\n\r\n            alert(\'Monster selected: \' + selectedmonster.name + \'\\n\' +\r\n            \'Element: \' + selectedmonster.element + \'\\n\' +\r\n            \'Arms: \' + selectedmonster.arms + \'\\n\' +\r\n            \'Type of arms: \' + selectedmonster.typearms + \'\\n\' +\r\n            \'Legs: \' + selectedmonster.legs + \'\\n\' +\r\n            \'Eyes: \' + selectedmonster.eyes + \'\\n\' +\r\n            \'Fur type: \' + selectedmonster.furtype + \'\\n\' +\r\n            \'Can fly: \' + selectedmonster.fly + \'\\n\' +\r\n            \'Can swim: \' + selectedmonster.swim + \'\\n\' +\r\n            \'Colour: \' + selectedmonster.colour + \'\\n\'\r\n            );\r\n          });\r\n          this.td.appendChild(this.img);\r\n        }\r\n\r\n        if (this.selected[i].Columns[y] == 1) {\r\n          this.img = document.createElement("img");\r\n          this.img.setAttribute("class", "stone");\r\n\r\n          //Every monster gets an id based on their coordinates\r\n          this.img.setAttribute("id", i + "x" + y);\r\n\r\n          switch (terrain) {\r\n            // Jungle\r\n            case 0:\r\n              this.img.src = "../src/Resources/junglerock.png";\r\n              document.getElementById("map").style.backgroundColor = "#289150";\r\n              break;\r\n\r\n            // Nortpole\r\n            case 1:\r\n              this.img.src = "../src/Resources/icechunk.png";\r\n              document.getElementById("map").style.backgroundColor = "#D8FFFF";\r\n              break;\r\n\r\n            // Desert\r\n            case 2:\r\n              this.img.src = "../src/Resources/cactus.png";\r\n              document.getElementById("map").style.backgroundColor = "#EDC9AF";\r\n              break;\r\n\r\n            default:\r\n              break;\r\n          }\r\n          this.td.appendChild(this.img);\r\n        }\r\n        this.tr.appendChild(this.td);\r\n      }\r\n      this.table.appendChild(this.tr);\r\n    }\r\n    this.map.appendChild(this.table);\r\n  }\r\n\r\n  initRemove() {\r\n    let grid = this.grid;\r\n    let terrain = this.terrain;\r\n    let zoocontroller = this.zoocontroller;\r\n\r\n    this.remove.addEventListener("drop", function(e) {\r\n      let data = e.dataTransfer.getData("Text");\r\n      let monster = document.getElementById(data);\r\n      if (monster != null) {\r\n        let origin = monster.getAttribute("id").split("x");\r\n\r\n        zoocontroller.deleteMonsterFromGrid(\r\n          grid,\r\n          terrain,\r\n          origin[0],\r\n          origin[1]\r\n        );\r\n\r\n        monster.remove();\r\n      }\r\n    });\r\n\r\n    this.remove.addEventListener("dragover", function(e) {\r\n      e.preventDefault();\r\n    });\r\n\r\n    this.remove.addEventListener("dragenter", function(e) {\r\n      e.preventDefault();\r\n    });\r\n  }\r\n}\r\n\n// CONCATENATED MODULE: ./src/Model/WeatherDataService.js\nclass WeatherDataService {\r\n\r\n    constructor() {\r\n        this.apikey = \'6efc35c3c2611e414ea66da76b2e3f0b\';\r\n        this.units = \'metric\';\r\n    }\r\n\r\n    getCurrentWeather(cityName) {\r\n        return fetch(`http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${this.apikey}&units=${this.units}`)\r\n        .then(function(response) {\r\n          return response.json();\r\n        })\r\n        .then(function(myJson) {\r\n          return myJson;\r\n        });\r\n      }\r\n}\n// CONCATENATED MODULE: ./src/View/WeatherView.js\nclass WeatherView {\r\n\r\n    constructor() {\r\n        this.img = document.getElementById(\'weatherimg\');\r\n        this.temp = document.getElementById(\'temp\');\r\n        this.rain = false;\r\n\r\n        this.initRainSwitch();\r\n    }\r\n\r\n    initRainSwitch() {\r\n        let rainswitch = document.getElementById(\'rainswitch\');\r\n        let ownclass = this;\r\n        rainswitch.addEventListener("click", function(e) {\r\n            e.preventDefault();\r\n            if(ownclass.rain) {\r\n                ownclass.updateWeather(ownclass.temperature, "Clear");\r\n                ownclass.rain = false;\r\n            } else {\r\n                ownclass.updateWeather(ownclass.temperature, "Rain");\r\n            }\r\n        });\r\n    }\r\n\r\n    updateWeather(temp, rain) {\r\n        this.temperature = temp;\r\n        this.temp.innerText = `${temp}° Celcius`;\r\n\r\n\r\n        if(rain === \'Rain\' || rain === \'Shower rain\') {\r\n            this.rain = true;\r\n            if(document.getElementById(\'rain\') === null) {\r\n                let canvas = document.createElement(\'canvas\');\r\n                canvas.setAttribute(\'id\', \'rain\');\r\n                document.getElementById(\'map\').appendChild(canvas);\r\n                this.startRain(300);\r\n            }\r\n        } else {\r\n            let canvas = document.getElementById(\'rain\');\r\n            if(canvas !== null) {\r\n                canvas.parentNode.removeChild(canvas);\r\n            }\r\n        }\r\n    }\r\n\r\n    startRain(maxParts) {\r\n        let canvas = document.getElementById("rain");\r\n\r\n        if (canvas.getContext) {\r\n            let ctx = canvas.getContext(\'2d\');\r\n            let w = canvas.width;\r\n            let h = canvas.height;\r\n            ctx.strokeStyle = \'rgba(46,86,147,0.3)\';\r\n            ctx.lineWidth = 0.7;\r\n            ctx.lineCap = \'round\';\r\n\r\n\r\n            let init = [];\r\n            for (let a = 0; a < maxParts; a++) {\r\n                init.push({\r\n                    x: Math.random() * w,\r\n                    y: Math.random() * h,\r\n                    l: Math.random() * 1,\r\n                    xs: -4 + Math.random() * 4 + 2,\r\n                    ys: Math.random() * 10 + 10\r\n                })\r\n            }\r\n\r\n            let particles = [];\r\n            for (let b = 0; b < maxParts; b++) {\r\n                particles[b] = init[b];\r\n            }\r\n\r\n            function draw() {\r\n                ctx.clearRect(0, 0, w, h);\r\n                for (let c = 0; c < particles.length; c++) {\r\n                    let p = particles[c];\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(p.x, p.y);\r\n                    ctx.lineTo(p.x + p.l * p.xs, p.y + p.l * p.ys);\r\n                    ctx.stroke();\r\n                }\r\n                move();\r\n            }\r\n\r\n            function move() {\r\n                for (let b = 0; b < particles.length; b++) {\r\n                    let p = particles[b];\r\n                    p.x += p.xs;\r\n                    p.y += p.ys;\r\n                    if (p.x > w || p.y > h) {\r\n                        p.x = Math.random() * w;\r\n                        p.y = -20;\r\n                    }\r\n                }\r\n            }\r\n\r\n            setInterval(draw, 80);\r\n\r\n        }\r\n    }\r\n}\n// CONCATENATED MODULE: ./src/Controller/WeatherController.js\n\r\n\r\n\r\nclass WeatherController_WeatherController {\r\n    constructor() {\r\n        this.weatherdata = new WeatherDataService();\r\n        this.weatherview = new WeatherView();\r\n    }\r\n\r\n    updateWeather(city) {\r\n        let weatherview = this.weatherview;\r\n        this.weatherdata.getCurrentWeather(city).then(function(data) {\r\n            weatherview.updateWeather(data.main.temp, data.weather[0].main);\r\n        });\r\n    }\r\n}\n// CONCATENATED MODULE: ./src/Model/MapService.js\nclass MapService {\r\n  loadGrid() {\r\n    return fetch("./map/grid.json")\r\n      .then(function(response) {\r\n        return response.json();\r\n      })\r\n      .then(function(grid) {\r\n        let STORAGE_KEY = "zoo-grid";\r\n\r\n        // Put the whole grid from localstorage in a variable\r\n        let storage = JSON.parse(localStorage.getItem(STORAGE_KEY));\r\n\r\n        if (storage != null) {\r\n          grid = storage;\r\n\r\n        // If the grid is not present in localstorage yet, put the whole grid as loaded from the local grid.json file in there\r\n        } else {\r\n          localStorage.setItem(STORAGE_KEY, JSON.stringify(grid));\r\n        }\r\n\r\n        return grid;\r\n      });\r\n  }\r\n\r\n  addMonsterToGrid(grid, terrain, monster, x, y) {\r\n    monster.x = x;\r\n    monster.y = y;\r\n    monster.map = terrain;\r\n    grid[terrain].grid[x].Columns[y] = monster;\r\n    this.saveToLocalStorage(grid);\r\n  }\r\n\r\n  deleteMonsterFromGrid(grid, terrain, x, y) {\r\n    grid[terrain].grid[x].Columns[y] = "0";\r\n    this.saveToLocalStorage(grid);\r\n  }\r\n\r\n  saveToLocalStorage(grid) {\r\n    let STORAGE_KEY = "zoo-grid";\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(grid));\r\n  }\r\n\r\n  getMonsterByPosition(grid, map, x, y) {\r\n    return grid[map].grid[x].Columns[y];\r\n  }\r\n\r\n}\r\n\n// CONCATENATED MODULE: ./src/Model/Monster.js\nclass Monster_Monster{\r\n    // MonsterData consists of element, name, arms, type_arms, legs, eyes, skintype, ability to fly, ability to swim, colour ,map, x coordinate, y coordinate\r\n    constructor(name, element, arms, typearms, legs, eyes, furtype, fly, swim, colour, map, x, y){\r\n        this.name = name;\r\n        this.element = element;\r\n        this.arms = arms;\r\n        this.typearms = typearms;\r\n        this.legs = legs;\r\n        this.eyes = eyes;\r\n        this.furtype = furtype;\r\n        this.fly = fly;\r\n        this.swim = swim;\r\n        this.colour = colour;\r\n        this.map = map;\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n\r\nclass Monster_FireMonster extends Monster_Monster{\r\n    constructor(){\r\n        super();\r\n        this.arms = [1,2,3,4,5,6];\r\n        this.typearms = ["Tentacles","Claws","Claw-wings"];\r\n        this.legs = [2];\r\n        this.eyes = [1,2,3,4];\r\n        this.furtype = ["Scales","Feathers"];\r\n        this.fly = "yes";\r\n        this.swim = "no";\r\n        this.color = ["Red","Orange","Brown"];\r\n    }\r\n}\r\n\r\nclass Monster_WaterMonster extends Monster_Monster{\r\n    constructor(){\r\n        super();\r\n        this.arms = [1,2,3,4,5,6,7,8];\r\n        this.typearms = ["Tentacles","Fins"];\r\n        this.legs = [1,2,3,4];\r\n        this.eyes = [1,2,3,4,5,6,7,8];\r\n        this.furtype = ["Scales","Slime"];\r\n        this.fly = "no";\r\n        this.swim = "yes";\r\n        this.color = ["Blue","Red","Green"];\r\n    }\r\n}\r\n\r\nclass Monster_EarthMonster extends Monster_Monster{\r\n    constructor(){\r\n        super();\r\n        this.arms = [2];\r\n        this.typearms = "Claws";\r\n        this.legs = [2,4,6];\r\n        this.eyes = [2];\r\n        this.furtype = ["Hair","Scales","Slime"];\r\n        this.fly = "no";\r\n        this.swim = "no";\r\n        this.color = ["Purple","Orange","White"];\r\n    }\r\n}\r\n\r\nclass Monster_WindMonster extends Monster_Monster{\r\n    constructor(){\r\n        super();\r\n        this.arms = [2];\r\n        this.typearms = ["Wings","Claw-wings"];\r\n        this.legs = [0,2];\r\n        this.eyes = [2];\r\n        this.furtype = ["Feathers","Hair","Scales"];\r\n        this.fly = "yes";\r\n        this.swim = "no";\r\n        this.color = ["White","Blue","Purple"];\r\n    }\r\n}\n// CONCATENATED MODULE: ./src/Controller/ZooController.js\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass ZooController_ZooController\r\n{\r\n    //el constructor\r\n    constructor(){\r\n        this.weathercontroller = new WeatherController_WeatherController();\r\n\r\n        this.monsterservice = new MonsterService_MonsterService();\r\n        this.createmonsterview =  new CreateMonsterView(this);\r\n        this.mapservice = new MapService();\r\n        this.fireMonster = new Monster_FireMonster();\r\n        this.waterMonster = new Monster_WaterMonster();\r\n        this.earthMonster =  new Monster_EarthMonster();\r\n        this.windMonster = new Monster_WindMonster();\r\n\r\n        this.mapview = new MapView(this, this.weathercontroller);\r\n    }\r\n\r\n    addMonsterToGrid(grid, terrain, x, y) {\r\n        this.mapservice.addMonsterToGrid(grid, terrain, this.getLastMonster(), x, y);\r\n    }\r\n\r\n    addExistingMonsterToGrid(grid, terrain, ox, oy, x, y) {\r\n        this.mapservice.addMonsterToGrid(grid, terrain, this.getMonsterByPosition(grid, terrain, ox, oy), x, y);\r\n    }\r\n\r\n    deleteMonsterFromGrid(grid, terrain, x, y) {\r\n        this.mapservice.deleteMonsterFromGrid(grid, terrain, x, y);\r\n    }\r\n\r\n    addMonster(name, element, arms, typearms, legs, eyes, furtype, fly, swim, colour, map, x, y){\r\n        this.monsterservice.saveMonster(name, element, arms, typearms, legs, eyes, furtype, fly, swim, colour, map, x, y);\r\n    }\r\n\r\n    loadGrid(mapview) {\r\n        this.mapservice.loadGrid().then(function(grid) {\r\n            mapview.paintGrid(grid);\r\n        });\r\n    }\r\n\r\n    getLastMonster() {\r\n        return this.monsterservice.getLastMonster();\r\n    }\r\n\r\n    getMonsterByPosition(grid, map, x, y) {\r\n        return this.mapservice.getMonsterByPosition(grid, map, x, y);\r\n    }\r\n\r\n    getArms(value){\r\n        let arms;\r\n        switch(value) {\r\n            case "fire":\r\n                arms = this.fireMonster.arms;\r\n                break;\r\n            case "water":\r\n                arms = this.waterMonster.arms;\r\n                break;\r\n            case "wind":\r\n                arms = this.windMonster.arms;\r\n                break;\r\n            case "earth":\r\n                arms = this.earthMonster.arms\r\n                break;\r\n            default:\r\n                arms = 0;\r\n          }\r\n        return arms;\r\n    }\r\n\r\n    getTypeArms(value){\r\n        let typeArms;\r\n        switch(value) {\r\n            case "fire":\r\n                typeArms = this.fireMonster.typearms;\r\n                break;\r\n            case "water":\r\n                typeArms = this.waterMonster.typearms;\r\n                break;\r\n            case "wind":\r\n                typeArms = this.windMonster.typearms;\r\n                break;\r\n            case "earth":\r\n                typeArms = this.earthMonster.typearms;\r\n                break;\r\n            default:\r\n                typeArms = 0;\r\n          }\r\n        return typeArms;        \r\n    }\r\n\r\n    getLegs(value){\r\n        let legs;\r\n        switch(value) {\r\n            case "fire":\r\n                legs = this.fireMonster.legs;\r\n                break;\r\n            case "water":\r\n                legs = this.waterMonster.legs;\r\n                break;\r\n            case "wind":\r\n                legs = this.windMonster.legs;\r\n                break;\r\n            case "earth":\r\n                legs = this.earthMonster.legs;\r\n                break;\r\n            default:\r\n                legs = 0;\r\n          }\r\n        return legs;\r\n    }\r\n\r\n    getEyes(value){\r\n        let eyes;\r\n        switch(value) {\r\n            case "fire":\r\n                eyes = this.fireMonster.eyes;\r\n                break;\r\n            case "water":\r\n                eyes = this.waterMonster.eyes;\r\n                break;\r\n            case "wind":\r\n                eyes = this.windMonster.eyes;\r\n                break;\r\n            case "earth":\r\n                eyes = this.earthMonster.eyes;\r\n                break;\r\n            default:\r\n                eyes = 0;\r\n          }\r\n        return eyes;\r\n    }\r\n\r\n    getFurType(value){\r\n        let furType;\r\n        switch(value) {\r\n            case "fire":\r\n                furType = this.fireMonster.furtype;\r\n                break;\r\n            case "water":\r\n                furType = this.waterMonster.furtype;\r\n                break;\r\n            case "wind":\r\n                furType = this.windMonster.furtype;\r\n                break;\r\n            case "earth":\r\n                furType = this.earthMonster.furtype;\r\n                break;\r\n            default:\r\n                furType = 0;\r\n          }\r\n        return furType;\r\n    }\r\n\r\n    getFly(value){\r\n        let fly;\r\n        switch(value) {\r\n            case "fire":\r\n                fly = this.fireMonster.fly;\r\n                break;\r\n            case "water":\r\n                fly = this.waterMonster.fly;\r\n                break;\r\n            case "wind":\r\n                fly = this.windMonster.fly;\r\n                break;\r\n            case "earth":\r\n                fly = this.earthMonster.fly;\r\n                break;\r\n            default:\r\n                fly = 0;\r\n          }\r\n        return fly;\r\n    }\r\n\r\n    getSwim(value){\r\n        let swim;\r\n        switch(value) {\r\n            case "fire":\r\n                swim = this.fireMonster.swim;\r\n                break;\r\n            case "water":\r\n                swim = this.waterMonster.swim;\r\n                break;\r\n            case "wind":\r\n                swim = this.windMonster.swim;\r\n                break;\r\n            case "earth":\r\n                swim = this.earthMonster.swim;\r\n                break;\r\n            default:\r\n                swim = 0;\r\n          }\r\n        return swim;\r\n    }\r\n\r\n    getColor(value){\r\n        let color;\r\n        switch(value) {\r\n            case "fire":\r\n                color = this.fireMonster.color;\r\n                break;\r\n            case "water":\r\n                color = this.waterMonster.color;\r\n                break;\r\n            case "wind":\r\n                color = this.windMonster.color;\r\n                break;\r\n            case "earth":\r\n                color = this.earthMonster.color;\r\n                break;\r\n            default:\r\n                color = 0;\r\n          }\r\n        return color;\r\n    }\r\n}\n// CONCATENATED MODULE: ./src/app.js\n\r\n\r\nlet zoocontroller = new ZooController_ZooController();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kZWwvTW9uc3Rlci5qcz81MThkIiwid2VicGFjazovLy8uL3NyYy9tb2RlbC9Nb25zdGVyU2VydmljZS5qcz8wODkyIiwid2VicGFjazovLy8uL3NyYy92aWV3L0NyZWF0ZU1vbnN0ZXJWaWV3LmpzP2M3NzAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZpZXcvTWFwVmlldy5qcz8wOTQ4Iiwid2VicGFjazovLy8uL3NyYy9Nb2RlbC9XZWF0aGVyRGF0YVNlcnZpY2UuanM/ZmM4ZSIsIndlYnBhY2s6Ly8vLi9zcmMvVmlldy9XZWF0aGVyVmlldy5qcz84NjFjIiwid2VicGFjazovLy8uL3NyYy9Db250cm9sbGVyL1dlYXRoZXJDb250cm9sbGVyLmpzPzE1ZjQiLCJ3ZWJwYWNrOi8vLy4vc3JjL01vZGVsL01hcFNlcnZpY2UuanM/MjA4MiIsIndlYnBhY2s6Ly8vLi9zcmMvTW9kZWwvTW9uc3Rlci5qcz84ZTRiIiwid2VicGFjazovLy8uL3NyYy9Db250cm9sbGVyL1pvb0NvbnRyb2xsZXIuanM/YmNkOSIsIndlYnBhY2s6Ly8vLi9zcmMvYXBwLmpzPzExMTIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtB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Q0FBQzs7QUFFRDs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsNENBQTRDLFFBQVE7QUFDcEQ7QUFDQTtBQUNBLFdBQVc7OztBQUdYOztBQUVBOztBQUVBO0FBQ0E7QUFDQSw0Q0FBNEMsUUFBUTtBQUNwRDtBQUNBO0FBQ0EsV0FBVzs7QUFFWDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLDRDQUE0QyxRQUFRO0FBQ3BEO0FBQ0E7QUFDQSxXQUFXOztBQUVYOztBQUVBOztBQUVBO0FBQ0E7QUFDQSw0Q0FBNEMsUUFBUTtBQUNwRDtBQUNBO0FBQ0EsV0FBVzs7QUFFWDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSw0Q0FBNEMsUUFBUTtBQUNwRDtBQUNBO0FBQ0EsV0FBVzs7QUFFWDtBQUNBLEdBQUc7QUFDSDs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNB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O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQzs7QUNoT3VEOztBQUV2RCx3QkFBd0IsMkJBQWEiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBNb25zdGVye1xyXG4gICAgLy8gTW9uc3RlckRhdGEgY29uc2lzdHMgb2YgZWxlbWVudCwgbmFtZSwgYXJtcywgdHlwZV9hcm1zLCBsZWdzLCBleWVzLCBza2ludHlwZSwgYWJpbGl0eSB0byBmbHksIGFiaWxpdHkgdG8gc3dpbSwgY29sb3VyICxtYXAsIHggY29vcmRpbmF0ZSwgeSBjb29yZGluYXRlXHJcbiAgICBjb25zdHJ1Y3RvcihuYW1lLCBlbGVtZW50LCBhcm1zLCB0eXBlYXJtcywgbGVncywgZXllcywgZnVydHlwZSwgZmx5LCBzd2ltLCBjb2xvdXIsIG1hcCwgeCwgeSl7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcclxuICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xyXG4gICAgICAgIHRoaXMuYXJtcyA9IGFybXM7XHJcbiAgICAgICAgdGhpcy50eXBlYXJtcyA9IHR5cGVhcm1zO1xyXG4gICAgICAgIHRoaXMubGVncyA9IGxlZ3M7XHJcbiAgICAgICAgdGhpcy5leWVzID0gZXllcztcclxuICAgICAgICB0aGlzLmZ1cnR5cGUgPSBmdXJ0eXBlO1xyXG4gICAgICAgIHRoaXMuZmx5ID0gZmx5O1xyXG4gICAgICAgIHRoaXMuc3dpbSA9IHN3aW07XHJcbiAgICAgICAgdGhpcy5jb2xvdXIgPSBjb2xvdXI7XHJcbiAgICAgICAgdGhpcy5tYXAgPSBtYXA7XHJcbiAgICAgICAgdGhpcy54ID0geDtcclxuICAgICAgICB0aGlzLnkgPSB5O1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRmlyZU1vbnN0ZXIgZXh0ZW5kcyBNb25zdGVye1xyXG4gICAgY29uc3RydWN0b3IoKXtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMuYXJtcyA9IFsxLDIsMyw0LDUsNl07XHJcbiAgICAgICAgdGhpcy50eXBlYXJtcyA9IFtcIlRlbnRhY2xlc1wiLFwiQ2xhd3NcIixcIkNsYXctd2luZ3NcIl07XHJcbiAgICAgICAgdGhpcy5sZWdzID0gWzJdO1xyXG4gICAgICAgIHRoaXMuZXllcyA9IFsxLDIsMyw0XTtcclxuICAgICAgICB0aGlzLmZ1cnR5cGUgPSBbXCJTY2FsZXNcIixcIkZlYXRoZXJzXCJdO1xyXG4gICAgICAgIHRoaXMuZmx5ID0gXCJ5ZXNcIjtcclxuICAgICAgICB0aGlzLnN3aW0gPSBcIm5vXCI7XHJcbiAgICAgICAgdGhpcy5jb2xvciA9IFtcIlJlZFwiLFwiT3JhbmdlXCIsXCJCcm93blwiXTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFdhdGVyTW9uc3RlciBleHRlbmRzIE1vbnN0ZXJ7XHJcbiAgICBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgdGhpcy5hcm1zID0gWzEsMiwzLDQsNSw2LDcsOF07XHJcbiAgICAgICAgdGhpcy50eXBlYXJtcyA9IFtcIlRlbnRhY2xlc1wiLFwiRmluc1wiXTtcclxuICAgICAgICB0aGlzLmxlZ3MgPSBbMSwyLDMsNF07XHJcbiAgICAgICAgdGhpcy5leWVzID0gWzEsMiwzLDQsNSw2LDcsOF07XHJcbiAgICAgICAgdGhpcy5mdXJ0eXBlID0gW1wiU2NhbGVzXCIsXCJTbGltZVwiXTtcclxuICAgICAgICB0aGlzLmZseSA9IFwibm9cIjtcclxuICAgICAgICB0aGlzLnN3aW0gPSBcInllc1wiO1xyXG4gICAgICAgIHRoaXMuY29sb3IgPSBbXCJCbHVlXCIsXCJSZWRcIixcIkdyZWVuXCJdO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRWFydGhNb25zdGVyIGV4dGVuZHMgTW9uc3RlcntcclxuICAgIGNvbnN0cnVjdG9yKCl7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLmFybXMgPSBbMl07XHJcbiAgICAgICAgdGhpcy50eXBlYXJtcyA9IFwiQ2xhd3NcIjtcclxuICAgICAgICB0aGlzLmxlZ3MgPSBbMiw0LDZdO1xyXG4gICAgICAgIHRoaXMuZXllcyA9IFsyXTtcclxuICAgICAgICB0aGlzLmZ1cnR5cGUgPSBbXCJIYWlyXCIsXCJTY2FsZXNcIixcIlNsaW1lXCJdO1xyXG4gICAgICAgIHRoaXMuZmx5ID0gXCJub1wiO1xyXG4gICAgICAgIHRoaXMuc3dpbSA9IFwibm9cIjtcclxuICAgICAgICB0aGlzLmNvbG9yID0gW1wiUHVycGxlXCIsXCJPcmFuZ2VcIixcIldoaXRlXCJdO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgIGNsYXNzIFdpbmRNb25zdGVyIGV4dGVuZHMgTW9uc3RlcntcclxuICAgIGNvbnN0cnVjdG9yKCl7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLmFybXMgPSBbMl07XHJcbiAgICAgICAgdGhpcy50eXBlYXJtcyA9IFtcIldpbmdzXCIsXCJDbGF3LXdpbmdzXCJdO1xyXG4gICAgICAgIHRoaXMubGVncyA9IFswLDJdO1xyXG4gICAgICAgIHRoaXMuZXllcyA9IFsyXTtcclxuICAgICAgICB0aGlzLmZ1cnR5cGUgPSBbXCJGZWF0aGVyc1wiLFwiSGFpclwiLFwiU2NhbGVzXCJdO1xyXG4gICAgICAgIHRoaXMuZmx5ID0gXCJ5ZXNcIjtcclxuICAgICAgICB0aGlzLnN3aW0gPSBcIm5vXCI7XHJcbiAgICAgICAgdGhpcy5jb2xvciA9IFtcIldoaXRlXCIsXCJCbHVlXCIsXCJQdXJwbGVcIl07XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyBNb25zdGVyIH0gZnJvbSAnLi9Nb25zdGVyJztcclxuXHJcblxyXG5leHBvcnQgY2xhc3MgTW9uc3RlclNlcnZpY2Vcclxue1xyXG4gICAgY29uc3RydWN0b3IoKXtcclxuICAgICAgICB0aGlzLm1vbnN0ZXJzID0gW1xyXG4gICAgICAgICAgICBuZXcgTW9uc3RlcihcImZpcmVcIiwgXCJNYXJpam5cIiwgMiwgXCJ0ZW50YWNsZXNcIiwgMiwgNCwgXCJzY2FsZXNcIiwgZmFsc2UsIGZhbHNlLCBcIm9yYW5nZVwiLCAwLCAxLCAxKVxyXG4gICAgICAgIF1cclxuICAgIH1cclxuXHJcbiAgICBnZXRNb25zdGVycygpXHJcbiAgICB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubW9uc3RlcnM7XHJcbiAgICB9XHJcblxyXG4gICAgc2F2ZU1vbnN0ZXIobmFtZSwgZWxlbWVudCwgYXJtcywgdHlwZWFybXMsIGxlZ3MsIGV5ZXMsIGZ1cnR5cGUsIGZseSwgc3dpbSwgY29sb3VyLCBtYXAsIHgsIHkpe1xyXG4gICAgICAgIGxldCBuZXdNb25zdGVyID0gbmV3IE1vbnN0ZXIobmFtZSwgZWxlbWVudCwgYXJtcywgdHlwZWFybXMsIGxlZ3MsIGV5ZXMsIGZ1cnR5cGUsIGZseSwgc3dpbSwgY29sb3VyLCBtYXAsIHgsIHkpO1xyXG4gICAgICAgIHRoaXMubW9uc3RlcnMucHVzaChuZXdNb25zdGVyKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRMYXN0TW9uc3RlcigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5tb25zdGVyc1t0aGlzLm1vbnN0ZXJzLmxlbmd0aCAtMV07XHJcbiAgICB9XHJcbiAgICBcclxufVxyXG4iLCJleHBvcnQgY2xhc3MgQ3JlYXRlTW9uc3RlclZpZXcge1xyXG5cclxuICBjb25zdHJ1Y3Rvcihjb250cm9sbGVyKSB7XHJcbiAgICB0aGlzLmNvbnRyb2xsZXIgPSBjb250cm9sbGVyO1xyXG5cclxuICAgIHRoaXMudGVtcGxhdGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNyZWF0ZV9tb25zdGVyXCIpO1xyXG5cclxuICAgIHRoaXMucmFkaW9fZmlyZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZWxlbWVudF9maXJlXCIpO1xyXG4gICAgdGhpcy5yYWRpb193YXRlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZWxlbWVudF93YXRlclwiKTtcclxuICAgIHRoaXMucmFkaW9fZWFydGggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImVsZW1lbnRfZWFydGhcIik7XHJcbiAgICB0aGlzLnJhZGlvX3dpbmQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImVsZW1lbnRfd2luZFwiKTtcclxuICAgIHRoaXMucmVtb3ZlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyZW1vdmVcIik7XHJcblxyXG4gICAgdGhpcy5zZXRFbGVtZW50RXZlbnRzKGNvbnRyb2xsZXIpO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlRm9ybShjb250cm9sbGVyKSB7XHJcbiAgICB0aGlzLm1vbnN0ZXJmb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtb25zdGVyX2Zvcm1cIik7XHJcblxyXG4gICAgbGV0IGNyZWF0ZWQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNyZWF0ZWRcIik7XHJcblxyXG4gICAgdGhpcy5tb25zdGVyZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIGZ1bmN0aW9uKGUpIHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICAgICAgaWYgKGNyZWF0ZWQuaGFzQ2hpbGROb2RlcygpKSB7XHJcbiAgICAgICAgd2hpbGUgKGNyZWF0ZWQuZmlyc3RDaGlsZCkge1xyXG4gICAgICAgICAgY3JlYXRlZC5yZW1vdmVDaGlsZChjcmVhdGVkLmZpcnN0Q2hpbGQpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICB0aGlzLmltZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XHJcbiAgICAgIHRoaXMuaW1nLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwiY3JlYXRlZFwiKTtcclxuXHJcbiAgICAgIGxldCBzcmMgPSBcIlwiO1xyXG5cclxuICAgICAgc3dpdGNoICh0aGlzLmVsZW1lbnQudmFsdWUpIHtcclxuICAgICAgICBjYXNlIFwiZmlyZVwiOlxyXG4gICAgICAgICAgc3JjID0gXCIuLi9zcmMvUmVzb3VyY2VzL29yYW5nZW1vbnN0ZXIucG5nXCI7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIFwid2F0ZXJcIjpcclxuICAgICAgICAgIHNyYyA9IFwiLi4vc3JjL1Jlc291cmNlcy9ibHVlbW9uc3Rlci5wbmdcIjtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgXCJlYXJ0aFwiOlxyXG4gICAgICAgICAgc3JjID0gXCIuLi9zcmMvUmVzb3VyY2VzL2Jyb3dubW9uc3Rlci5wbmdcIjtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgXCJ3aW5kXCI6XHJcbiAgICAgICAgICBzcmMgPSBcIi4uL3NyYy9SZXNvdXJjZXMvd2hpdGVtb25zdGVyLnBuZ1wiO1xyXG4gICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG4gICAgICB0aGlzLmltZy5zcmMgPSBzcmM7XHJcbiAgICAgIHRoaXMuaW1nLmRyYWdnYWJsZSA9IHRydWU7XHJcbiAgICAgIHRoaXMuaW1nLnNldEF0dHJpYnV0ZSgnaWQnLCAnLTF4LTEnKTtcclxuICAgICAgdGhpcy5pbWcuYWRkRXZlbnRMaXN0ZW5lcihcImRyYWdzdGFydFwiLCBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgZS5kYXRhVHJhbnNmZXIuc2V0RGF0YShcIlRleHRcIiwgZS50YXJnZXQuaWQpO1xyXG4gICAgICB9KTtcclxuICAgICAgY3JlYXRlZC5hcHBlbmRDaGlsZCh0aGlzLmltZyk7XHJcblxyXG4gICAgICBsZXQgbmFtZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibmFtZVwiKS52YWx1ZTtcclxuICAgICAgbGV0IGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImVsZW1lbnRcIikudmFsdWU7XHJcbiAgICAgIGxldCBhcm1zID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhcm1zXCIpLnZhbHVlO1xyXG4gICAgICBsZXQgdHlwZWFybXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInR5cGVfYXJtc1wiKS52YWx1ZTtcclxuICAgICAgbGV0IGxlZ3MgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxlZ3NcIikudmFsdWU7XHJcbiAgICAgIGxldCBleWVzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJleWVzXCIpLnZhbHVlO1xyXG4gICAgICBsZXQgZnVydHlwZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZnVydHlwZVwiKS52YWx1ZTtcclxuICAgICAgbGV0IGZseSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZmx5XCIpLnZhbHVlO1xyXG4gICAgICBsZXQgc3dpbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3dpbVwiKS52YWx1ZTtcclxuICAgICAgbGV0IGNvbG91ciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29sb3VyXCIpLnZhbHVlO1xyXG4gICAgICBcclxuICAgICAgY29udHJvbGxlci5hZGRNb25zdGVyKG5hbWUsIGVsZW1lbnQsIGFybXMsIHR5cGVhcm1zLCBsZWdzLCBleWVzLCBmdXJ0eXBlLCBmbHksIHN3aW0sIGNvbG91ciwgbnVsbCwgbnVsbCwgbnVsbCk7XHJcblxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBjbGVhckZvcm0oKSB7XHJcbiAgICBsZXQgZm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibW9uc3Rlcl9mb3JtXCIpO1xyXG4gICAgd2hpbGUgKGZvcm0uaGFzQ2hpbGROb2RlcygpKSB7XHJcbiAgICAgIGZvcm0ucmVtb3ZlQ2hpbGQoZm9ybS5maXJzdENoaWxkKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHNldEVsZW1lbnRFdmVudHMoY29udHJvbGxlcikge1xyXG4gICAgbGV0IG93bmNsYXNzID0gdGhpcztcclxuICAgIHRoaXMucmFkaW9fZmlyZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICBpZiAodGhpcy5jaGVja2VkKSB7XHJcbiAgICAgICAgICAgIG93bmNsYXNzLmNsZWFyRm9ybSgpO1xyXG4gICAgICAgICAgICBvd25jbGFzcy5nZW5lcmFsRnJvbSgpO1xyXG5cclxuICAgICAgICAgICAgbGV0IGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImVsZW1lbnRcIik7XHJcbiAgICAgICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgXCJmaXJlXCIpO1xyXG5cclxuICAgICAgICAgICAgbGV0IGFybXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFybXNcIik7XHJcblxyXG4gICAgICAgICAgICBsZXQgYW1vdW50YXJtcyA9IGNvbnRyb2xsZXIuZ2V0QXJtcyhcImZpcmVcIik7XHJcblxyXG4gICAgICAgICAgICBhbW91bnRhcm1zLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgICAgbGV0IG9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XHJcbiAgICAgICAgICAgICAgb3B0aW9uLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIGAke2VsZW1lbnR9YCk7XHJcbiAgICAgICAgICAgICAgb3B0aW9uLmlubmVySFRNTCA9IGVsZW1lbnQ7XHJcbiAgICAgICAgICAgICAgYXJtcy5hcHBlbmRDaGlsZChvcHRpb24pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgXHJcblxyXG4gICAgICAgICAgICBsZXQgdHlwZWFybXNzZWxlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInR5cGVfYXJtc1wiKTtcclxuXHJcbiAgICAgICAgICAgIGxldCBhcm10eXBlcyA9IGNvbnRyb2xsZXIuZ2V0VHlwZUFybXMoXCJmaXJlXCIpO1xyXG5cclxuICAgICAgICAgICAgYXJtdHlwZXMuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuICAgICAgICAgICAgICBsZXQgb3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcclxuICAgICAgICAgICAgICBvcHRpb24uc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgYCR7ZWxlbWVudH1gKTtcclxuICAgICAgICAgICAgICBvcHRpb24uaW5uZXJIVE1MID0gZWxlbWVudDtcclxuICAgICAgICAgICAgICB0eXBlYXJtc3NlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24pO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIGxldCBsZWdzbGFiZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxlZ3NsYWJlbFwiKTtcclxuICAgICAgICAgICAgbGVnc2xhYmVsLmlubmVySFRNTCA9IFwiTGVnczogXCIgKyBjb250cm9sbGVyLmdldExlZ3MoXCJmaXJlXCIpO1xyXG5cclxuICAgICAgICAgICAgbGV0IGxlZ3NpbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibGVnc1wiKTtcclxuICAgICAgICAgICAgbGVnc2lucHV0LnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIGNvbnRyb2xsZXIuZ2V0TGVncyhcImZpcmVcIikpO1xyXG5cclxuICAgICAgICAgICAgbGV0IGV5ZXNzZWxlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImV5ZXNcIik7XHJcblxyXG4gICAgICAgICAgICBsZXQgZXllcyA9IGNvbnRyb2xsZXIuZ2V0RXllcyhcImZpcmVcIik7XHJcblxyXG4gICAgICAgICAgICBleWVzLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgICAgbGV0IG9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XHJcbiAgICAgICAgICAgICAgb3B0aW9uLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIGAke2VsZW1lbnR9YCk7XHJcbiAgICAgICAgICAgICAgb3B0aW9uLmlubmVySFRNTCA9IGVsZW1lbnQ7XHJcbiAgICAgICAgICAgICAgZXllc3NlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24pO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIGxldCBmdXJ0eXBlc2VsZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmdXJ0eXBlXCIpO1xyXG5cclxuICAgICAgICAgICAgbGV0IGZ1cnR5cGVzID0gY29udHJvbGxlci5nZXRGdXJUeXBlKFwiZmlyZVwiKTtcclxuXHJcbiAgICAgICAgICAgIGZ1cnR5cGVzLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgICAgbGV0IG9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XHJcbiAgICAgICAgICAgICAgb3B0aW9uLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIGAke2VsZW1lbnR9YCk7XHJcbiAgICAgICAgICAgICAgb3B0aW9uLmlubmVySFRNTCA9IGVsZW1lbnQ7XHJcbiAgICAgICAgICAgICAgZnVydHlwZXNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24pO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIGxldCBmbHlsYWJlbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZmx5bGFiZWxcIik7XHJcbiAgICAgICAgICAgIGxldCBmbHkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZseVwiKTtcclxuXHJcbiAgICAgICAgICAgIGZseWxhYmVsLmlubmVySFRNTCA9IFwiQ2FuIGZseTogXCIgKyBjb250cm9sbGVyLmdldEZseShcImZpcmVcIik7XHJcbiAgICAgICAgICAgIGZseS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBjb250cm9sbGVyLmdldEZseShcImZpcmVcIikpO1xyXG5cclxuICAgICAgICAgICAgbGV0IHN3aW1sYWJlbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3dpbWxhYmVsXCIpO1xyXG4gICAgICAgICAgICBsZXQgc3dpbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3dpbVwiKTtcclxuXHJcbiAgICAgICAgICAgIHN3aW1sYWJlbC5pbm5lckhUTUwgPSBcIkNhbiBzd2ltOiBcIiArIGNvbnRyb2xsZXIuZ2V0U3dpbShcImZpcmVcIik7XHJcbiAgICAgICAgICAgIHN3aW0uc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgY29udHJvbGxlci5nZXRTd2ltKFwiZmlyZVwiKSk7XHJcblxyXG4gICAgICAgICAgICBsZXQgY29sb3Vyc2VsZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb2xvdXJcIik7XHJcblxyXG4gICAgICAgICAgICBsZXQgY29sb3VycyA9IGNvbnRyb2xsZXIuZ2V0Q29sb3IoXCJmaXJlXCIpO1xyXG5cclxuICAgICAgICAgICAgY29sb3Vycy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xyXG4gICAgICAgICAgICAgIGxldCBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xyXG4gICAgICAgICAgICAgIG9wdGlvbi5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBgJHtlbGVtZW50fWApO1xyXG4gICAgICAgICAgICAgIG9wdGlvbi5pbm5lckhUTUwgPSBlbGVtZW50O1xyXG4gICAgICAgICAgICAgIGNvbG91cnNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLnJhZGlvX2ZpcmUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMudXBkYXRlRm9ybSh0aGlzLmNvbnRyb2xsZXIpKTtcclxuXHJcbiAgICB0aGlzLnJhZGlvX3dhdGVyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbigpIHtcclxuICAgICAgaWYgKHRoaXMuY2hlY2tlZCkge1xyXG4gICAgICAgIGxldCBmb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtb25zdGVyX2Zvcm1cIik7XHJcbiAgICAgICAgb3duY2xhc3MuY2xlYXJGb3JtKCk7XHJcbiAgICAgICAgb3duY2xhc3MuZ2VuZXJhbEZyb20oKTtcclxuXHJcbiAgICAgICAgbGV0IGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImVsZW1lbnRcIik7XHJcbiAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBcImZpcmVcIik7XHJcblxyXG4gICAgICAgIGxldCBhcm1zID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhcm1zXCIpO1xyXG4gICAgICAgIC8vIGZvciBsb29wIHdpdGggYXJtc1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIGZvcihsZXQgaSA9IDE7IGkgPCA3OyBpKyspIHtcclxuICAgICAgICAvLyAgIGxldCBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xyXG4gICAgICAgIC8vICAgb3B0aW9uLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIGAke2l9YCk7XHJcbiAgICAgICAgLy8gICBvcHRpb24uaW5uZXJIVE1MID0gaTtcclxuICAgICAgICAvLyAgIGFybXMuYXBwZW5kQ2hpbGQob3B0aW9uKTtcclxuICAgICAgICAvLyB9XHJcblxyXG4gICAgICAgIGxldCB0eXBlYXJtc3NlbGVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidHlwZV9hcm1zXCIpO1xyXG5cclxuICAgICAgICAvLyBsZXQgb3B0aW9uMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XHJcbiAgICAgICAgLy8gb3B0aW9uMS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBcInRlbnRhY2xlc1wiKTtcclxuICAgICAgICAvLyBvcHRpb24xLmlubmVySFRNTCA9IFwiVGVudGFjbGVzXCI7XHJcbiAgICAgICAgLy8gbGV0IG9wdGlvbjIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xyXG4gICAgICAgIC8vIG9wdGlvbjIuc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgXCJjbGF3c1wiKTtcclxuICAgICAgICAvLyBvcHRpb24yLmlubmVySFRNTCA9IFwiQ2xhd3NcIjtcclxuICAgICAgICAvLyBsZXQgb3B0aW9uMyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XHJcbiAgICAgICAgLy8gb3B0aW9uMy5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBcImNsYXctd2luZ3NcIik7XHJcbiAgICAgICAgLy8gb3B0aW9uMy5pbm5lckhUTUwgPSBcIkNsYXctd2luZ3NcIjtcclxuXHJcbiAgICAgICAgLy8gdHlwZWFybXNzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMSk7XHJcbiAgICAgICAgLy8gdHlwZWFybXNzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMik7XHJcbiAgICAgICAgLy8gdHlwZWFybXNzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMyk7XHJcblxyXG4gICAgICAgIGxldCBsZWdzaW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxlZ3NcIik7XHJcbiAgICAgICAgLy8gbGVnc2lucHV0LnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIFwiMlwiKTtcclxuXHJcbiAgICAgICAgbGV0IGV5ZXNzZWxlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImV5ZXNcIik7XHJcblxyXG5cclxuICAgICAgICAvLyBmb3IobGV0IGkgPSAxOyBpIDwgNTsgaSsrKSB7XHJcbiAgICAgICAgLy8gICBsZXQgb3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcclxuICAgICAgICAvLyAgIG9wdGlvbi5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBgJHtpfWApO1xyXG4gICAgICAgIC8vICAgb3B0aW9uLmlubmVySFRNTCA9IGk7XHJcbiAgICAgICAgLy8gICBleWVzc2VsZWN0LmFwcGVuZENoaWxkKG9wdGlvbik7XHJcbiAgICAgICAgLy8gfVxyXG5cclxuICAgICAgICBsZXQgZnVydHlwZXNlbGVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZnVydHlwZVwiKTtcclxuXHJcbiAgICAgICAgLy8gbGV0IG9wdGlvbjExID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcclxuICAgICAgICAvLyBvcHRpb24xMS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBcInNjYWxlc1wiKTtcclxuICAgICAgICAvLyBvcHRpb24xMS5pbm5lckhUTUwgPSBcIlNjYWxlc1wiO1xyXG4gICAgICAgIC8vIGxldCBvcHRpb24yMiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XHJcbiAgICAgICAgLy8gb3B0aW9uMjIuc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgXCJmZWF0aGVyc1wiKTtcclxuICAgICAgICAvLyBvcHRpb24yMi5pbm5lckhUTUwgPSBcIkZlYXRoZXJzXCI7XHJcblxyXG4gICAgICAgIC8vIHR5cGVmdXJzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMTEpO1xyXG4gICAgICAgIC8vIHR5cGVmdXJzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMjIpO1xyXG5cclxuICAgICAgICBsZXQgZmx5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmbHlcIik7XHJcblxyXG4gICAgICAgIC8vIGZseWxhYmVsLmlubmVySFRNTCA9IFwiQ2FuIGZseTogbm9cIjtcclxuICAgICAgICAvLyBsZXQgZmx5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xyXG4gICAgICAgIC8vIGZseS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBcImZhbHNlXCIpO1xyXG5cclxuXHJcbiAgICAgICAgbGV0IHN3aW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInN3aW1cIik7XHJcblxyXG4gICAgICAgIC8vIHN3aW1sYWJlbC5pbm5lckhUTUwgPSBcIkNhbiBzd2ltOiBub1wiO1xyXG4gICAgICAgIC8vIGxldCBzd2ltID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xyXG4gICAgICAgIC8vIHN3aW0uc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgXCJmYWxzZVwiKTtcclxuXHJcblxyXG4gICAgICAgIGxldCBjb2xvdXJzZWxlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvbG91clwiKTtcclxuXHJcbiAgICAgICAgLy8gbGV0IG9wdGlvbjExMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XHJcbiAgICAgICAgLy8gb3B0aW9uMTExLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIFwicmVkXCIpO1xyXG4gICAgICAgIC8vIG9wdGlvbjExMS5pbm5lckhUTUwgPSBcIlJlZFwiO1xyXG4gICAgICAgIC8vIGxldCBvcHRpb24yMjIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xyXG4gICAgICAgIC8vIG9wdGlvbjIyMi5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBcIm9yYW5nZVwiKTtcclxuICAgICAgICAvLyBvcHRpb24yMjIuaW5uZXJIVE1MID0gXCJPcmFuZ2VcIjtcclxuICAgICAgICAvLyBsZXQgb3B0aW9uMzMzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcclxuICAgICAgICAvLyBvcHRpb24zMzMuc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgXCJicm93blwiKTtcclxuICAgICAgICAvLyBvcHRpb24zMzMuaW5uZXJIVE1MID0gXCJCcm93blwiO1xyXG5cclxuICAgICAgICAvLyBjb2xvdXJzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMTExKTtcclxuICAgICAgICAvLyBjb2xvdXJzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMjIyKTtcclxuICAgICAgICAvLyBjb2xvdXJzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMzMzKTtcclxuICAgICAgfVxyXG59KTtcclxuXHJcbnRoaXMucmFkaW9fd2F0ZXIuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMudXBkYXRlRm9ybSh0aGlzLmNvbnRyb2xsZXIpKTtcclxuXHJcblxyXG50aGlzLnJhZGlvX2VhcnRoLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbigpIHtcclxuICBpZiAodGhpcy5jaGVja2VkKSB7XHJcbiAgICBsZXQgZm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibW9uc3Rlcl9mb3JtXCIpO1xyXG4gICAgb3duY2xhc3MuY2xlYXJGb3JtKCk7XHJcbiAgICBvd25jbGFzcy5nZW5lcmFsRnJvbSgpO1xyXG5cclxuICAgIGxldCBlbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJlbGVtZW50XCIpO1xyXG4gICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBcImZpcmVcIik7XHJcblxyXG4gICAgbGV0IGFybXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFybXNcIik7XHJcbiAgICAvLyBmb3IgbG9vcCB3aXRoIGFybXNcclxuICAgIFxyXG4gICAgLy8gZm9yKGxldCBpID0gMTsgaSA8IDc7IGkrKykge1xyXG4gICAgLy8gICBsZXQgb3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcclxuICAgIC8vICAgb3B0aW9uLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIGAke2l9YCk7XHJcbiAgICAvLyAgIG9wdGlvbi5pbm5lckhUTUwgPSBpO1xyXG4gICAgLy8gICBhcm1zLmFwcGVuZENoaWxkKG9wdGlvbik7XHJcbiAgICAvLyB9XHJcblxyXG4gICAgbGV0IHR5cGVhcm1zc2VsZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0eXBlX2FybXNcIik7XHJcblxyXG4gICAgLy8gbGV0IG9wdGlvbjEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xyXG4gICAgLy8gb3B0aW9uMS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBcInRlbnRhY2xlc1wiKTtcclxuICAgIC8vIG9wdGlvbjEuaW5uZXJIVE1MID0gXCJUZW50YWNsZXNcIjtcclxuICAgIC8vIGxldCBvcHRpb24yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcclxuICAgIC8vIG9wdGlvbjIuc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgXCJjbGF3c1wiKTtcclxuICAgIC8vIG9wdGlvbjIuaW5uZXJIVE1MID0gXCJDbGF3c1wiO1xyXG4gICAgLy8gbGV0IG9wdGlvbjMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xyXG4gICAgLy8gb3B0aW9uMy5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBcImNsYXctd2luZ3NcIik7XHJcbiAgICAvLyBvcHRpb24zLmlubmVySFRNTCA9IFwiQ2xhdy13aW5nc1wiO1xyXG5cclxuICAgIC8vIHR5cGVhcm1zc2VsZWN0LmFwcGVuZENoaWxkKG9wdGlvbjEpO1xyXG4gICAgLy8gdHlwZWFybXNzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMik7XHJcbiAgICAvLyB0eXBlYXJtc3NlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24zKTtcclxuXHJcbiAgICBsZXQgbGVnc2lucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsZWdzXCIpO1xyXG4gICAgLy8gbGVnc2lucHV0LnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIFwiMlwiKTtcclxuXHJcbiAgICBsZXQgZXllc3NlbGVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZXllc1wiKTtcclxuXHJcblxyXG4gICAgLy8gZm9yKGxldCBpID0gMTsgaSA8IDU7IGkrKykge1xyXG4gICAgLy8gICBsZXQgb3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcclxuICAgIC8vICAgb3B0aW9uLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIGAke2l9YCk7XHJcbiAgICAvLyAgIG9wdGlvbi5pbm5lckhUTUwgPSBpO1xyXG4gICAgLy8gICBleWVzc2VsZWN0LmFwcGVuZENoaWxkKG9wdGlvbik7XHJcbiAgICAvLyB9XHJcblxyXG4gICAgbGV0IGZ1cnR5cGVzZWxlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZ1cnR5cGVcIik7XHJcblxyXG4gICAgLy8gbGV0IG9wdGlvbjExID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcclxuICAgIC8vIG9wdGlvbjExLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIFwic2NhbGVzXCIpO1xyXG4gICAgLy8gb3B0aW9uMTEuaW5uZXJIVE1MID0gXCJTY2FsZXNcIjtcclxuICAgIC8vIGxldCBvcHRpb24yMiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XHJcbiAgICAvLyBvcHRpb24yMi5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBcImZlYXRoZXJzXCIpO1xyXG4gICAgLy8gb3B0aW9uMjIuaW5uZXJIVE1MID0gXCJGZWF0aGVyc1wiO1xyXG5cclxuICAgIC8vIHR5cGVmdXJzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMTEpO1xyXG4gICAgLy8gdHlwZWZ1cnNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24yMik7XHJcblxyXG4gICAgbGV0IGZseSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZmx5XCIpO1xyXG5cclxuICAgIC8vIGZseWxhYmVsLmlubmVySFRNTCA9IFwiQ2FuIGZseTogbm9cIjtcclxuICAgIC8vIGxldCBmbHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XHJcbiAgICAvLyBmbHkuc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgXCJmYWxzZVwiKTtcclxuXHJcblxyXG4gICAgbGV0IHN3aW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInN3aW1cIik7XHJcblxyXG4gICAgLy8gc3dpbWxhYmVsLmlubmVySFRNTCA9IFwiQ2FuIHN3aW06IG5vXCI7XHJcbiAgICAvLyBsZXQgc3dpbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcclxuICAgIC8vIHN3aW0uc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgXCJmYWxzZVwiKTtcclxuXHJcblxyXG4gICAgbGV0IGNvbG91cnNlbGVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29sb3VyXCIpO1xyXG5cclxuICAgIC8vIGxldCBvcHRpb24xMTEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xyXG4gICAgLy8gb3B0aW9uMTExLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIFwicmVkXCIpO1xyXG4gICAgLy8gb3B0aW9uMTExLmlubmVySFRNTCA9IFwiUmVkXCI7XHJcbiAgICAvLyBsZXQgb3B0aW9uMjIyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcclxuICAgIC8vIG9wdGlvbjIyMi5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBcIm9yYW5nZVwiKTtcclxuICAgIC8vIG9wdGlvbjIyMi5pbm5lckhUTUwgPSBcIk9yYW5nZVwiO1xyXG4gICAgLy8gbGV0IG9wdGlvbjMzMyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XHJcbiAgICAvLyBvcHRpb24zMzMuc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgXCJicm93blwiKTtcclxuICAgIC8vIG9wdGlvbjMzMy5pbm5lckhUTUwgPSBcIkJyb3duXCI7XHJcblxyXG4gICAgLy8gY29sb3Vyc2VsZWN0LmFwcGVuZENoaWxkKG9wdGlvbjExMSk7XHJcbiAgICAvLyBjb2xvdXJzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMjIyKTtcclxuICAgIC8vIGNvbG91cnNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24zMzMpO1xyXG4gIH1cclxufSk7XHJcblxyXG50aGlzLnJhZGlvX2VhcnRoLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLnVwZGF0ZUZvcm0odGhpcy5jb250cm9sbGVyKSk7XHJcblxyXG5cclxudGhpcy5yYWRpb193aW5kLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbigpIHtcclxuICAgICAgICBpZiAodGhpcy5jaGVja2VkKSB7XHJcbiAgICAgICAgICBvd25jbGFzcy5jbGVhckZvcm0oKTtcclxuICAgICAgICAgIG93bmNsYXNzLmdlbmVyYWxGcm9tKCk7XHJcblxyXG4gICAgICAgICAgbGV0IGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImVsZW1lbnRcIik7XHJcbiAgICAgICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIFwid2luZFwiKTtcclxuXHJcbiAgICAgICAgICBsZXQgYXJtcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYXJtc1wiKTtcclxuXHJcbiAgICAgICAgICBsZXQgYW1vdW50YXJtcyA9IGNvbnRyb2xsZXIuZ2V0QXJtcyhcIndpbmRcIik7XHJcblxyXG4gICAgICAgICAgYW1vdW50YXJtcy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xyXG4gICAgICAgICAgICBsZXQgb3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcclxuICAgICAgICAgICAgb3B0aW9uLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIGAke2VsZW1lbnR9YCk7XHJcbiAgICAgICAgICAgIG9wdGlvbi5pbm5lckhUTUwgPSBlbGVtZW50O1xyXG4gICAgICAgICAgICBhcm1zLmFwcGVuZENoaWxkKG9wdGlvbik7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAgIFxyXG5cclxuICAgICAgICAgIGxldCB0eXBlYXJtc3NlbGVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidHlwZV9hcm1zXCIpO1xyXG5cclxuICAgICAgICAgIGxldCBhcm10eXBlcyA9IGNvbnRyb2xsZXIuZ2V0VHlwZUFybXMoXCJ3aW5kXCIpO1xyXG5cclxuICAgICAgICAgIGFybXR5cGVzLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgIGxldCBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xyXG4gICAgICAgICAgICBvcHRpb24uc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgYCR7ZWxlbWVudH1gKTtcclxuICAgICAgICAgICAgb3B0aW9uLmlubmVySFRNTCA9IGVsZW1lbnQ7XHJcbiAgICAgICAgICAgIHR5cGVhcm1zc2VsZWN0LmFwcGVuZENoaWxkKG9wdGlvbik7XHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICBsZXQgbGVnc2xhYmVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsZWdzbGFiZWxcIik7XHJcbiAgICAgICAgICBsZWdzbGFiZWwuaW5uZXJIVE1MID0gXCJMZWdzOiBcIiArIGNvbnRyb2xsZXIuZ2V0TGVncyhcIndpbmRcIik7XHJcblxyXG4gICAgICAgICAgbGV0IGxlZ3NpbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibGVnc1wiKTtcclxuICAgICAgICAgIGxlZ3NpbnB1dC5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBjb250cm9sbGVyLmdldExlZ3MoXCJ3aW5kXCIpKTtcclxuXHJcbiAgICAgICAgICBsZXQgZXllc3NlbGVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZXllc1wiKTtcclxuXHJcbiAgICAgICAgICBsZXQgZXllcyA9IGNvbnRyb2xsZXIuZ2V0RXllcyhcIndpbmRcIik7XHJcblxyXG4gICAgICAgICAgZXllcy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xyXG4gICAgICAgICAgICBsZXQgb3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcclxuICAgICAgICAgICAgb3B0aW9uLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIGAke2VsZW1lbnR9YCk7XHJcbiAgICAgICAgICAgIG9wdGlvbi5pbm5lckhUTUwgPSBlbGVtZW50O1xyXG4gICAgICAgICAgICBleWVzc2VsZWN0LmFwcGVuZENoaWxkKG9wdGlvbik7XHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICBsZXQgZnVydHlwZXNlbGVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZnVydHlwZVwiKTtcclxuXHJcbiAgICAgICAgICBsZXQgZnVydHlwZXMgPSBjb250cm9sbGVyLmdldEZ1clR5cGUoXCJ3aW5kXCIpO1xyXG5cclxuICAgICAgICAgIGZ1cnR5cGVzLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgIGxldCBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xyXG4gICAgICAgICAgICBvcHRpb24uc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgYCR7ZWxlbWVudH1gKTtcclxuICAgICAgICAgICAgb3B0aW9uLmlubmVySFRNTCA9IGVsZW1lbnQ7XHJcbiAgICAgICAgICAgIGZ1cnR5cGVzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uKTtcclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgIGxldCBmbHlsYWJlbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZmx5bGFiZWxcIik7XHJcbiAgICAgICAgICBsZXQgZmx5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmbHlcIik7XHJcblxyXG4gICAgICAgICAgZmx5bGFiZWwuaW5uZXJIVE1MID0gXCJDYW4gZmx5OiBcIiArIGNvbnRyb2xsZXIuZ2V0Rmx5KFwid2luZFwiKTtcclxuICAgICAgICAgIGZseS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBjb250cm9sbGVyLmdldEZseShcIndpbmRcIikpO1xyXG5cclxuICAgICAgICAgIGxldCBzd2ltbGFiZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInN3aW1sYWJlbFwiKTtcclxuICAgICAgICAgIGxldCBzd2ltID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzd2ltXCIpO1xyXG5cclxuICAgICAgICAgIHN3aW1sYWJlbC5pbm5lckhUTUwgPSBcIkNhbiBzd2ltOiBcIiArIGNvbnRyb2xsZXIuZ2V0U3dpbShcIndpbmRcIik7XHJcbiAgICAgICAgICBzd2ltLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIGNvbnRyb2xsZXIuZ2V0U3dpbShcIndpbmRcIikpO1xyXG5cclxuICAgICAgICAgIGxldCBjb2xvdXJzZWxlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvbG91clwiKTtcclxuXHJcbiAgICAgICAgICBsZXQgY29sb3VycyA9IGNvbnRyb2xsZXIuZ2V0Q29sb3IoXCJ3aW5kXCIpO1xyXG5cclxuICAgICAgICAgIGNvbG91cnMuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuICAgICAgICAgICAgbGV0IG9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XHJcbiAgICAgICAgICAgIG9wdGlvbi5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBgJHtlbGVtZW50fWApO1xyXG4gICAgICAgICAgICBvcHRpb24uaW5uZXJIVE1MID0gZWxlbWVudDtcclxuICAgICAgICAgICAgY29sb3Vyc2VsZWN0LmFwcGVuZENoaWxkKG9wdGlvbik7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICB9KTtcclxudGhpcy5yYWRpb193aW5kLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLnVwZGF0ZUZvcm0odGhpcy5jb250cm9sbGVyKSk7XHJcblxyXG4gIH1cclxuXHJcbiAgZ2VuZXJhbEZyb20oKXtcclxuICAgIGxldCBmb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtb25zdGVyX2Zvcm1cIik7XHJcbiAgICAgICAgICAgIC8vIFRPRE86IFJlbW92ZSBwcmV2aW91cyBmb3JtXHJcblxyXG4gICAgICAgICAgICBsZXQgZmllbGRzZXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZmllbGRzZXRcIik7XHJcbiAgICAgICAgICAgIGxldCBuYW1lbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XHJcbiAgICAgICAgICAgIG5hbWVsYWJlbC5pbm5lckhUTUwgPSBcIk5hbWU6XCI7XHJcbiAgICAgICAgICAgIGxldCBuYW1laW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XHJcbiAgICAgICAgICAgIG5hbWVpbnB1dC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcIm5hbWVcIik7XHJcbiAgICAgICAgICAgIG5hbWVpbnB1dC5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsIFwibmFtZVwiKTtcclxuXHJcbiAgICAgICAgICAgIGZpZWxkc2V0LmFwcGVuZENoaWxkKG5hbWVsYWJlbCk7XHJcbiAgICAgICAgICAgIGZpZWxkc2V0LmFwcGVuZENoaWxkKG5hbWVpbnB1dCk7XHJcblxyXG4gICAgICAgICAgICBmb3JtLmFwcGVuZENoaWxkKGZpZWxkc2V0KTtcclxuXHJcbiAgICAgICAgICAgIGxldCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xyXG4gICAgICAgICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZShcImlkXCIsIFwiZWxlbWVudFwiKTtcclxuICAgICAgICAgICAgLy8gVmFsdWUgd2lsbCBiZSBzZXQgYnkgZWxlbWVudFxyXG4gICAgICAgICAgICBlbGVtZW50LmhpZGRlbiA9IHRydWU7XHJcblxyXG4gICAgICAgICAgICBmb3JtLmFwcGVuZENoaWxkKGVsZW1lbnQpO1xyXG5cclxuICAgICAgICAgICAgbGV0IGZpZWxkc2V0MiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmaWVsZHNldFwiKTtcclxuICAgICAgICAgICAgbGV0IGFybXNsYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcclxuICAgICAgICAgICAgYXJtc2xhYmVsLmlubmVySFRNTCA9IFwiQXJtczpcIjtcclxuICAgICAgICAgICAgbGV0IHNlbGVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzZWxlY3RcIik7XHJcbiAgICAgICAgICAgIHNlbGVjdC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImFybXNcIik7XHJcbiAgICAgICAgICAgIC8vIEFtb3VudCBvZiBvcHRpb25zIHN3aWwgYmUgc2V0IGJ5IGVsZW1lbnRcclxuXHJcbiAgICAgICAgICAgIGZpZWxkc2V0Mi5hcHBlbmRDaGlsZChhcm1zbGFiZWwpO1xyXG4gICAgICAgICAgICBmaWVsZHNldDIuYXBwZW5kQ2hpbGQoc2VsZWN0KTtcclxuXHJcbiAgICAgICAgICAgIGZvcm0uYXBwZW5kQ2hpbGQoZmllbGRzZXQyKTtcclxuXHJcbiAgICAgICAgICAgIGxldCBmaWVsZHNldDMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZmllbGRzZXRcIik7XHJcbiAgICAgICAgICAgIGxldCB0eXBlYXJtc2xhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xyXG4gICAgICAgICAgICB0eXBlYXJtc2xhYmVsLmlubmVySFRNTCA9IFwiVHlwZSBhcm1zOlwiXHJcblxyXG4gICAgICAgICAgICBsZXQgdHlwZWFybXNzZWxlY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2VsZWN0XCIpO1xyXG4gICAgICAgICAgICB0eXBlYXJtc3NlbGVjdC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcInR5cGVfYXJtc1wiKTtcclxuXHJcbiAgICAgICAgICAgIGZpZWxkc2V0My5hcHBlbmRDaGlsZCh0eXBlYXJtc3NlbGVjdCk7XHJcblxyXG4gICAgICAgICAgICBmb3JtLmFwcGVuZENoaWxkKHR5cGVhcm1zbGFiZWwpO1xyXG4gICAgICAgICAgICBmb3JtLmFwcGVuZENoaWxkKGZpZWxkc2V0Myk7XHJcblxyXG4gICAgICAgICAgICBsZXQgZmllbGRzZXQ0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZpZWxkc2V0XCIpO1xyXG4gICAgICAgICAgICBsZXQgbGVnc2xhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xyXG4gICAgICAgICAgICBsZWdzbGFiZWwuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJsZWdzbGFiZWxcIik7XHJcbiAgICAgICAgICAgIGxlZ3NsYWJlbC5pbm5lckhUTUwgPSBcIkxlZ3M6IFwiO1xyXG5cclxuICAgICAgICAgICAgbGV0IGxlZ3NpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcclxuICAgICAgICAgICAgbGVnc2lucHV0LnNldEF0dHJpYnV0ZShcImlkXCIsIFwibGVnc1wiKTtcclxuICAgICAgICAgICAgbGVnc2lucHV0LnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwiaGlkZGVuXCIpO1xyXG5cclxuICAgICAgICAgICAgZmllbGRzZXQ0LmFwcGVuZENoaWxkKGxlZ3NsYWJlbCk7XHJcbiAgICAgICAgICAgIGZpZWxkc2V0NC5hcHBlbmRDaGlsZChsZWdzaW5wdXQpO1xyXG4gICAgICAgICAgICBmb3JtLmFwcGVuZENoaWxkKGZpZWxkc2V0NCk7XHJcblxyXG4gICAgICAgICAgICBsZXQgZmllbGRzZXQ5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZpZWxkc2V0XCIpO1xyXG4gICAgICAgICAgICBsZXQgZXllc2xhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xyXG4gICAgICAgICAgICBleWVzbGFiZWwuaW5uZXJIVE1MID0gXCJFeWVzOlwiO1xyXG4gICAgICAgICAgICBsZXQgc2VsZWN0MiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzZWxlY3RcIik7XHJcbiAgICAgICAgICAgIHNlbGVjdDIuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJleWVzXCIpO1xyXG4gICAgICAgICAgICAvLyBBbW91bnQgb2YgZXllcyBzZXQgYnkgZWxlbWVudFxyXG5cclxuICAgICAgICAgICAgZmllbGRzZXQ5LmFwcGVuZENoaWxkKGV5ZXNsYWJlbCk7XHJcbiAgICAgICAgICAgIGZpZWxkc2V0OS5hcHBlbmRDaGlsZChzZWxlY3QyKTtcclxuXHJcbiAgICAgICAgICAgIGZvcm0uYXBwZW5kKGZpZWxkc2V0OSk7XHJcblxyXG4gICAgICAgICAgICBsZXQgZmllbGRzZXQ1ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZpZWxkc2V0XCIpO1xyXG4gICAgICAgICAgICBsZXQgZnVydHlwZWxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xyXG4gICAgICAgICAgICBmdXJ0eXBlbGFiZWwuaW5uZXJIVE1MID0gXCJGdXIgdHlwZTpcIjtcclxuICAgICAgICAgICAgbGV0IHR5cGVmdXJzZWxlY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2VsZWN0XCIpO1xyXG4gICAgICAgICAgICB0eXBlZnVyc2VsZWN0LnNldEF0dHJpYnV0ZShcImlkXCIsIFwiZnVydHlwZVwiKTtcclxuXHJcbiAgICAgICAgICAgIGZpZWxkc2V0NS5hcHBlbmRDaGlsZChmdXJ0eXBlbGFiZWwpO1xyXG4gICAgICAgICAgICBmaWVsZHNldDUuYXBwZW5kQ2hpbGQodHlwZWZ1cnNlbGVjdCk7XHJcbiAgICAgICAgICAgIGZvcm0uYXBwZW5kQ2hpbGQoZmllbGRzZXQ1KTtcclxuXHJcbiAgICAgICAgICAgIGxldCBmaWVsZHNldDYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZmllbGRzZXRcIik7XHJcbiAgICAgICAgICAgIGxldCBmbHlsYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiKTtcclxuICAgICAgICAgICAgZmx5bGFiZWwuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJmbHlsYWJlbFwiKVxyXG4gICAgICAgICAgICBmbHlsYWJlbC5pbm5lckhUTUwgPSBcIkNhbiBmbHk6IFwiO1xyXG4gICAgICAgICAgICBsZXQgZmx5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xyXG4gICAgICAgICAgICBmbHkuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJmbHlcIik7XHJcbiAgICAgICAgICAgIGZseS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBcIlwiKTtcclxuICAgICAgICAgICAgZmx5LnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwiaGlkZGVuXCIpO1xyXG5cclxuICAgICAgICAgICAgZmllbGRzZXQ2LmFwcGVuZENoaWxkKGZseWxhYmVsKTtcclxuICAgICAgICAgICAgZmllbGRzZXQ2LmFwcGVuZENoaWxkKGZseSk7XHJcblxyXG4gICAgICAgICAgICBmb3JtLmFwcGVuZENoaWxkKGZpZWxkc2V0Nik7XHJcblxyXG4gICAgICAgICAgICBsZXQgZmllbGRzZXQ3ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZpZWxkc2V0XCIpO1xyXG4gICAgICAgICAgICBsZXQgc3dpbWxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xyXG4gICAgICAgICAgICBzd2ltbGFiZWwuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJzd2ltbGFiZWxcIilcclxuICAgICAgICAgICAgc3dpbWxhYmVsLmlubmVySFRNTCA9IFwiQ2FuIHN3aW06IFwiO1xyXG4gICAgICAgICAgICBsZXQgc3dpbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcclxuICAgICAgICAgICAgc3dpbS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcInN3aW1cIik7XHJcbiAgICAgICAgICAgIHN3aW0uc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgXCJcIik7XHJcbiAgICAgICAgICAgIHN3aW0uc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJoaWRkZW5cIik7XHJcblxyXG4gICAgICAgICAgICBmaWVsZHNldDYuYXBwZW5kQ2hpbGQoc3dpbWxhYmVsKTtcclxuICAgICAgICAgICAgZmllbGRzZXQ2LmFwcGVuZENoaWxkKHN3aW0pO1xyXG5cclxuICAgICAgICAgICAgZm9ybS5hcHBlbmRDaGlsZChmaWVsZHNldDcpO1xyXG5cclxuICAgICAgICAgICAgbGV0IGZpZWxkc2V0OCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmaWVsZHNldFwiKTtcclxuICAgICAgICAgICAgbGV0IGNvbG91cmxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xyXG4gICAgICAgICAgICBjb2xvdXJsYWJlbC5pbm5lckhUTUwgPSBcIkNvbG91cjpcIlxyXG5cclxuICAgICAgICAgICAgbGV0IGNvbG91cnNlbGVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzZWxlY3RcIik7XHJcbiAgICAgICAgICAgIGNvbG91cnNlbGVjdC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImNvbG91clwiKTtcclxuXHJcbiAgICAgICAgICAgIGZpZWxkc2V0OC5hcHBlbmRDaGlsZChjb2xvdXJzZWxlY3QpO1xyXG5cclxuICAgICAgICAgICAgZm9ybS5hcHBlbmRDaGlsZChjb2xvdXJsYWJlbCk7XHJcbiAgICAgICAgICAgIGZvcm0uYXBwZW5kQ2hpbGQoZmllbGRzZXQ4KTtcclxuXHJcbiAgICAgICAgICAgIGxldCByZXNldGJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcclxuICAgICAgICAgICAgcmVzZXRidXR0b24uc2V0QXR0cmlidXRlKFwidHlwZVwiLCBcInJlc2V0XCIpO1xyXG4gICAgICAgICAgICByZXNldGJ1dHRvbi5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcIm5lcy1idG4gaXMtZXJyb3JcIik7XHJcbiAgICAgICAgICAgIHJlc2V0YnV0dG9uLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIFwiQ2FuY2VsXCIpO1xyXG5cclxuICAgICAgICAgICAgbGV0IHN1Ym1pdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcclxuICAgICAgICAgICAgc3VibWl0LnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJzdWJtaXRcIik7XHJcbiAgICAgICAgICAgIHN1Ym1pdC5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcIm5lcy1idG4gaXMtc3VjY2Vzc1wiKTtcclxuICAgICAgICAgICAgc3VibWl0LnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIFwiU3VibWl0XCIpO1xyXG5cclxuICAgICAgICAgICAgZm9ybS5hcHBlbmRDaGlsZChyZXNldGJ1dHRvbik7XHJcbiAgICAgICAgICAgIGZvcm0uYXBwZW5kQ2hpbGQoc3VibWl0KTtcclxuICAgICAgICAgICAgdGhpcy51cGRhdGVGb3JtKHRoaXMuY29udHJvbGxlcik7XHJcbiAgICAgICAgICB9XHJcbn1cclxuIiwiZXhwb3J0IGNsYXNzIE1hcFZpZXcge1xyXG4gIGNvbnN0cnVjdG9yKHpvb2NvbnRyb2xsZXIsIHdlYXRoZXJjb250cm9sbGVyKSB7XHJcbiAgICB0aGlzLm1hcCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFwXCIpO1xyXG4gICAgdGhpcy5yZW1vdmUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJlbW92ZVwiKTtcclxuXHJcbiAgICB0aGlzLnpvb2NvbnRyb2xsZXIgPSB6b29jb250cm9sbGVyO1xyXG4gICAgdGhpcy53ZWF0aGVyY29udHJvbGxlciA9IHdlYXRoZXJjb250cm9sbGVyO1xyXG5cclxuICAgIC8vIFpvbyB3aWR0aCAoencpIGFuZCB6b28gaGVpZ2h0ICh6aClcclxuXHJcbiAgICB0aGlzLnp3ID0gMTA7XHJcbiAgICB0aGlzLnpoID0gMTA7XHJcblxyXG4gICAgLy8gTG9hZCBidXR0b25zIGZyb20gaW5kZXguaHRtbFxyXG5cclxuICAgIGxldCBqdW5nbGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImp1bmdsZVwiKTtcclxuICAgIGxldCBkZXNlcnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRlc2VydFwiKTtcclxuICAgIGxldCBub3J0aHBvbGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm5vcnRocG9sZVwiKTtcclxuXHJcbiAgICBqdW5nbGUuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAganVuZ2xlLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibmVzLWJ0biBpcy1kaXNhYmxlZFwiKTtcclxuXHJcbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgIC8vIEJ1dHRvbnMgZm9yIHN3aXRjaGluZyBiZXR3ZWVuIGVudmlyb25tZW50c1xyXG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4gICAganVuZ2xlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIGlmIChqdW5nbGUuZGlzYWJsZWQgIT0gdHJ1ZSkge1xyXG4gICAgICAgIHRoaXMubG9hZEdyaWQoMCk7XHJcbiAgICAgICAganVuZ2xlLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICBkZXNlcnQuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICBub3J0aHBvbGUuZGlzYWJsZWQgPSBmYWxzZTtcclxuXHJcbiAgICAgICAganVuZ2xlLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibmVzLWJ0biBpcy1kaXNhYmxlZFwiKTtcclxuICAgICAgICBkZXNlcnQuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJuZXMtYnRuIGlzLXdhcm5pbmdcIik7XHJcbiAgICAgICAgbm9ydGhwb2xlLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibmVzLWJ0blwiKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgZGVzZXJ0LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIGlmIChkZXNlcnQuZGlzYWJsZWQgIT0gdHJ1ZSkge1xyXG4gICAgICAgIHRoaXMubG9hZEdyaWQoMik7XHJcbiAgICAgICAgZGVzZXJ0LmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICBqdW5nbGUuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICBub3J0aHBvbGUuZGlzYWJsZWQgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgZGVzZXJ0LnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibmVzLWJ0biBpcy1kaXNhYmxlZFwiKTtcclxuICAgICAgICBqdW5nbGUuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJuZXMtYnRuIGlzLXN1Y2Nlc3NcIik7XHJcbiAgICAgICAgbm9ydGhwb2xlLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibmVzLWJ0blwiKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgbm9ydGhwb2xlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIGlmIChub3J0aHBvbGUuZGlzYWJsZWQgIT0gdHJ1ZSkge1xyXG4gICAgICAgIHRoaXMubG9hZEdyaWQoMSk7XHJcbiAgICAgICAgbm9ydGhwb2xlLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICBkZXNlcnQuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICBqdW5nbGUuZGlzYWJsZWQgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgbm9ydGhwb2xlLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibmVzLWJ0biBpcy1kaXNhYmxlZFwiKTtcclxuICAgICAgICBqdW5nbGUuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJuZXMtYnRuIGlzLXN1Y2Nlc3NcIik7XHJcbiAgICAgICAgZGVzZXJ0LnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibmVzLWJ0biBpcy13YXJuaW5nXCIpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcbiAgICAvLyBJbml0aWFsaXNlIHRoZSBtYXAgZnJvbSBqdW5nbGVcclxuICAgIHRoaXMubG9hZEdyaWQoMCk7XHJcbiAgfVxyXG5cclxuICBsb2FkR3JpZCh0ZXJyYWluKSB7XHJcbiAgICAvLyBUZXJyYWluIGluZGV4OiAwIGlzIGp1bmdsZSwgMSBpcyBub3J0aHBvbGUsIDMgaXMgZGVzZXJ0XHJcbiAgICB0aGlzLnRlcnJhaW4gPSB0ZXJyYWluO1xyXG4gICAgdGhpcy56b29jb250cm9sbGVyLmxvYWRHcmlkKHRoaXMpO1xyXG4gIH1cclxuXHJcbiAgcGFpbnRHcmlkKGdyaWQpIHtcclxuICAgIHRoaXMuZ3JpZCA9IGdyaWQ7XHJcbiAgICB0aGlzLnNlbGVjdGVkID0gdGhpcy5ncmlkW3RoaXMudGVycmFpbl0uZ3JpZDtcclxuICAgIHRoaXMud2VhdGhlcmNvbnRyb2xsZXIudXBkYXRlV2VhdGhlcihcclxuICAgICAgdGhpcy5ncmlkW3RoaXMudGVycmFpbl0ucmVmZXJlbmNlX2NpdHlcclxuICAgICk7XHJcbiAgICB0aGlzLmluaXRSZW1vdmUoKTtcclxuICAgIHRoaXMuZHJhd0JvYXJkKCk7XHJcbiAgfVxyXG5cclxuICBkcmF3Qm9hcmQoKSB7XHJcbiAgICBsZXQgb2xkQm9hcmQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImdyaWRcIik7XHJcbiAgICBpZiAob2xkQm9hcmQgIT0gbnVsbCkge1xyXG4gICAgICBvbGRCb2FyZC5yZW1vdmUoKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLnRhYmxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRhYmxlXCIpO1xyXG4gICAgdGhpcy50YWJsZS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImdyaWRcIik7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnp3OyBpKyspIHtcclxuICAgICAgdGhpcy50ciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0clwiKTtcclxuICAgICAgZm9yIChsZXQgeSA9IDA7IHkgPCB0aGlzLnpoOyB5KyspIHtcclxuICAgICAgICB0aGlzLnRkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRkXCIpO1xyXG5cclxuICAgICAgICAvLyBEcmFnIGFuZCBkcm9wIGV2ZW50c1xyXG4gICAgICAgIHRoaXMudGQuYWRkRXZlbnRMaXN0ZW5lcihcImRyYWdvdmVyXCIsIGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy50ZC5hZGRFdmVudExpc3RlbmVyKFwiZHJhZ2VudGVyXCIsIGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgbGV0IGdyaWQgPSB0aGlzLmdyaWQ7XHJcbiAgICAgICAgbGV0IHRlcnJhaW4gPSB0aGlzLnRlcnJhaW47XHJcbiAgICAgICAgbGV0IHpvb2NvbnRyb2xsZXIgPSB0aGlzLnpvb2NvbnRyb2xsZXI7XHJcblxyXG4gICAgICAgIHRoaXMudGQuYWRkRXZlbnRMaXN0ZW5lcihcImRyb3BcIiwgZnVuY3Rpb24oZSkge1xyXG4gICAgICAgICAgbGV0IGRhdGEgPSBlLmRhdGFUcmFuc2Zlci5nZXREYXRhKFwiVGV4dFwiKTtcclxuICAgICAgICAgIGxldCBtb25zdGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZGF0YSk7XHJcblxyXG4gICAgICAgICAgaWYgKG1vbnN0ZXIgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICBpZiAoXHJcbiAgICAgICAgICAgICAgIXRoaXMuaGFzQ2hpbGROb2RlcygpICYmXHJcbiAgICAgICAgICAgICAgbW9uc3Rlci5nZXRBdHRyaWJ1dGUoXCJkcmFnZ2FibGVcIikgPT09IFwidHJ1ZVwiXHJcbiAgICAgICAgICAgICkge1xyXG4gICAgICAgICAgICAgIGxldCBvcmlnaW4gPSBtb25zdGVyLmdldEF0dHJpYnV0ZShcImlkXCIpLnNwbGl0KFwieFwiKTtcclxuICAgICAgICAgICAgICBsZXQgY29vcmRpZCA9IHRoaXMuZ2V0QXR0cmlidXRlKFwiaWRcIikuc3BsaXQoXCItXCIpO1xyXG5cclxuICAgICAgICAgICAgICBpZihtb25zdGVyLmdldEF0dHJpYnV0ZShcImlkXCIpID09PSBcIi0xeC0xXCIpIHtcclxuICAgICAgICAgICAgICAgIHpvb2NvbnRyb2xsZXIuYWRkTW9uc3RlclRvR3JpZChcclxuICAgICAgICAgICAgICAgICAgZ3JpZCxcclxuICAgICAgICAgICAgICAgICAgdGVycmFpbixcclxuICAgICAgICAgICAgICAgICAgY29vcmRpZFswXSxcclxuICAgICAgICAgICAgICAgICAgY29vcmRpZFsxXVxyXG4gICAgICAgICAgICAgICAgKTtcclxuXHJcbiAgICAgICAgICAgICAgICBsZXQgbm93Z3JpZCA9IGdyaWQ7XHJcbiAgICAgICAgICAgICAgICBsZXQgbWFwID0gdGVycmFpbjtcclxuICAgICAgICAgICAgICAgIG1vbnN0ZXIuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgICAgICAgbGV0IGNvb3JkcyA9IG1vbnN0ZXIuZ2V0QXR0cmlidXRlKFwiaWRcIikuc3BsaXQoXCJ4XCIpO1xyXG4gICAgICAgICAgICAgICAgICBsZXQgc2VsZWN0ZWRtb25zdGVyID0gem9vY29udHJvbGxlci5nZXRNb25zdGVyQnlQb3NpdGlvbihub3dncmlkLCBtYXAsIGNvb3Jkc1swXSwgY29vcmRzWzFdKTtcclxuICBcclxuICAgICAgXHJcbiAgICAgICAgICAgICAgICAgIGFsZXJ0KCdNb25zdGVyIHNlbGVjdGVkOiAnICsgc2VsZWN0ZWRtb25zdGVyLm5hbWUgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICdFbGVtZW50OiAnICsgc2VsZWN0ZWRtb25zdGVyLmVsZW1lbnQgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICdBcm1zOiAnICsgc2VsZWN0ZWRtb25zdGVyLmFybXMgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICdUeXBlIG9mIGFybXM6ICcgKyBzZWxlY3RlZG1vbnN0ZXIudHlwZWFybXMgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICdMZWdzOiAnICsgc2VsZWN0ZWRtb25zdGVyLmxlZ3MgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICdFeWVzOiAnICsgc2VsZWN0ZWRtb25zdGVyLmV5ZXMgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICdGdXIgdHlwZTogJyArIHNlbGVjdGVkbW9uc3Rlci5mdXJ0eXBlICsgJ1xcbicgK1xyXG4gICAgICAgICAgICAgICAgICAnQ2FuIGZseTogJyArIHNlbGVjdGVkbW9uc3Rlci5mbHkgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICdDYW4gc3dpbTogJyArIHNlbGVjdGVkbW9uc3Rlci5zd2ltICsgJ1xcbicgK1xyXG4gICAgICAgICAgICAgICAgICAnQ29sb3VyOiAnICsgc2VsZWN0ZWRtb25zdGVyLmNvbG91ciArICdcXG4nXHJcbiAgICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHpvb2NvbnRyb2xsZXIuYWRkRXhpc3RpbmdNb25zdGVyVG9HcmlkKFxyXG4gICAgICAgICAgICAgICAgICBncmlkLFxyXG4gICAgICAgICAgICAgICAgICB0ZXJyYWluLFxyXG4gICAgICAgICAgICAgICAgICBvcmlnaW5bMF0sXHJcbiAgICAgICAgICAgICAgICAgIG9yaWdpblsxXSxcclxuICAgICAgICAgICAgICAgICAgY29vcmRpZFswXSxcclxuICAgICAgICAgICAgICAgICAgY29vcmRpZFsxXVxyXG4gICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIGlmIChtb25zdGVyLmdldEF0dHJpYnV0ZShcImlkXCIpICE9PSBcIi0xeC0xXCIpIHtcclxuICAgICAgICAgICAgICAgIHpvb2NvbnRyb2xsZXIuZGVsZXRlTW9uc3RlckZyb21HcmlkKFxyXG4gICAgICAgICAgICAgICAgICBncmlkLFxyXG4gICAgICAgICAgICAgICAgICB0ZXJyYWluLFxyXG4gICAgICAgICAgICAgICAgICBvcmlnaW5bMF0sXHJcbiAgICAgICAgICAgICAgICAgIG9yaWdpblsxXVxyXG4gICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIG1vbnN0ZXIuc2V0QXR0cmlidXRlKFwiaWRcIiwgY29vcmRpZFswXSArIFwieFwiICsgY29vcmRpZFsxXSk7XHJcbiAgICAgICAgICAgICAgdGhpcy5hcHBlbmQobW9uc3Rlcik7XHJcblxyXG5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLnRkLnNldEF0dHJpYnV0ZShcImlkXCIsIGkgKyBcIi1cIiArIHkpO1xyXG5cclxuICAgICAgICBpZiAodHlwZW9mIHRoaXMuc2VsZWN0ZWRbaV0uQ29sdW1uc1t5XSA9PT0gXCJvYmplY3RcIikge1xyXG4gICAgICAgICAgbGV0IG1vbnN0ZXIgPSB0aGlzLnNlbGVjdGVkW2ldLkNvbHVtbnNbeV07XHJcbiAgICAgICAgICB0aGlzLmltZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XHJcbiAgICAgICAgICB0aGlzLmltZy5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcIm1vbnN0ZXJcIik7XHJcblxyXG4gICAgICAgICAgLy9FdmVyeSBtb25zdGVyIGdldHMgYW4gaWQgYmFzZWQgb24gdGhlaXIgY29vcmRpbmF0ZXNcclxuICAgICAgICAgIHRoaXMuaW1nLnNldEF0dHJpYnV0ZShcImlkXCIsIGkgKyBcInhcIiArIHkpO1xyXG5cclxuICAgICAgICAgIHN3aXRjaCAobW9uc3Rlci5lbGVtZW50KSB7XHJcbiAgICAgICAgICAgIGNhc2UgXCJmaXJlXCI6XHJcbiAgICAgICAgICAgICAgdGhpcy5pbWcuc3JjID0gXCIuLi9zcmMvUmVzb3VyY2VzL29yYW5nZW1vbnN0ZXIucG5nXCI7XHJcbiAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJ3YXRlclwiOlxyXG4gICAgICAgICAgICAgIHRoaXMuaW1nLnNyYyA9IFwiLi4vc3JjL1Jlc291cmNlcy9ibHVlbW9uc3Rlci5wbmdcIjtcclxuICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcImVhcnRoXCI6XHJcbiAgICAgICAgICAgICAgdGhpcy5pbWcuc3JjID0gXCIuLi9zcmMvUmVzb3VyY2VzL2Jyb3dubW9uc3Rlci5wbmdcIjtcclxuICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcIndpbmRcIjpcclxuICAgICAgICAgICAgICB0aGlzLmltZy5zcmMgPSBcIi4uL3NyYy9SZXNvdXJjZXMvd2hpdGVtb25zdGVyLnBuZ1wiO1xyXG4gICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICBhbGVydChcIldhcm5pbmc6IGNvdWxkIG5vdCBmaW5kIHJlc291cmNlIGZvciBtb25zdGVyXCIpO1xyXG4gICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIHRoaXMuaW1nLmRyYWdnYWJsZSA9IHRydWU7XHJcbiAgICAgICAgICB0aGlzLmltZy5hZGRFdmVudExpc3RlbmVyKFwiZHJhZ3N0YXJ0XCIsIGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgZS5kYXRhVHJhbnNmZXIuc2V0RGF0YShcIlRleHRcIiwgZS50YXJnZXQuaWQpO1xyXG4gICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgbGV0IGNsaWNrZWQgPSB0aGlzLmltZztcclxuICAgICAgICAgIGxldCB6b29jb250cm9sbGVyID0gdGhpcy56b29jb250cm9sbGVyO1xyXG4gICAgICAgICAgbGV0IGdyaWQgPSB0aGlzLmdyaWQ7XHJcbiAgICAgICAgICBsZXQgbWFwID0gdGhpcy50ZXJyYWluO1xyXG4gICAgICAgICAgdGhpcy5pbWcuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgbGV0IGNvb3JkcyA9IGNsaWNrZWQuZ2V0QXR0cmlidXRlKFwiaWRcIikuc3BsaXQoXCJ4XCIpO1xyXG4gICAgICAgICAgICBsZXQgc2VsZWN0ZWRtb25zdGVyID0gem9vY29udHJvbGxlci5nZXRNb25zdGVyQnlQb3NpdGlvbihncmlkLCBtYXAsIGNvb3Jkc1swXSwgY29vcmRzWzFdKTtcclxuXHJcbiAgICAgICAgICAgIGFsZXJ0KCdNb25zdGVyIHNlbGVjdGVkOiAnICsgc2VsZWN0ZWRtb25zdGVyLm5hbWUgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICdFbGVtZW50OiAnICsgc2VsZWN0ZWRtb25zdGVyLmVsZW1lbnQgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICdBcm1zOiAnICsgc2VsZWN0ZWRtb25zdGVyLmFybXMgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICdUeXBlIG9mIGFybXM6ICcgKyBzZWxlY3RlZG1vbnN0ZXIudHlwZWFybXMgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICdMZWdzOiAnICsgc2VsZWN0ZWRtb25zdGVyLmxlZ3MgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICdFeWVzOiAnICsgc2VsZWN0ZWRtb25zdGVyLmV5ZXMgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICdGdXIgdHlwZTogJyArIHNlbGVjdGVkbW9uc3Rlci5mdXJ0eXBlICsgJ1xcbicgK1xyXG4gICAgICAgICAgICAnQ2FuIGZseTogJyArIHNlbGVjdGVkbW9uc3Rlci5mbHkgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICdDYW4gc3dpbTogJyArIHNlbGVjdGVkbW9uc3Rlci5zd2ltICsgJ1xcbicgK1xyXG4gICAgICAgICAgICAnQ29sb3VyOiAnICsgc2VsZWN0ZWRtb25zdGVyLmNvbG91ciArICdcXG4nXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAgIHRoaXMudGQuYXBwZW5kQ2hpbGQodGhpcy5pbWcpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRbaV0uQ29sdW1uc1t5XSA9PSAxKSB7XHJcbiAgICAgICAgICB0aGlzLmltZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XHJcbiAgICAgICAgICB0aGlzLmltZy5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcInN0b25lXCIpO1xyXG5cclxuICAgICAgICAgIC8vRXZlcnkgbW9uc3RlciBnZXRzIGFuIGlkIGJhc2VkIG9uIHRoZWlyIGNvb3JkaW5hdGVzXHJcbiAgICAgICAgICB0aGlzLmltZy5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBpICsgXCJ4XCIgKyB5KTtcclxuXHJcbiAgICAgICAgICBzd2l0Y2ggKHRlcnJhaW4pIHtcclxuICAgICAgICAgICAgLy8gSnVuZ2xlXHJcbiAgICAgICAgICAgIGNhc2UgMDpcclxuICAgICAgICAgICAgICB0aGlzLmltZy5zcmMgPSBcIi4uL3NyYy9SZXNvdXJjZXMvanVuZ2xlcm9jay5wbmdcIjtcclxuICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1hcFwiKS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcIiMyODkxNTBcIjtcclxuICAgICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICAgIC8vIE5vcnRwb2xlXHJcbiAgICAgICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgICB0aGlzLmltZy5zcmMgPSBcIi4uL3NyYy9SZXNvdXJjZXMvaWNlY2h1bmsucG5nXCI7XHJcbiAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYXBcIikuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCIjRDhGRkZGXCI7XHJcbiAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICAvLyBEZXNlcnRcclxuICAgICAgICAgICAgY2FzZSAyOlxyXG4gICAgICAgICAgICAgIHRoaXMuaW1nLnNyYyA9IFwiLi4vc3JjL1Jlc291cmNlcy9jYWN0dXMucG5nXCI7XHJcbiAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYXBcIikuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCIjRURDOUFGXCI7XHJcbiAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgdGhpcy50ZC5hcHBlbmRDaGlsZCh0aGlzLmltZyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMudHIuYXBwZW5kQ2hpbGQodGhpcy50ZCk7XHJcbiAgICAgIH1cclxuICAgICAgdGhpcy50YWJsZS5hcHBlbmRDaGlsZCh0aGlzLnRyKTtcclxuICAgIH1cclxuICAgIHRoaXMubWFwLmFwcGVuZENoaWxkKHRoaXMudGFibGUpO1xyXG4gIH1cclxuXHJcbiAgaW5pdFJlbW92ZSgpIHtcclxuICAgIGxldCBncmlkID0gdGhpcy5ncmlkO1xyXG4gICAgbGV0IHRlcnJhaW4gPSB0aGlzLnRlcnJhaW47XHJcbiAgICBsZXQgem9vY29udHJvbGxlciA9IHRoaXMuem9vY29udHJvbGxlcjtcclxuXHJcbiAgICB0aGlzLnJlbW92ZS5hZGRFdmVudExpc3RlbmVyKFwiZHJvcFwiLCBmdW5jdGlvbihlKSB7XHJcbiAgICAgIGxldCBkYXRhID0gZS5kYXRhVHJhbnNmZXIuZ2V0RGF0YShcIlRleHRcIik7XHJcbiAgICAgIGxldCBtb25zdGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZGF0YSk7XHJcbiAgICAgIGlmIChtb25zdGVyICE9IG51bGwpIHtcclxuICAgICAgICBsZXQgb3JpZ2luID0gbW9uc3Rlci5nZXRBdHRyaWJ1dGUoXCJpZFwiKS5zcGxpdChcInhcIik7XHJcblxyXG4gICAgICAgIHpvb2NvbnRyb2xsZXIuZGVsZXRlTW9uc3RlckZyb21HcmlkKFxyXG4gICAgICAgICAgZ3JpZCxcclxuICAgICAgICAgIHRlcnJhaW4sXHJcbiAgICAgICAgICBvcmlnaW5bMF0sXHJcbiAgICAgICAgICBvcmlnaW5bMV1cclxuICAgICAgICApO1xyXG5cclxuICAgICAgICBtb25zdGVyLnJlbW92ZSgpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLnJlbW92ZS5hZGRFdmVudExpc3RlbmVyKFwiZHJhZ292ZXJcIiwgZnVuY3Rpb24oZSkge1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLnJlbW92ZS5hZGRFdmVudExpc3RlbmVyKFwiZHJhZ2VudGVyXCIsIGZ1bmN0aW9uKGUpIHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBjbGFzcyBXZWF0aGVyRGF0YVNlcnZpY2Uge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMuYXBpa2V5ID0gJzZlZmMzNWMzYzI2MTFlNDE0ZWE2NmRhNzZiMmUzZjBiJztcclxuICAgICAgICB0aGlzLnVuaXRzID0gJ21ldHJpYyc7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0Q3VycmVudFdlYXRoZXIoY2l0eU5hbWUpIHtcclxuICAgICAgICByZXR1cm4gZmV0Y2goYGh0dHA6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41L3dlYXRoZXI/cT0ke2NpdHlOYW1lfSZhcHBpZD0ke3RoaXMuYXBpa2V5fSZ1bml0cz0ke3RoaXMudW5pdHN9YClcclxuICAgICAgICAudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xyXG4gICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKG15SnNvbikge1xyXG4gICAgICAgICAgcmV0dXJuIG15SnNvbjtcclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG59IiwiZXhwb3J0IGNsYXNzIFdlYXRoZXJWaWV3IHtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB0aGlzLmltZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd3ZWF0aGVyaW1nJyk7XHJcbiAgICAgICAgdGhpcy50ZW1wID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RlbXAnKTtcclxuICAgICAgICB0aGlzLnJhaW4gPSBmYWxzZTtcclxuXHJcbiAgICAgICAgdGhpcy5pbml0UmFpblN3aXRjaCgpO1xyXG4gICAgfVxyXG5cclxuICAgIGluaXRSYWluU3dpdGNoKCkge1xyXG4gICAgICAgIGxldCByYWluc3dpdGNoID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JhaW5zd2l0Y2gnKTtcclxuICAgICAgICBsZXQgb3duY2xhc3MgPSB0aGlzO1xyXG4gICAgICAgIHJhaW5zd2l0Y2guYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICBpZihvd25jbGFzcy5yYWluKSB7XHJcbiAgICAgICAgICAgICAgICBvd25jbGFzcy51cGRhdGVXZWF0aGVyKG93bmNsYXNzLnRlbXBlcmF0dXJlLCBcIkNsZWFyXCIpO1xyXG4gICAgICAgICAgICAgICAgb3duY2xhc3MucmFpbiA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgb3duY2xhc3MudXBkYXRlV2VhdGhlcihvd25jbGFzcy50ZW1wZXJhdHVyZSwgXCJSYWluXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlV2VhdGhlcih0ZW1wLCByYWluKSB7XHJcbiAgICAgICAgdGhpcy50ZW1wZXJhdHVyZSA9IHRlbXA7XHJcbiAgICAgICAgdGhpcy50ZW1wLmlubmVyVGV4dCA9IGAke3RlbXB9wrAgQ2VsY2l1c2A7XHJcblxyXG5cclxuICAgICAgICBpZihyYWluID09PSAnUmFpbicgfHwgcmFpbiA9PT0gJ1Nob3dlciByYWluJykge1xyXG4gICAgICAgICAgICB0aGlzLnJhaW4gPSB0cnVlO1xyXG4gICAgICAgICAgICBpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmFpbicpID09PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJyk7XHJcbiAgICAgICAgICAgICAgICBjYW52YXMuc2V0QXR0cmlidXRlKCdpZCcsICdyYWluJyk7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFwJykuYXBwZW5kQ2hpbGQoY2FudmFzKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuc3RhcnRSYWluKDMwMCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBsZXQgY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JhaW4nKTtcclxuICAgICAgICAgICAgaWYoY2FudmFzICE9PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICBjYW52YXMucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChjYW52YXMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXJ0UmFpbihtYXhQYXJ0cykge1xyXG4gICAgICAgIGxldCBjYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJhaW5cIik7XHJcblxyXG4gICAgICAgIGlmIChjYW52YXMuZ2V0Q29udGV4dCkge1xyXG4gICAgICAgICAgICBsZXQgY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7XHJcbiAgICAgICAgICAgIGxldCB3ID0gY2FudmFzLndpZHRoO1xyXG4gICAgICAgICAgICBsZXQgaCA9IGNhbnZhcy5oZWlnaHQ7XHJcbiAgICAgICAgICAgIGN0eC5zdHJva2VTdHlsZSA9ICdyZ2JhKDQ2LDg2LDE0NywwLjMpJztcclxuICAgICAgICAgICAgY3R4LmxpbmVXaWR0aCA9IDAuNztcclxuICAgICAgICAgICAgY3R4LmxpbmVDYXAgPSAncm91bmQnO1xyXG5cclxuXHJcbiAgICAgICAgICAgIGxldCBpbml0ID0gW107XHJcbiAgICAgICAgICAgIGZvciAobGV0IGEgPSAwOyBhIDwgbWF4UGFydHM7IGErKykge1xyXG4gICAgICAgICAgICAgICAgaW5pdC5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICB4OiBNYXRoLnJhbmRvbSgpICogdyxcclxuICAgICAgICAgICAgICAgICAgICB5OiBNYXRoLnJhbmRvbSgpICogaCxcclxuICAgICAgICAgICAgICAgICAgICBsOiBNYXRoLnJhbmRvbSgpICogMSxcclxuICAgICAgICAgICAgICAgICAgICB4czogLTQgKyBNYXRoLnJhbmRvbSgpICogNCArIDIsXHJcbiAgICAgICAgICAgICAgICAgICAgeXM6IE1hdGgucmFuZG9tKCkgKiAxMCArIDEwXHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBsZXQgcGFydGljbGVzID0gW107XHJcbiAgICAgICAgICAgIGZvciAobGV0IGIgPSAwOyBiIDwgbWF4UGFydHM7IGIrKykge1xyXG4gICAgICAgICAgICAgICAgcGFydGljbGVzW2JdID0gaW5pdFtiXTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgZnVuY3Rpb24gZHJhdygpIHtcclxuICAgICAgICAgICAgICAgIGN0eC5jbGVhclJlY3QoMCwgMCwgdywgaCk7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBjID0gMDsgYyA8IHBhcnRpY2xlcy5sZW5ndGg7IGMrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBwID0gcGFydGljbGVzW2NdO1xyXG4gICAgICAgICAgICAgICAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICAgICAgICAgICAgICBjdHgubW92ZVRvKHAueCwgcC55KTtcclxuICAgICAgICAgICAgICAgICAgICBjdHgubGluZVRvKHAueCArIHAubCAqIHAueHMsIHAueSArIHAubCAqIHAueXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIGN0eC5zdHJva2UoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIG1vdmUoKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgZnVuY3Rpb24gbW92ZSgpIHtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGIgPSAwOyBiIDwgcGFydGljbGVzLmxlbmd0aDsgYisrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHAgPSBwYXJ0aWNsZXNbYl07XHJcbiAgICAgICAgICAgICAgICAgICAgcC54ICs9IHAueHM7XHJcbiAgICAgICAgICAgICAgICAgICAgcC55ICs9IHAueXM7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHAueCA+IHcgfHwgcC55ID4gaCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwLnggPSBNYXRoLnJhbmRvbSgpICogdztcclxuICAgICAgICAgICAgICAgICAgICAgICAgcC55ID0gLTIwO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgc2V0SW50ZXJ2YWwoZHJhdywgODApO1xyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyBXZWF0aGVyRGF0YVNlcnZpY2UgfSBmcm9tIFwiLi4vTW9kZWwvV2VhdGhlckRhdGFTZXJ2aWNlXCI7XHJcbmltcG9ydCB7IFdlYXRoZXJWaWV3IH0gZnJvbSBcIi4uL1ZpZXcvV2VhdGhlclZpZXdcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBXZWF0aGVyQ29udHJvbGxlciB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB0aGlzLndlYXRoZXJkYXRhID0gbmV3IFdlYXRoZXJEYXRhU2VydmljZSgpO1xyXG4gICAgICAgIHRoaXMud2VhdGhlcnZpZXcgPSBuZXcgV2VhdGhlclZpZXcoKTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGVXZWF0aGVyKGNpdHkpIHtcclxuICAgICAgICBsZXQgd2VhdGhlcnZpZXcgPSB0aGlzLndlYXRoZXJ2aWV3O1xyXG4gICAgICAgIHRoaXMud2VhdGhlcmRhdGEuZ2V0Q3VycmVudFdlYXRoZXIoY2l0eSkudGhlbihmdW5jdGlvbihkYXRhKSB7XHJcbiAgICAgICAgICAgIHdlYXRoZXJ2aWV3LnVwZGF0ZVdlYXRoZXIoZGF0YS5tYWluLnRlbXAsIGRhdGEud2VhdGhlclswXS5tYWluKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufSIsImV4cG9ydCBjbGFzcyBNYXBTZXJ2aWNlIHtcclxuICBsb2FkR3JpZCgpIHtcclxuICAgIHJldHVybiBmZXRjaChcIi4vbWFwL2dyaWQuanNvblwiKVxyXG4gICAgICAudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xyXG4gICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC50aGVuKGZ1bmN0aW9uKGdyaWQpIHtcclxuICAgICAgICBsZXQgU1RPUkFHRV9LRVkgPSBcInpvby1ncmlkXCI7XHJcblxyXG4gICAgICAgIC8vIFB1dCB0aGUgd2hvbGUgZ3JpZCBmcm9tIGxvY2Fsc3RvcmFnZSBpbiBhIHZhcmlhYmxlXHJcbiAgICAgICAgbGV0IHN0b3JhZ2UgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFNUT1JBR0VfS0VZKSk7XHJcblxyXG4gICAgICAgIGlmIChzdG9yYWdlICE9IG51bGwpIHtcclxuICAgICAgICAgIGdyaWQgPSBzdG9yYWdlO1xyXG5cclxuICAgICAgICAvLyBJZiB0aGUgZ3JpZCBpcyBub3QgcHJlc2VudCBpbiBsb2NhbHN0b3JhZ2UgeWV0LCBwdXQgdGhlIHdob2xlIGdyaWQgYXMgbG9hZGVkIGZyb20gdGhlIGxvY2FsIGdyaWQuanNvbiBmaWxlIGluIHRoZXJlXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFNUT1JBR0VfS0VZLCBKU09OLnN0cmluZ2lmeShncmlkKSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gZ3JpZDtcclxuICAgICAgfSk7XHJcbiAgfVxyXG5cclxuICBhZGRNb25zdGVyVG9HcmlkKGdyaWQsIHRlcnJhaW4sIG1vbnN0ZXIsIHgsIHkpIHtcclxuICAgIG1vbnN0ZXIueCA9IHg7XHJcbiAgICBtb25zdGVyLnkgPSB5O1xyXG4gICAgbW9uc3Rlci5tYXAgPSB0ZXJyYWluO1xyXG4gICAgZ3JpZFt0ZXJyYWluXS5ncmlkW3hdLkNvbHVtbnNbeV0gPSBtb25zdGVyO1xyXG4gICAgdGhpcy5zYXZlVG9Mb2NhbFN0b3JhZ2UoZ3JpZCk7XHJcbiAgfVxyXG5cclxuICBkZWxldGVNb25zdGVyRnJvbUdyaWQoZ3JpZCwgdGVycmFpbiwgeCwgeSkge1xyXG4gICAgZ3JpZFt0ZXJyYWluXS5ncmlkW3hdLkNvbHVtbnNbeV0gPSBcIjBcIjtcclxuICAgIHRoaXMuc2F2ZVRvTG9jYWxTdG9yYWdlKGdyaWQpO1xyXG4gIH1cclxuXHJcbiAgc2F2ZVRvTG9jYWxTdG9yYWdlKGdyaWQpIHtcclxuICAgIGxldCBTVE9SQUdFX0tFWSA9IFwiem9vLWdyaWRcIjtcclxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFNUT1JBR0VfS0VZLCBKU09OLnN0cmluZ2lmeShncmlkKSk7XHJcbiAgfVxyXG5cclxuICBnZXRNb25zdGVyQnlQb3NpdGlvbihncmlkLCBtYXAsIHgsIHkpIHtcclxuICAgIHJldHVybiBncmlkW21hcF0uZ3JpZFt4XS5Db2x1bW5zW3ldO1xyXG4gIH1cclxuXHJcbn1cclxuIiwiZXhwb3J0IGNsYXNzIE1vbnN0ZXJ7XHJcbiAgICAvLyBNb25zdGVyRGF0YSBjb25zaXN0cyBvZiBlbGVtZW50LCBuYW1lLCBhcm1zLCB0eXBlX2FybXMsIGxlZ3MsIGV5ZXMsIHNraW50eXBlLCBhYmlsaXR5IHRvIGZseSwgYWJpbGl0eSB0byBzd2ltLCBjb2xvdXIgLG1hcCwgeCBjb29yZGluYXRlLCB5IGNvb3JkaW5hdGVcclxuICAgIGNvbnN0cnVjdG9yKG5hbWUsIGVsZW1lbnQsIGFybXMsIHR5cGVhcm1zLCBsZWdzLCBleWVzLCBmdXJ0eXBlLCBmbHksIHN3aW0sIGNvbG91ciwgbWFwLCB4LCB5KXtcclxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG4gICAgICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XHJcbiAgICAgICAgdGhpcy5hcm1zID0gYXJtcztcclxuICAgICAgICB0aGlzLnR5cGVhcm1zID0gdHlwZWFybXM7XHJcbiAgICAgICAgdGhpcy5sZWdzID0gbGVncztcclxuICAgICAgICB0aGlzLmV5ZXMgPSBleWVzO1xyXG4gICAgICAgIHRoaXMuZnVydHlwZSA9IGZ1cnR5cGU7XHJcbiAgICAgICAgdGhpcy5mbHkgPSBmbHk7XHJcbiAgICAgICAgdGhpcy5zd2ltID0gc3dpbTtcclxuICAgICAgICB0aGlzLmNvbG91ciA9IGNvbG91cjtcclxuICAgICAgICB0aGlzLm1hcCA9IG1hcDtcclxuICAgICAgICB0aGlzLnggPSB4O1xyXG4gICAgICAgIHRoaXMueSA9IHk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBGaXJlTW9uc3RlciBleHRlbmRzIE1vbnN0ZXJ7XHJcbiAgICBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgdGhpcy5hcm1zID0gWzEsMiwzLDQsNSw2XTtcclxuICAgICAgICB0aGlzLnR5cGVhcm1zID0gW1wiVGVudGFjbGVzXCIsXCJDbGF3c1wiLFwiQ2xhdy13aW5nc1wiXTtcclxuICAgICAgICB0aGlzLmxlZ3MgPSBbMl07XHJcbiAgICAgICAgdGhpcy5leWVzID0gWzEsMiwzLDRdO1xyXG4gICAgICAgIHRoaXMuZnVydHlwZSA9IFtcIlNjYWxlc1wiLFwiRmVhdGhlcnNcIl07XHJcbiAgICAgICAgdGhpcy5mbHkgPSBcInllc1wiO1xyXG4gICAgICAgIHRoaXMuc3dpbSA9IFwibm9cIjtcclxuICAgICAgICB0aGlzLmNvbG9yID0gW1wiUmVkXCIsXCJPcmFuZ2VcIixcIkJyb3duXCJdO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgV2F0ZXJNb25zdGVyIGV4dGVuZHMgTW9uc3RlcntcclxuICAgIGNvbnN0cnVjdG9yKCl7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLmFybXMgPSBbMSwyLDMsNCw1LDYsNyw4XTtcclxuICAgICAgICB0aGlzLnR5cGVhcm1zID0gW1wiVGVudGFjbGVzXCIsXCJGaW5zXCJdO1xyXG4gICAgICAgIHRoaXMubGVncyA9IFsxLDIsMyw0XTtcclxuICAgICAgICB0aGlzLmV5ZXMgPSBbMSwyLDMsNCw1LDYsNyw4XTtcclxuICAgICAgICB0aGlzLmZ1cnR5cGUgPSBbXCJTY2FsZXNcIixcIlNsaW1lXCJdO1xyXG4gICAgICAgIHRoaXMuZmx5ID0gXCJub1wiO1xyXG4gICAgICAgIHRoaXMuc3dpbSA9IFwieWVzXCI7XHJcbiAgICAgICAgdGhpcy5jb2xvciA9IFtcIkJsdWVcIixcIlJlZFwiLFwiR3JlZW5cIl07XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBFYXJ0aE1vbnN0ZXIgZXh0ZW5kcyBNb25zdGVye1xyXG4gICAgY29uc3RydWN0b3IoKXtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMuYXJtcyA9IFsyXTtcclxuICAgICAgICB0aGlzLnR5cGVhcm1zID0gXCJDbGF3c1wiO1xyXG4gICAgICAgIHRoaXMubGVncyA9IFsyLDQsNl07XHJcbiAgICAgICAgdGhpcy5leWVzID0gWzJdO1xyXG4gICAgICAgIHRoaXMuZnVydHlwZSA9IFtcIkhhaXJcIixcIlNjYWxlc1wiLFwiU2xpbWVcIl07XHJcbiAgICAgICAgdGhpcy5mbHkgPSBcIm5vXCI7XHJcbiAgICAgICAgdGhpcy5zd2ltID0gXCJub1wiO1xyXG4gICAgICAgIHRoaXMuY29sb3IgPSBbXCJQdXJwbGVcIixcIk9yYW5nZVwiLFwiV2hpdGVcIl07XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCAgY2xhc3MgV2luZE1vbnN0ZXIgZXh0ZW5kcyBNb25zdGVye1xyXG4gICAgY29uc3RydWN0b3IoKXtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMuYXJtcyA9IFsyXTtcclxuICAgICAgICB0aGlzLnR5cGVhcm1zID0gW1wiV2luZ3NcIixcIkNsYXctd2luZ3NcIl07XHJcbiAgICAgICAgdGhpcy5sZWdzID0gWzAsMl07XHJcbiAgICAgICAgdGhpcy5leWVzID0gWzJdO1xyXG4gICAgICAgIHRoaXMuZnVydHlwZSA9IFtcIkZlYXRoZXJzXCIsXCJIYWlyXCIsXCJTY2FsZXNcIl07XHJcbiAgICAgICAgdGhpcy5mbHkgPSBcInllc1wiO1xyXG4gICAgICAgIHRoaXMuc3dpbSA9IFwibm9cIjtcclxuICAgICAgICB0aGlzLmNvbG9yID0gW1wiV2hpdGVcIixcIkJsdWVcIixcIlB1cnBsZVwiXTtcclxuICAgIH1cclxufSIsImltcG9ydCB7IE1vbnN0ZXJTZXJ2aWNlIH0gZnJvbSAnLi4vbW9kZWwvTW9uc3RlclNlcnZpY2UnXHJcbmltcG9ydCB7IENyZWF0ZU1vbnN0ZXJWaWV3IH0gZnJvbSAnLi4vdmlldy9DcmVhdGVNb25zdGVyVmlldyc7XHJcbmltcG9ydCB7IE1hcFZpZXcgfSBmcm9tICcuLi92aWV3L01hcFZpZXcnO1xyXG5pbXBvcnQgeyBXZWF0aGVyQ29udHJvbGxlciB9IGZyb20gJy4vV2VhdGhlckNvbnRyb2xsZXInO1xyXG5pbXBvcnQgeyBNYXBTZXJ2aWNlIH0gZnJvbSAnLi4vTW9kZWwvTWFwU2VydmljZSc7XHJcbmltcG9ydCB7IEZpcmVNb25zdGVyIH0gZnJvbSAnLi4vTW9kZWwvTW9uc3Rlcic7XHJcbmltcG9ydCB7IFdhdGVyTW9uc3RlciB9IGZyb20gJy4uL01vZGVsL01vbnN0ZXInO1xyXG5pbXBvcnQgeyBFYXJ0aE1vbnN0ZXIgfSBmcm9tICcuLi9Nb2RlbC9Nb25zdGVyJztcclxuaW1wb3J0IHsgV2luZE1vbnN0ZXIgfSBmcm9tICcuLi9Nb2RlbC9Nb25zdGVyJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFpvb0NvbnRyb2xsZXJcclxue1xyXG4gICAgLy9lbCBjb25zdHJ1Y3RvclxyXG4gICAgY29uc3RydWN0b3IoKXtcclxuICAgICAgICB0aGlzLndlYXRoZXJjb250cm9sbGVyID0gbmV3IFdlYXRoZXJDb250cm9sbGVyKCk7XHJcblxyXG4gICAgICAgIHRoaXMubW9uc3RlcnNlcnZpY2UgPSBuZXcgTW9uc3RlclNlcnZpY2UoKTtcclxuICAgICAgICB0aGlzLmNyZWF0ZW1vbnN0ZXJ2aWV3ID0gIG5ldyBDcmVhdGVNb25zdGVyVmlldyh0aGlzKTtcclxuICAgICAgICB0aGlzLm1hcHNlcnZpY2UgPSBuZXcgTWFwU2VydmljZSgpO1xyXG4gICAgICAgIHRoaXMuZmlyZU1vbnN0ZXIgPSBuZXcgRmlyZU1vbnN0ZXIoKTtcclxuICAgICAgICB0aGlzLndhdGVyTW9uc3RlciA9IG5ldyBXYXRlck1vbnN0ZXIoKTtcclxuICAgICAgICB0aGlzLmVhcnRoTW9uc3RlciA9ICBuZXcgRWFydGhNb25zdGVyKCk7XHJcbiAgICAgICAgdGhpcy53aW5kTW9uc3RlciA9IG5ldyBXaW5kTW9uc3RlcigpO1xyXG5cclxuICAgICAgICB0aGlzLm1hcHZpZXcgPSBuZXcgTWFwVmlldyh0aGlzLCB0aGlzLndlYXRoZXJjb250cm9sbGVyKTtcclxuICAgIH1cclxuXHJcbiAgICBhZGRNb25zdGVyVG9HcmlkKGdyaWQsIHRlcnJhaW4sIHgsIHkpIHtcclxuICAgICAgICB0aGlzLm1hcHNlcnZpY2UuYWRkTW9uc3RlclRvR3JpZChncmlkLCB0ZXJyYWluLCB0aGlzLmdldExhc3RNb25zdGVyKCksIHgsIHkpO1xyXG4gICAgfVxyXG5cclxuICAgIGFkZEV4aXN0aW5nTW9uc3RlclRvR3JpZChncmlkLCB0ZXJyYWluLCBveCwgb3ksIHgsIHkpIHtcclxuICAgICAgICB0aGlzLm1hcHNlcnZpY2UuYWRkTW9uc3RlclRvR3JpZChncmlkLCB0ZXJyYWluLCB0aGlzLmdldE1vbnN0ZXJCeVBvc2l0aW9uKGdyaWQsIHRlcnJhaW4sIG94LCBveSksIHgsIHkpO1xyXG4gICAgfVxyXG5cclxuICAgIGRlbGV0ZU1vbnN0ZXJGcm9tR3JpZChncmlkLCB0ZXJyYWluLCB4LCB5KSB7XHJcbiAgICAgICAgdGhpcy5tYXBzZXJ2aWNlLmRlbGV0ZU1vbnN0ZXJGcm9tR3JpZChncmlkLCB0ZXJyYWluLCB4LCB5KTtcclxuICAgIH1cclxuXHJcbiAgICBhZGRNb25zdGVyKG5hbWUsIGVsZW1lbnQsIGFybXMsIHR5cGVhcm1zLCBsZWdzLCBleWVzLCBmdXJ0eXBlLCBmbHksIHN3aW0sIGNvbG91ciwgbWFwLCB4LCB5KXtcclxuICAgICAgICB0aGlzLm1vbnN0ZXJzZXJ2aWNlLnNhdmVNb25zdGVyKG5hbWUsIGVsZW1lbnQsIGFybXMsIHR5cGVhcm1zLCBsZWdzLCBleWVzLCBmdXJ0eXBlLCBmbHksIHN3aW0sIGNvbG91ciwgbWFwLCB4LCB5KTtcclxuICAgIH1cclxuXHJcbiAgICBsb2FkR3JpZChtYXB2aWV3KSB7XHJcbiAgICAgICAgdGhpcy5tYXBzZXJ2aWNlLmxvYWRHcmlkKCkudGhlbihmdW5jdGlvbihncmlkKSB7XHJcbiAgICAgICAgICAgIG1hcHZpZXcucGFpbnRHcmlkKGdyaWQpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGdldExhc3RNb25zdGVyKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLm1vbnN0ZXJzZXJ2aWNlLmdldExhc3RNb25zdGVyKCk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0TW9uc3RlckJ5UG9zaXRpb24oZ3JpZCwgbWFwLCB4LCB5KSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubWFwc2VydmljZS5nZXRNb25zdGVyQnlQb3NpdGlvbihncmlkLCBtYXAsIHgsIHkpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldEFybXModmFsdWUpe1xyXG4gICAgICAgIGxldCBhcm1zO1xyXG4gICAgICAgIHN3aXRjaCh2YWx1ZSkge1xyXG4gICAgICAgICAgICBjYXNlIFwiZmlyZVwiOlxyXG4gICAgICAgICAgICAgICAgYXJtcyA9IHRoaXMuZmlyZU1vbnN0ZXIuYXJtcztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwid2F0ZXJcIjpcclxuICAgICAgICAgICAgICAgIGFybXMgPSB0aGlzLndhdGVyTW9uc3Rlci5hcm1zO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJ3aW5kXCI6XHJcbiAgICAgICAgICAgICAgICBhcm1zID0gdGhpcy53aW5kTW9uc3Rlci5hcm1zO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJlYXJ0aFwiOlxyXG4gICAgICAgICAgICAgICAgYXJtcyA9IHRoaXMuZWFydGhNb25zdGVyLmFybXNcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgYXJtcyA9IDA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGFybXM7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0VHlwZUFybXModmFsdWUpe1xyXG4gICAgICAgIGxldCB0eXBlQXJtcztcclxuICAgICAgICBzd2l0Y2godmFsdWUpIHtcclxuICAgICAgICAgICAgY2FzZSBcImZpcmVcIjpcclxuICAgICAgICAgICAgICAgIHR5cGVBcm1zID0gdGhpcy5maXJlTW9uc3Rlci50eXBlYXJtcztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwid2F0ZXJcIjpcclxuICAgICAgICAgICAgICAgIHR5cGVBcm1zID0gdGhpcy53YXRlck1vbnN0ZXIudHlwZWFybXM7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcIndpbmRcIjpcclxuICAgICAgICAgICAgICAgIHR5cGVBcm1zID0gdGhpcy53aW5kTW9uc3Rlci50eXBlYXJtcztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwiZWFydGhcIjpcclxuICAgICAgICAgICAgICAgIHR5cGVBcm1zID0gdGhpcy5lYXJ0aE1vbnN0ZXIudHlwZWFybXM7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIHR5cGVBcm1zID0gMDtcclxuICAgICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdHlwZUFybXM7ICAgICAgICBcclxuICAgIH1cclxuXHJcbiAgICBnZXRMZWdzKHZhbHVlKXtcclxuICAgICAgICBsZXQgbGVncztcclxuICAgICAgICBzd2l0Y2godmFsdWUpIHtcclxuICAgICAgICAgICAgY2FzZSBcImZpcmVcIjpcclxuICAgICAgICAgICAgICAgIGxlZ3MgPSB0aGlzLmZpcmVNb25zdGVyLmxlZ3M7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcIndhdGVyXCI6XHJcbiAgICAgICAgICAgICAgICBsZWdzID0gdGhpcy53YXRlck1vbnN0ZXIubGVncztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwid2luZFwiOlxyXG4gICAgICAgICAgICAgICAgbGVncyA9IHRoaXMud2luZE1vbnN0ZXIubGVncztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwiZWFydGhcIjpcclxuICAgICAgICAgICAgICAgIGxlZ3MgPSB0aGlzLmVhcnRoTW9uc3Rlci5sZWdzO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBsZWdzID0gMDtcclxuICAgICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbGVncztcclxuICAgIH1cclxuXHJcbiAgICBnZXRFeWVzKHZhbHVlKXtcclxuICAgICAgICBsZXQgZXllcztcclxuICAgICAgICBzd2l0Y2godmFsdWUpIHtcclxuICAgICAgICAgICAgY2FzZSBcImZpcmVcIjpcclxuICAgICAgICAgICAgICAgIGV5ZXMgPSB0aGlzLmZpcmVNb25zdGVyLmV5ZXM7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcIndhdGVyXCI6XHJcbiAgICAgICAgICAgICAgICBleWVzID0gdGhpcy53YXRlck1vbnN0ZXIuZXllcztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwid2luZFwiOlxyXG4gICAgICAgICAgICAgICAgZXllcyA9IHRoaXMud2luZE1vbnN0ZXIuZXllcztcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwiZWFydGhcIjpcclxuICAgICAgICAgICAgICAgIGV5ZXMgPSB0aGlzLmVhcnRoTW9uc3Rlci5leWVzO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBleWVzID0gMDtcclxuICAgICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZXllcztcclxuICAgIH1cclxuXHJcbiAgICBnZXRGdXJUeXBlKHZhbHVlKXtcclxuICAgICAgICBsZXQgZnVyVHlwZTtcclxuICAgICAgICBzd2l0Y2godmFsdWUpIHtcclxuICAgICAgICAgICAgY2FzZSBcImZpcmVcIjpcclxuICAgICAgICAgICAgICAgIGZ1clR5cGUgPSB0aGlzLmZpcmVNb25zdGVyLmZ1cnR5cGU7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcIndhdGVyXCI6XHJcbiAgICAgICAgICAgICAgICBmdXJUeXBlID0gdGhpcy53YXRlck1vbnN0ZXIuZnVydHlwZTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwid2luZFwiOlxyXG4gICAgICAgICAgICAgICAgZnVyVHlwZSA9IHRoaXMud2luZE1vbnN0ZXIuZnVydHlwZTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwiZWFydGhcIjpcclxuICAgICAgICAgICAgICAgIGZ1clR5cGUgPSB0aGlzLmVhcnRoTW9uc3Rlci5mdXJ0eXBlO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBmdXJUeXBlID0gMDtcclxuICAgICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZnVyVHlwZTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRGbHkodmFsdWUpe1xyXG4gICAgICAgIGxldCBmbHk7XHJcbiAgICAgICAgc3dpdGNoKHZhbHVlKSB7XHJcbiAgICAgICAgICAgIGNhc2UgXCJmaXJlXCI6XHJcbiAgICAgICAgICAgICAgICBmbHkgPSB0aGlzLmZpcmVNb25zdGVyLmZseTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwid2F0ZXJcIjpcclxuICAgICAgICAgICAgICAgIGZseSA9IHRoaXMud2F0ZXJNb25zdGVyLmZseTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwid2luZFwiOlxyXG4gICAgICAgICAgICAgICAgZmx5ID0gdGhpcy53aW5kTW9uc3Rlci5mbHk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcImVhcnRoXCI6XHJcbiAgICAgICAgICAgICAgICBmbHkgPSB0aGlzLmVhcnRoTW9uc3Rlci5mbHk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIGZseSA9IDA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGZseTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRTd2ltKHZhbHVlKXtcclxuICAgICAgICBsZXQgc3dpbTtcclxuICAgICAgICBzd2l0Y2godmFsdWUpIHtcclxuICAgICAgICAgICAgY2FzZSBcImZpcmVcIjpcclxuICAgICAgICAgICAgICAgIHN3aW0gPSB0aGlzLmZpcmVNb25zdGVyLnN3aW07XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcIndhdGVyXCI6XHJcbiAgICAgICAgICAgICAgICBzd2ltID0gdGhpcy53YXRlck1vbnN0ZXIuc3dpbTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwid2luZFwiOlxyXG4gICAgICAgICAgICAgICAgc3dpbSA9IHRoaXMud2luZE1vbnN0ZXIuc3dpbTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwiZWFydGhcIjpcclxuICAgICAgICAgICAgICAgIHN3aW0gPSB0aGlzLmVhcnRoTW9uc3Rlci5zd2ltO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBzd2ltID0gMDtcclxuICAgICAgICAgIH1cclxuICAgICAgICByZXR1cm4gc3dpbTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRDb2xvcih2YWx1ZSl7XHJcbiAgICAgICAgbGV0IGNvbG9yO1xyXG4gICAgICAgIHN3aXRjaCh2YWx1ZSkge1xyXG4gICAgICAgICAgICBjYXNlIFwiZmlyZVwiOlxyXG4gICAgICAgICAgICAgICAgY29sb3IgPSB0aGlzLmZpcmVNb25zdGVyLmNvbG9yO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJ3YXRlclwiOlxyXG4gICAgICAgICAgICAgICAgY29sb3IgPSB0aGlzLndhdGVyTW9uc3Rlci5jb2xvcjtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwid2luZFwiOlxyXG4gICAgICAgICAgICAgICAgY29sb3IgPSB0aGlzLndpbmRNb25zdGVyLmNvbG9yO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJlYXJ0aFwiOlxyXG4gICAgICAgICAgICAgICAgY29sb3IgPSB0aGlzLmVhcnRoTW9uc3Rlci5jb2xvcjtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgY29sb3IgPSAwO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBjb2xvcjtcclxuICAgIH1cclxufSIsImltcG9ydCBab29Db250cm9sbGVyIGZyb20gJy4vQ29udHJvbGxlci9ab29Db250cm9sbGVyJztcclxuXHJcbmxldCB6b29jb250cm9sbGVyID0gbmV3IFpvb0NvbnRyb2xsZXIoKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n')}]);