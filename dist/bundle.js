!function(I){var g={};function C(l){if(g[l])return g[l].exports;var c=g[l]={i:l,l:!1,exports:{}};return I[l].call(c.exports,c,c.exports,C),c.l=!0,c.exports}C.m=I,C.c=g,C.d=function(I,g,l){C.o(I,g)||Object.defineProperty(I,g,{enumerable:!0,get:l})},C.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},C.t=function(I,g){if(1&g&&(I=C(I)),8&g)return I;if(4&g&&"object"==typeof I&&I&&I.__esModule)return I;var l=Object.create(null);if(C.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:I}),2&g&&"string"!=typeof I)for(var c in I)C.d(l,c,function(g){return I[g]}.bind(null,c));return l},C.n=function(I){var g=I&&I.__esModule?function(){return I.default}:function(){return I};return C.d(g,"a",g),g},C.o=function(I,g){return Object.prototype.hasOwnProperty.call(I,g)},C.p="",C(C.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/model/Monster.js\nclass Monster{\r\n    // MonsterData consists of element, name, arms, type_arms, legs, eyes, skintype, ability to fly, ability to swim, colour ,map, x coordinate, y coordinate\r\n    constructor(name, element, arms, typearms, legs, eyes, furtype, fly, swim, colour, map, x, y){\r\n        this.name = name;\r\n        this.element = element;\r\n        this.arms = arms;\r\n        this.typearms = typearms;\r\n        this.legs = legs;\r\n        this.eyes = eyes;\r\n        this.furtype = furtype;\r\n        this.fly = fly;\r\n        this.swim = swim;\r\n        this.colour = colour;\r\n        this.map = map;\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n\r\nclass FireMonster extends Monster{\r\n    constructor(){\r\n        super();\r\n        this.arms = [1,2,3,4,5,6];\r\n        this.typearms = ["Tentacles","Claws","Claw-wings"];\r\n        this.legs = [2];\r\n        this.eyes = [1,2,3,4];\r\n        this.furtype = ["Scales","Feathers"];\r\n        this.fly = "no";\r\n        this.swim = "no";\r\n        this.color = ["Red","Orange","Brown"];\r\n    }\r\n}\r\n\r\nclass WaterMonster extends Monster{\r\n    constructor(){\r\n        super();\r\n        this.arms = [1,2,3,4,5,6,7,8];\r\n        this.typearms = ["Tentacles","Fins"];\r\n        this.legs = [1,2,3,4];\r\n        this.eyes = [1,2,3,4,5,6,7,8];\r\n        this.furtype = ["Scales","Slime"];\r\n        this.fly = "no";\r\n        this.swim = "yes";\r\n        this.color = ["Blue","Red","Green"];\r\n    }\r\n}\r\n\r\nclass EarthMonster extends Monster{\r\n    constructor(){\r\n        super();\r\n        this.arms = [2];\r\n        this.typearms = ["Claws"];\r\n        this.legs = [2,4,6];\r\n        this.eyes = [2];\r\n        this.furtype = ["Hair","Scales","Slime"];\r\n        this.fly = "no";\r\n        this.swim = "no";\r\n        this.color = ["Purple","Orange","White"];\r\n    }\r\n}\r\n\r\nclass WindMonster extends Monster{\r\n    constructor(){\r\n        super();\r\n        this.arms = [2];\r\n        this.typearms = ["Wings","Claw-wings"];\r\n        this.legs = [0,2];\r\n        this.eyes = [2];\r\n        this.furtype = ["Feathers","Hair","Scales"];\r\n        this.fly = "yes";\r\n        this.swim = "no";\r\n        this.color = ["White","Blue","Purple"];\r\n    }\r\n}\n// CONCATENATED MODULE: ./src/model/MonsterService.js\n\r\n\r\n\r\nclass MonsterService_MonsterService\r\n{\r\n    constructor(){\r\n        this.monsters = [\r\n            new Monster("fire", "Marijn", 2, "tentacles", 2, 4, "scales", false, false, "orange", 0, 1, 1)\r\n        ]\r\n    }\r\n\r\n    getMonsters()\r\n    {\r\n        return this.monsters;\r\n    }\r\n\r\n    saveMonster(name, element, arms, typearms, legs, eyes, furtype, fly, swim, colour, map, x, y){\r\n        let newMonster = new Monster(name, element, arms, typearms, legs, eyes, furtype, fly, swim, colour, map, x, y);\r\n        this.monsters.push(newMonster);\r\n    }\r\n\r\n    getLastMonster() {\r\n        return this.monsters[this.monsters.length -1];\r\n    }\r\n    \r\n}\r\n\n// CONCATENATED MODULE: ./src/view/CreateMonsterView.js\nclass CreateMonsterView {\r\n\r\n  constructor(controller) {\r\n    this.controller = controller;\r\n\r\n    this.template = document.getElementById("create_monster");\r\n\r\n    this.radio_fire = document.getElementById("element_fire");\r\n    this.radio_water = document.getElementById("element_water");\r\n    this.radio_earth = document.getElementById("element_earth");\r\n    this.radio_wind = document.getElementById("element_wind");\r\n    this.remove = document.getElementById("remove");\r\n\r\n    this.setElementEvents(controller);\r\n  }\r\n\r\n  updateForm(controller) {\r\n    this.monsterform = document.getElementById("monster_form");\r\n\r\n    let created = document.getElementById("created");\r\n\r\n    this.monsterform.addEventListener("submit", function(e) {\r\n      e.preventDefault();\r\n\r\n      if (created.hasChildNodes()) {\r\n        while (created.firstChild) {\r\n          created.removeChild(created.firstChild);\r\n        }\r\n      }\r\n      this.img = document.createElement("img");\r\n      this.img.setAttribute("class", "created");\r\n\r\n      let src = "";\r\n\r\n      switch (this.element.value) {\r\n        case "fire":\r\n          src = "../src/Resources/orangemonster.png";\r\n          break;\r\n        case "water":\r\n          src = "../src/Resources/bluemonster.png";\r\n          break;\r\n        case "earth":\r\n          src = "../src/Resources/brownmonster.png";\r\n          break;\r\n        case "wind":\r\n          src = "../src/Resources/whitemonster.png";\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n      this.img.src = src;\r\n      this.img.draggable = true;\r\n      this.img.setAttribute(\'id\', \'-1x-1\');\r\n      this.img.addEventListener("dragstart", function(e) {\r\n        e.dataTransfer.setData("Text", e.target.id);\r\n      });\r\n      created.appendChild(this.img);\r\n\r\n      let name = document.getElementById("name").value;\r\n      let element = document.getElementById("element").value;\r\n      let arms = document.getElementById("arms").value;\r\n      let typearms = document.getElementById("type_arms").value;\r\n      let legs = document.getElementById("legs").value;\r\n      let eyes = document.getElementById("eyes").value;\r\n      let furtype = document.getElementById("furtype").value;\r\n      let fly = document.getElementById("fly").value;\r\n      let swim = document.getElementById("swim").value;\r\n      let colour = document.getElementById("colour").value;\r\n      \r\n      controller.addMonster(name, element, arms, typearms, legs, eyes, furtype, fly, swim, colour, null, null, null);\r\n\r\n    });\r\n  }\r\n\r\n  clearForm() {\r\n    let form = document.getElementById("monster_form");\r\n    while (form.hasChildNodes()) {\r\n      form.removeChild(form.firstChild);\r\n    }\r\n  }\r\n\r\n  setElementEvents(controller) {\r\n    let ownclass = this;\r\n    this.radio_fire.addEventListener("click", function() {\r\n          if (this.checked) {\r\n            ownclass.clearForm();\r\n            ownclass.generalFrom();\r\n\r\n            let element = document.getElementById("element");\r\n            element.setAttribute("value", "fire");\r\n\r\n            let arms = document.getElementById("arms");\r\n\r\n            let amountarms = controller.getArms("fire");\r\n\r\n            amountarms.forEach(element => {\r\n              let option = document.createElement("option");\r\n              option.setAttribute("value", `${element}`);\r\n              option.innerHTML = element;\r\n              arms.appendChild(option);\r\n            });\r\n            \r\n\r\n            let typearmsselect = document.getElementById("type_arms");\r\n\r\n            let armtypes = controller.getTypeArms("fire");\r\n\r\n            armtypes.forEach(element => {\r\n              let option = document.createElement("option");\r\n              option.setAttribute("value", `${element}`);\r\n              option.innerHTML = element;\r\n              typearmsselect.appendChild(option);\r\n            });\r\n\r\n            let legslabel = document.getElementById("legslabel");\r\n            legslabel.innerHTML = "Legs: ";\r\n\r\n            let legsselect = document.getElementById("legs");\r\n            let legsoptions = controller.getLegs("fire");\r\n\r\n            legsoptions.forEach(element => {\r\n              let option = document.createElement("option");\r\n              option.setAttribute("value", `${element}`);\r\n              option.innerHTML = element;\r\n              legsselect.appendChild(option);\r\n            });\r\n\r\n            let eyesselect = document.getElementById("eyes");\r\n\r\n            let eyes = controller.getEyes("fire");\r\n\r\n            eyes.forEach(element => {\r\n              let option = document.createElement("option");\r\n              option.setAttribute("value", `${element}`);\r\n              option.innerHTML = element;\r\n              eyesselect.appendChild(option);\r\n            });\r\n\r\n            let furtypeselect = document.getElementById("furtype");\r\n\r\n            let furtypes = controller.getFurType("fire");\r\n\r\n            furtypes.forEach(element => {\r\n              let option = document.createElement("option");\r\n              option.setAttribute("value", `${element}`);\r\n              option.innerHTML = element;\r\n              furtypeselect.appendChild(option);\r\n            });\r\n                \r\n            furtypeselect.addEventListener("change", function(){ \r\n              if(furtype.value == "Feathers"){\r\n                document.getElementById("flylabel").innerHTML = "Can fly: yes";\r\n              }\r\n              else{\r\n                document.getElementById("flylabel").innerHTML = "Can fly: no";\r\n              }\r\n            });\r\n\r\n            let flylabel = document.getElementById("flylabel");\r\n            let fly = document.getElementById("fly");\r\n\r\n            flylabel.innerHTML = "Can fly: " + controller.getFly("fire");\r\n            fly.setAttribute("value", controller.getFly("fire"));\r\n\r\n            let swimlabel = document.getElementById("swimlabel");\r\n            let swim = document.getElementById("swim");\r\n\r\n            swimlabel.innerHTML = "Can swim: " + controller.getSwim("fire");\r\n            swim.setAttribute("value", controller.getSwim("fire"));\r\n\r\n            let colourselect = document.getElementById("colour");\r\n\r\n            let colours = controller.getColor("fire");\r\n\r\n            colours.forEach(element => {\r\n              let option = document.createElement("option");\r\n              option.setAttribute("value", `${element}`);\r\n              option.innerHTML = element;\r\n              colourselect.appendChild(option);\r\n            });\r\n            \r\n          }\r\n    });\r\n\r\n    this.radio_fire.addEventListener("click", this.updateForm(this.controller));\r\n\r\n    this.radio_water.addEventListener("click", function() {\r\n      if (this.checked) {\r\n        ownclass.clearForm();\r\n        ownclass.generalFrom();\r\n\r\n        let element = document.getElementById("element");\r\n        element.setAttribute("value", "water");\r\n\r\n        let arms = document.getElementById("arms");\r\n\r\n        let amountarms = controller.getArms("water");\r\n\r\n        amountarms.forEach(element => {\r\n          let option = document.createElement("option");\r\n          option.setAttribute("value", `${element}`);\r\n          option.innerHTML = element;\r\n          arms.appendChild(option);\r\n        });\r\n        \r\n\r\n        let typearmsselect = document.getElementById("type_arms");\r\n\r\n        let armtypes = controller.getTypeArms("water");\r\n\r\n        armtypes.forEach(element => {\r\n          let option = document.createElement("option");\r\n          option.setAttribute("value", `${element}`);\r\n          option.innerHTML = element;\r\n          typearmsselect.appendChild(option);\r\n        });\r\n\r\n        let legslabel = document.getElementById("legslabel");\r\n        legslabel.innerHTML = "Legs: ";\r\n\r\n        let legsselect = document.getElementById("legs");\r\n        let legsoptions = controller.getLegs("water");\r\n\r\n        legsoptions.forEach(element => {\r\n          let option = document.createElement("option");\r\n          option.setAttribute("value", `${element}`);\r\n          option.innerHTML = element;\r\n          legsselect.appendChild(option);\r\n        });\r\n\r\n        let eyesselect = document.getElementById("eyes");\r\n\r\n        let eyes = controller.getEyes("water");\r\n\r\n        eyes.forEach(element => {\r\n          let option = document.createElement("option");\r\n          option.setAttribute("value", `${element}`);\r\n          option.innerHTML = element;\r\n          eyesselect.appendChild(option);\r\n        });\r\n\r\n        let furtypeselect = document.getElementById("furtype");\r\n\r\n        let furtypes = controller.getFurType("water");\r\n\r\n        furtypes.forEach(element => {\r\n          let option = document.createElement("option");\r\n          option.setAttribute("value", `${element}`);\r\n          option.innerHTML = element;\r\n          furtypeselect.appendChild(option);\r\n        });\r\n\r\n        let flylabel = document.getElementById("flylabel");\r\n        let fly = document.getElementById("fly");\r\n\r\n        flylabel.innerHTML = "Can fly: " + controller.getFly("water");\r\n        fly.setAttribute("value", controller.getFly("water"));\r\n\r\n        let swimlabel = document.getElementById("swimlabel");\r\n        let swim = document.getElementById("swim");\r\n\r\n        swimlabel.innerHTML = "Can swim: " + controller.getSwim("water");\r\n        swim.setAttribute("value", controller.getSwim("water"));\r\n\r\n        let colourselect = document.getElementById("colour");\r\n\r\n        let colours = controller.getColor("water");\r\n\r\n        colours.forEach(element => {\r\n          let option = document.createElement("option");\r\n          option.setAttribute("value", `${element}`);\r\n          option.innerHTML = element;\r\n          colourselect.appendChild(option);\r\n        });\r\n        \r\n      }\r\n});\r\n\r\nthis.radio_water.addEventListener("click", this.updateForm(this.controller));\r\n\r\n\r\nthis.radio_earth.addEventListener("click", function() {\r\n  if (this.checked) {\r\n    ownclass.clearForm();\r\n    ownclass.generalFrom();\r\n\r\n    let element = document.getElementById("element");\r\n    element.setAttribute("value", "earth");\r\n\r\n    let arms = document.getElementById("arms");\r\n\r\n    let amountarms = controller.getArms("earth");\r\n\r\n    amountarms.forEach(element => {\r\n      let option = document.createElement("option");\r\n      option.setAttribute("value", `${element}`);\r\n      option.innerHTML = element;\r\n      arms.appendChild(option);\r\n    });\r\n    \r\n    let typearmsselect = document.getElementById("type_arms");\r\n\r\n    let armtypes = controller.getTypeArms("earth");\r\n\r\n    armtypes.forEach(element => {\r\n      let option = document.createElement("option");\r\n      option.setAttribute("value", `${element}`);\r\n      option.innerHTML = element;\r\n      typearmsselect.appendChild(option);\r\n    });\r\n\r\n    let legslabel = document.getElementById("legslabel");\r\n    legslabel.innerHTML = "Legs: ";\r\n\r\n    let legsselect = document.getElementById("legs");\r\n    let legsoptions = controller.getLegs("earth");\r\n\r\n    legsoptions.forEach(element => {\r\n      let option = document.createElement("option");\r\n      option.setAttribute("value", `${element}`);\r\n      option.innerHTML = element;\r\n      legsselect.appendChild(option);\r\n    });\r\n\r\n    let eyesselect = document.getElementById("eyes");\r\n\r\n    let eyes = controller.getEyes("earth");\r\n\r\n    eyes.forEach(element => {\r\n      let option = document.createElement("option");\r\n      option.setAttribute("value", `${element}`);\r\n      option.innerHTML = element;\r\n      eyesselect.appendChild(option);\r\n    });\r\n\r\n    let furtypeselect = document.getElementById("furtype");\r\n\r\n    let furtypes = controller.getFurType("earth");\r\n\r\n    furtypes.forEach(element => {\r\n      let option = document.createElement("option");\r\n      option.setAttribute("value", `${element}`);\r\n      option.innerHTML = element;\r\n      furtypeselect.appendChild(option);\r\n    });\r\n\r\n    let flylabel = document.getElementById("flylabel");\r\n    let fly = document.getElementById("fly");\r\n\r\n    flylabel.innerHTML = "Can fly: " + controller.getFly("earth");\r\n    fly.setAttribute("value", controller.getFly("earth"));\r\n\r\n    let swimlabel = document.getElementById("swimlabel");\r\n    let swim = document.getElementById("swim");\r\n\r\n    swimlabel.innerHTML = "Can swim: " + controller.getSwim("earth");\r\n    swim.setAttribute("value", controller.getSwim("earth"));\r\n\r\n    let colourselect = document.getElementById("colour");\r\n\r\n    let colours = controller.getColor("earth");\r\n\r\n    colours.forEach(element => {\r\n      let option = document.createElement("option");\r\n      option.setAttribute("value", `${element}`);\r\n      option.innerHTML = element;\r\n      colourselect.appendChild(option);\r\n    });\r\n    \r\n  }\r\n});\r\n\r\nthis.radio_earth.addEventListener("click", this.updateForm(this.controller));\r\n\r\nthis.radio_wind.addEventListener("click", function() {\r\n        if (this.checked) {\r\n          ownclass.clearForm();\r\n          ownclass.generalFrom();\r\n\r\n          let element = document.getElementById("element");\r\n          element.setAttribute("value", "wind");\r\n\r\n          let arms = document.getElementById("arms");\r\n\r\n          let amountarms = controller.getArms("wind");\r\n\r\n          amountarms.forEach(element => {\r\n            let option = document.createElement("option");\r\n            option.setAttribute("value", `${element}`);\r\n            option.innerHTML = element;\r\n            arms.appendChild(option);\r\n          });\r\n          \r\n\r\n          let typearmsselect = document.getElementById("type_arms");\r\n\r\n          let armtypes = controller.getTypeArms("wind");\r\n\r\n          armtypes.forEach(element => {\r\n            let option = document.createElement("option");\r\n            option.setAttribute("value", `${element}`);\r\n            option.innerHTML = element;\r\n            typearmsselect.appendChild(option);\r\n          });\r\n\r\n          let legslabel = document.getElementById("legslabel");\r\n          legslabel.innerHTML = "Legs: ";\r\n\r\n          let legsselect = document.getElementById("legs");\r\n          let legsoptions = controller.getLegs("wind");\r\n\r\n          legsoptions.forEach(element => {\r\n            let option = document.createElement("option");\r\n            option.setAttribute("value", `${element}`);\r\n            option.innerHTML = element;\r\n            legsselect.appendChild(option);\r\n          });\r\n\r\n          let eyesselect = document.getElementById("eyes");\r\n\r\n          let eyes = controller.getEyes("wind");\r\n\r\n          eyes.forEach(element => {\r\n            let option = document.createElement("option");\r\n            option.setAttribute("value", `${element}`);\r\n            option.innerHTML = element;\r\n            eyesselect.appendChild(option);\r\n          });\r\n\r\n          let furtypeselect = document.getElementById("furtype");\r\n\r\n          let furtypes = controller.getFurType("wind");\r\n\r\n          furtypes.forEach(element => {\r\n            let option = document.createElement("option");\r\n            option.setAttribute("value", `${element}`);\r\n            option.innerHTML = element;\r\n            furtypeselect.appendChild(option);\r\n          });\r\n          \r\n                          \r\n          furtypeselect.addEventListener("change", function(){ \r\n            if(furtype.value != "Feathers"){\r\n              document.getElementById("swimlabel").innerHTML = "Can swim: yes";\r\n            }\r\n            else{\r\n              document.getElementById("swimlabel").innerHTML = "Can swim: no";\r\n            }\r\n          });\r\n\r\n          let flylabel = document.getElementById("flylabel");\r\n          let fly = document.getElementById("fly");\r\n\r\n          flylabel.innerHTML = "Can fly: " + controller.getFly("wind");\r\n          fly.setAttribute("value", controller.getFly("wind"));\r\n\r\n          let swimlabel = document.getElementById("swimlabel");\r\n          let swim = document.getElementById("swim");\r\n\r\n          swimlabel.innerHTML = "Can swim: " + controller.getSwim("wind");\r\n          swim.setAttribute("value", controller.getSwim("wind"));\r\n\r\n          let colourselect = document.getElementById("colour");\r\n\r\n          let colours = controller.getColor("wind");\r\n\r\n          colours.forEach(element => {\r\n            let option = document.createElement("option");\r\n            option.setAttribute("value", `${element}`);\r\n            option.innerHTML = element;\r\n            colourselect.appendChild(option);\r\n          });\r\n          \r\n        }\r\n  });\r\nthis.radio_wind.addEventListener("click", this.updateForm(this.controller));\r\n\r\n  }\r\n\r\n  generalFrom(){\r\n    let form = document.getElementById("monster_form");\r\n            // TODO: Remove previous form\r\n\r\n            let fieldset = document.createElement("fieldset");\r\n            let namelabel = document.createElement("label");\r\n            namelabel.innerHTML = "Name:";\r\n            let nameinput = document.createElement("input");\r\n            nameinput.setAttribute("id", "name");\r\n            nameinput.setAttribute("name", "name");\r\n\r\n            fieldset.appendChild(namelabel);\r\n            fieldset.appendChild(nameinput);\r\n\r\n            form.appendChild(fieldset);\r\n\r\n            let element = document.createElement("input");\r\n            element.setAttribute("id", "element");\r\n            // Value will be set by element\r\n            element.hidden = true;\r\n\r\n            form.appendChild(element);\r\n\r\n            let fieldset2 = document.createElement("fieldset");\r\n            let armslabel = document.createElement("label");\r\n            armslabel.innerHTML = "Arms:";\r\n            let select = document.createElement("select");\r\n            select.setAttribute("id", "arms");\r\n            // Amount of options swil be set by element\r\n\r\n            fieldset2.appendChild(armslabel);\r\n            fieldset2.appendChild(select);\r\n\r\n            form.appendChild(fieldset2);\r\n\r\n            let fieldset3 = document.createElement("fieldset");\r\n            let typearmslabel = document.createElement("label");\r\n            typearmslabel.innerHTML = "Type arms:"\r\n\r\n            let typearmsselect = document.createElement("select");\r\n            typearmsselect.setAttribute("id", "type_arms");\r\n\r\n            fieldset3.appendChild(typearmsselect);\r\n\r\n            form.appendChild(typearmslabel);\r\n            form.appendChild(fieldset3);\r\n\r\n            let fieldset4 = document.createElement("fieldset");\r\n            let legslabel = document.createElement("label");\r\n            legslabel.setAttribute("id", "legslabel");\r\n            legslabel.innerHTML = "Legs: ";\r\n\r\n            let legsselect = document.createElement("select");\r\n            legsselect.setAttribute("id", "legs");\r\n\r\n            fieldset4.appendChild(legslabel);\r\n            fieldset4.appendChild(legsselect);\r\n            form.appendChild(fieldset4);\r\n\r\n            let fieldset9 = document.createElement("fieldset");\r\n            let eyeslabel = document.createElement("label");\r\n            eyeslabel.innerHTML = "Eyes:";\r\n            let select2 = document.createElement("select");\r\n            select2.setAttribute("id", "eyes");\r\n            // Amount of eyes set by element\r\n\r\n            fieldset9.appendChild(eyeslabel);\r\n            fieldset9.appendChild(select2);\r\n\r\n            form.append(fieldset9);\r\n\r\n            let fieldset5 = document.createElement("fieldset");\r\n            let furtypelabel = document.createElement("label");\r\n            furtypelabel.innerHTML = "Fur type:";\r\n            let typefurselect = document.createElement("select");\r\n            typefurselect.setAttribute("id", "furtype");\r\n\r\n            fieldset5.appendChild(furtypelabel);\r\n            fieldset5.appendChild(typefurselect);\r\n            form.appendChild(fieldset5);\r\n\r\n            let fieldset6 = document.createElement("fieldset");\r\n            let flylabel = document.createElement("label");\r\n            flylabel.setAttribute("id", "flylabel")\r\n            flylabel.innerHTML = "Can fly: ";\r\n            let fly = document.createElement("input");\r\n            fly.setAttribute("id", "fly");\r\n            fly.setAttribute("value", "");\r\n            fly.setAttribute("class", "hidden");\r\n\r\n            fieldset6.appendChild(flylabel);\r\n            fieldset6.appendChild(fly);\r\n\r\n            form.appendChild(fieldset6);\r\n\r\n            let fieldset7 = document.createElement("fieldset");\r\n            let swimlabel = document.createElement("label");\r\n            swimlabel.setAttribute("id", "swimlabel")\r\n            swimlabel.innerHTML = "Can swim: ";\r\n            let swim = document.createElement("input");\r\n            swim.setAttribute("id", "swim");\r\n            swim.setAttribute("value", "");\r\n            swim.setAttribute("class", "hidden");\r\n\r\n            fieldset6.appendChild(swimlabel);\r\n            fieldset6.appendChild(swim);\r\n\r\n            form.appendChild(fieldset7);\r\n\r\n            let fieldset8 = document.createElement("fieldset");\r\n            let colourlabel = document.createElement("label");\r\n            colourlabel.innerHTML = "Colour:"\r\n\r\n            let colourselect = document.createElement("select");\r\n            colourselect.setAttribute("id", "colour");\r\n\r\n            fieldset8.appendChild(colourselect);\r\n\r\n            form.appendChild(colourlabel);\r\n            form.appendChild(fieldset8);\r\n\r\n            let submit = document.createElement("input");\r\n            submit.setAttribute("type", "submit");\r\n            submit.setAttribute("class", "nes-btn is-success");\r\n            submit.setAttribute("value", "Submit");\r\n\r\n            form.appendChild(submit);\r\n            this.updateForm(this.controller);\r\n          }\r\n}\r\n\n// CONCATENATED MODULE: ./src/view/MapView.js\nclass MapView {\r\n  constructor(zoocontroller, weathercontroller) {\r\n    this.map = document.getElementById("map");\r\n    this.remove = document.getElementById("remove");\r\n\r\n    this.zoocontroller = zoocontroller;\r\n    this.weathercontroller = weathercontroller;\r\n\r\n    // Zoo width (zw) and zoo height (zh)\r\n\r\n    this.zw = 10;\r\n    this.zh = 10;\r\n\r\n    // Load buttons from index.html\r\n\r\n    let jungle = document.getElementById("jungle");\r\n    let desert = document.getElementById("desert");\r\n    let northpole = document.getElementById("northpole");\r\n\r\n    jungle.disabled = true;\r\n    jungle.setAttribute("class", "nes-btn is-disabled");\r\n\r\n    // ---------------------------------------------------------------------------------------------------------\r\n    // Buttons for switching between environments\r\n    // ---------------------------------------------------------------------------------------------------------\r\n\r\n    jungle.addEventListener("click", () => {\r\n      if (jungle.disabled != true) {\r\n        this.loadGrid(0);\r\n        jungle.disabled = true;\r\n        desert.disabled = false;\r\n        northpole.disabled = false;\r\n\r\n        jungle.setAttribute("class", "nes-btn is-disabled");\r\n        desert.setAttribute("class", "nes-btn is-warning");\r\n        northpole.setAttribute("class", "nes-btn");\r\n      }\r\n    });\r\n\r\n    desert.addEventListener("click", () => {\r\n      if (desert.disabled != true) {\r\n        this.loadGrid(2);\r\n        desert.disabled = true;\r\n        jungle.disabled = false;\r\n        northpole.disabled = false;\r\n\r\n        desert.setAttribute("class", "nes-btn is-disabled");\r\n        jungle.setAttribute("class", "nes-btn is-success");\r\n        northpole.setAttribute("class", "nes-btn");\r\n      }\r\n    });\r\n\r\n    northpole.addEventListener("click", () => {\r\n      if (northpole.disabled != true) {\r\n        this.loadGrid(1);\r\n        northpole.disabled = true;\r\n        desert.disabled = false;\r\n        jungle.disabled = false;\r\n\r\n        northpole.setAttribute("class", "nes-btn is-disabled");\r\n        jungle.setAttribute("class", "nes-btn is-success");\r\n        desert.setAttribute("class", "nes-btn is-warning");\r\n      }\r\n    });\r\n\r\n    // ---------------------------------------------------------------------------------------------------------\r\n\r\n    // Initialise the map from jungle\r\n    this.loadGrid(0);\r\n  }\r\n\r\n  loadGrid(terrain) {\r\n    // Terrain index: 0 is jungle, 1 is northpole, 3 is desert\r\n    this.terrain = terrain;\r\n    this.zoocontroller.loadGrid(this);\r\n  }\r\n\r\n  paintGrid(grid) {\r\n    this.grid = grid;\r\n    this.selected = this.grid[this.terrain].grid;\r\n    this.weathercontroller.updateWeather(\r\n      this.grid[this.terrain].reference_city\r\n    );\r\n    this.initRemove();\r\n    this.drawBoard();\r\n  }\r\n\r\n  drawBoard() {\r\n    let oldBoard = document.getElementById("grid");\r\n    if (oldBoard != null) {\r\n      oldBoard.remove();\r\n    }\r\n\r\n    this.table = document.createElement("table");\r\n    this.table.setAttribute("id", "grid");\r\n\r\n    for (let i = 0; i < this.zw; i++) {\r\n      this.tr = document.createElement("tr");\r\n      for (let y = 0; y < this.zh; y++) {\r\n        this.td = document.createElement("td");\r\n\r\n        // Drag and drop events\r\n        this.td.addEventListener("dragover", function(e) {\r\n          e.preventDefault();\r\n        });\r\n\r\n        this.td.addEventListener("dragenter", function(e) {\r\n          e.preventDefault();\r\n        });\r\n\r\n        let grid = this.grid;\r\n        let terrain = this.terrain;\r\n        let zoocontroller = this.zoocontroller;\r\n\r\n        this.td.addEventListener("drop", function(e) {\r\n          let data = e.dataTransfer.getData("Text");\r\n          let monster = document.getElementById(data);\r\n\r\n          if (monster != null) {\r\n            if (\r\n              !this.hasChildNodes() &&\r\n              monster.getAttribute("draggable") === "true"\r\n            ) {\r\n              let origin = monster.getAttribute("id").split("x");\r\n              let coordid = this.getAttribute("id").split("-");\r\n\r\n              if(monster.getAttribute("id") === "-1x-1") {\r\n                zoocontroller.addMonsterToGrid(\r\n                  grid,\r\n                  terrain,\r\n                  coordid[0],\r\n                  coordid[1]\r\n                );\r\n\r\n                let nowgrid = grid;\r\n                let map = terrain;\r\n                monster.addEventListener("click", function(e) {\r\n                  let coords = monster.getAttribute("id").split("x");\r\n                  let selectedmonster = zoocontroller.getMonsterByPosition(nowgrid, map, coords[0], coords[1]);\r\n  \r\n      \r\n                  alert(\'Monster selected: \' + selectedmonster.name + \'\\n\' +\r\n                  \'Element: \' + selectedmonster.element + \'\\n\' +\r\n                  \'Arms: \' + selectedmonster.arms + \'\\n\' +\r\n                  \'Type of arms: \' + selectedmonster.typearms + \'\\n\' +\r\n                  \'Legs: \' + selectedmonster.legs + \'\\n\' +\r\n                  \'Eyes: \' + selectedmonster.eyes + \'\\n\' +\r\n                  \'Fur type: \' + selectedmonster.furtype + \'\\n\' +\r\n                  \'Can fly: \' + selectedmonster.fly + \'\\n\' +\r\n                  \'Can swim: \' + selectedmonster.swim + \'\\n\' +\r\n                  \'Colour: \' + selectedmonster.colour + \'\\n\'\r\n                  );\r\n                });\r\n\r\n              } else {\r\n                zoocontroller.addExistingMonsterToGrid(\r\n                  grid,\r\n                  terrain,\r\n                  origin[0],\r\n                  origin[1],\r\n                  coordid[0],\r\n                  coordid[1]\r\n                );\r\n              }\r\n\r\n              if (monster.getAttribute("id") !== "-1x-1") {\r\n                zoocontroller.deleteMonsterFromGrid(\r\n                  grid,\r\n                  terrain,\r\n                  origin[0],\r\n                  origin[1]\r\n                );\r\n              }\r\n\r\n              monster.setAttribute("id", coordid[0] + "x" + coordid[1]);\r\n              this.append(monster);\r\n\r\n\r\n            }\r\n          }\r\n        });\r\n\r\n        this.td.setAttribute("id", i + "-" + y);\r\n\r\n        if (typeof this.selected[i].Columns[y] === "object") {\r\n          let monster = this.selected[i].Columns[y];\r\n          this.img = document.createElement("img");\r\n          this.img.setAttribute("class", "monster");\r\n\r\n          //Every monster gets an id based on their coordinates\r\n          this.img.setAttribute("id", i + "x" + y);\r\n\r\n          switch (monster.element) {\r\n            case "fire":\r\n              this.img.src = "../src/Resources/orangemonster.png";\r\n              break;\r\n            case "water":\r\n              this.img.src = "../src/Resources/bluemonster.png";\r\n              break;\r\n            case "earth":\r\n              this.img.src = "../src/Resources/brownmonster.png";\r\n              break;\r\n            case "wind":\r\n              this.img.src = "../src/Resources/whitemonster.png";\r\n              break;\r\n\r\n            default:\r\n              alert("Warning: could not find resource for monster");\r\n              break;\r\n          }\r\n\r\n          this.img.draggable = true;\r\n          this.img.addEventListener("dragstart", function(e) {\r\n            e.dataTransfer.setData("Text", e.target.id);\r\n          });\r\n\r\n          let clicked = this.img;\r\n          let zoocontroller = this.zoocontroller;\r\n          let grid = this.grid;\r\n          let map = this.terrain;\r\n          this.img.addEventListener("click", function(e) {\r\n            let coords = clicked.getAttribute("id").split("x");\r\n            let selectedmonster = zoocontroller.getMonsterByPosition(grid, map, coords[0], coords[1]);\r\n\r\n            alert(\'Monster selected: \' + selectedmonster.name + \'\\n\' +\r\n            \'Element: \' + selectedmonster.element + \'\\n\' +\r\n            \'Arms: \' + selectedmonster.arms + \'\\n\' +\r\n            \'Type of arms: \' + selectedmonster.typearms + \'\\n\' +\r\n            \'Legs: \' + selectedmonster.legs + \'\\n\' +\r\n            \'Eyes: \' + selectedmonster.eyes + \'\\n\' +\r\n            \'Fur type: \' + selectedmonster.furtype + \'\\n\' +\r\n            \'Can fly: \' + selectedmonster.fly + \'\\n\' +\r\n            \'Can swim: \' + selectedmonster.swim + \'\\n\' +\r\n            \'Colour: \' + selectedmonster.colour + \'\\n\'\r\n            );\r\n          });\r\n          this.td.appendChild(this.img);\r\n        }\r\n\r\n        if (this.selected[i].Columns[y] == 1) {\r\n          this.img = document.createElement("img");\r\n          this.img.setAttribute("class", "stone");\r\n\r\n          //Every monster gets an id based on their coordinates\r\n          this.img.setAttribute("id", i + "x" + y);\r\n\r\n          switch (terrain) {\r\n            // Jungle\r\n            case 0:\r\n              this.img.src = "../src/Resources/junglerock.png";\r\n              document.getElementById("map").style.backgroundColor = "#289150";\r\n              break;\r\n\r\n            // Nortpole\r\n            case 1:\r\n              this.img.src = "../src/Resources/icechunk.png";\r\n              document.getElementById("map").style.backgroundColor = "#D8FFFF";\r\n              break;\r\n\r\n            // Desert\r\n            case 2:\r\n              this.img.src = "../src/Resources/cactus.png";\r\n              document.getElementById("map").style.backgroundColor = "#EDC9AF";\r\n              break;\r\n\r\n            default:\r\n              break;\r\n          }\r\n          this.td.appendChild(this.img);\r\n        }\r\n        this.tr.appendChild(this.td);\r\n      }\r\n      this.table.appendChild(this.tr);\r\n    }\r\n    this.map.appendChild(this.table);\r\n  }\r\n\r\n  initRemove() {\r\n    let grid = this.grid;\r\n    let terrain = this.terrain;\r\n    let zoocontroller = this.zoocontroller;\r\n\r\n    this.remove.addEventListener("drop", function(e) {\r\n      let data = e.dataTransfer.getData("Text");\r\n      let monster = document.getElementById(data);\r\n      if (monster != null) {\r\n        let origin = monster.getAttribute("id").split("x");\r\n\r\n        zoocontroller.deleteMonsterFromGrid(\r\n          grid,\r\n          terrain,\r\n          origin[0],\r\n          origin[1]\r\n        );\r\n\r\n        monster.remove();\r\n      }\r\n    });\r\n\r\n    this.remove.addEventListener("dragover", function(e) {\r\n      e.preventDefault();\r\n    });\r\n\r\n    this.remove.addEventListener("dragenter", function(e) {\r\n      e.preventDefault();\r\n    });\r\n  }\r\n}\r\n\n// CONCATENATED MODULE: ./src/Model/WeatherDataService.js\nclass WeatherDataService {\r\n\r\n    constructor() {\r\n        this.apikey = \'6efc35c3c2611e414ea66da76b2e3f0b\';\r\n        this.units = \'metric\';\r\n    }\r\n\r\n    getCurrentWeather(cityName) {\r\n        return fetch(`http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${this.apikey}&units=${this.units}`)\r\n        .then(function(response) {\r\n          return response.json();\r\n        })\r\n        .then(function(myJson) {\r\n          return myJson;\r\n        });\r\n      }\r\n}\n// CONCATENATED MODULE: ./src/View/WeatherView.js\nclass WeatherView {\r\n\r\n    constructor() {\r\n        this.img = document.getElementById(\'weatherimg\');\r\n        this.temp = document.getElementById(\'temp\');\r\n        this.rain = false;\r\n\r\n        this.initRainSwitch();\r\n    }\r\n\r\n    initRainSwitch() {\r\n        let rainswitch = document.getElementById(\'rainswitch\');\r\n        let ownclass = this;\r\n        rainswitch.addEventListener("click", function(e) {\r\n            e.preventDefault();\r\n            if(ownclass.rain) {\r\n                ownclass.updateWeather(ownclass.temperature, "Clear");\r\n                ownclass.rain = false;\r\n            } else {\r\n                ownclass.updateWeather(ownclass.temperature, "Rain");\r\n            }\r\n        });\r\n    }\r\n\r\n    updateWeather(temp, rain) {\r\n        this.temperature = temp;\r\n        this.temp.innerText = `${temp}° Celcius`;\r\n\r\n\r\n        if(rain === \'Rain\' || rain === \'Shower rain\') {\r\n            this.rain = true;\r\n            if(document.getElementById(\'rain\') === null) {\r\n                let canvas = document.createElement(\'canvas\');\r\n                canvas.setAttribute(\'id\', \'rain\');\r\n                document.getElementById(\'map\').appendChild(canvas);\r\n                this.startRain(300);\r\n            }\r\n        } else {\r\n            let canvas = document.getElementById(\'rain\');\r\n            if(canvas !== null) {\r\n                canvas.parentNode.removeChild(canvas);\r\n            }\r\n        }\r\n    }\r\n\r\n    startRain(maxParts) {\r\n        let canvas = document.getElementById("rain");\r\n\r\n        if (canvas.getContext) {\r\n            let ctx = canvas.getContext(\'2d\');\r\n            let w = canvas.width;\r\n            let h = canvas.height;\r\n            ctx.strokeStyle = \'rgba(46,86,147,0.3)\';\r\n            ctx.lineWidth = 0.7;\r\n            ctx.lineCap = \'round\';\r\n\r\n\r\n            let init = [];\r\n            for (let a = 0; a < maxParts; a++) {\r\n                init.push({\r\n                    x: Math.random() * w,\r\n                    y: Math.random() * h,\r\n                    l: Math.random() * 1,\r\n                    xs: -4 + Math.random() * 4 + 2,\r\n                    ys: Math.random() * 10 + 10\r\n                })\r\n            }\r\n\r\n            let particles = [];\r\n            for (let b = 0; b < maxParts; b++) {\r\n                particles[b] = init[b];\r\n            }\r\n\r\n            function draw() {\r\n                ctx.clearRect(0, 0, w, h);\r\n                for (let c = 0; c < particles.length; c++) {\r\n                    let p = particles[c];\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(p.x, p.y);\r\n                    ctx.lineTo(p.x + p.l * p.xs, p.y + p.l * p.ys);\r\n                    ctx.stroke();\r\n                }\r\n                move();\r\n            }\r\n\r\n            function move() {\r\n                for (let b = 0; b < particles.length; b++) {\r\n                    let p = particles[b];\r\n                    p.x += p.xs;\r\n                    p.y += p.ys;\r\n                    if (p.x > w || p.y > h) {\r\n                        p.x = Math.random() * w;\r\n                        p.y = -20;\r\n                    }\r\n                }\r\n            }\r\n\r\n            setInterval(draw, 80);\r\n\r\n        }\r\n    }\r\n}\n// CONCATENATED MODULE: ./src/Controller/WeatherController.js\n\r\n\r\n\r\nclass WeatherController_WeatherController {\r\n    constructor() {\r\n        this.weatherdata = new WeatherDataService();\r\n        this.weatherview = new WeatherView();\r\n    }\r\n\r\n    updateWeather(city) {\r\n        let weatherview = this.weatherview;\r\n        this.weatherdata.getCurrentWeather(city).then(function(data) {\r\n            weatherview.updateWeather(data.main.temp, data.weather[0].main);\r\n        });\r\n    }\r\n}\n// CONCATENATED MODULE: ./src/Model/MapService.js\nclass MapService {\r\n  loadGrid() {\r\n    return fetch("./map/grid.json")\r\n      .then(function(response) {\r\n        return response.json();\r\n      })\r\n      .then(function(grid) {\r\n        let STORAGE_KEY = "zoo-grid";\r\n\r\n        // Put the whole grid from localstorage in a variable\r\n        let storage = JSON.parse(localStorage.getItem(STORAGE_KEY));\r\n\r\n        if (storage != null) {\r\n          grid = storage;\r\n\r\n        // If the grid is not present in localstorage yet, put the whole grid as loaded from the local grid.json file in there\r\n        } else {\r\n          localStorage.setItem(STORAGE_KEY, JSON.stringify(grid));\r\n        }\r\n\r\n        return grid;\r\n      });\r\n  }\r\n\r\n  addMonsterToGrid(grid, terrain, monster, x, y) {\r\n    monster.x = x;\r\n    monster.y = y;\r\n    monster.map = terrain;\r\n    grid[terrain].grid[x].Columns[y] = monster;\r\n    this.saveToLocalStorage(grid);\r\n  }\r\n\r\n  deleteMonsterFromGrid(grid, terrain, x, y) {\r\n    grid[terrain].grid[x].Columns[y] = "0";\r\n    this.saveToLocalStorage(grid);\r\n  }\r\n\r\n  saveToLocalStorage(grid) {\r\n    let STORAGE_KEY = "zoo-grid";\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(grid));\r\n  }\r\n\r\n  getMonsterByPosition(grid, map, x, y) {\r\n    return grid[map].grid[x].Columns[y];\r\n  }\r\n\r\n}\r\n\n// CONCATENATED MODULE: ./src/Model/Monster.js\nclass Monster_Monster{\r\n    // MonsterData consists of element, name, arms, type_arms, legs, eyes, skintype, ability to fly, ability to swim, colour ,map, x coordinate, y coordinate\r\n    constructor(name, element, arms, typearms, legs, eyes, furtype, fly, swim, colour, map, x, y){\r\n        this.name = name;\r\n        this.element = element;\r\n        this.arms = arms;\r\n        this.typearms = typearms;\r\n        this.legs = legs;\r\n        this.eyes = eyes;\r\n        this.furtype = furtype;\r\n        this.fly = fly;\r\n        this.swim = swim;\r\n        this.colour = colour;\r\n        this.map = map;\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n\r\nclass Monster_FireMonster extends Monster_Monster{\r\n    constructor(){\r\n        super();\r\n        this.arms = [1,2,3,4,5,6];\r\n        this.typearms = ["Tentacles","Claws","Claw-wings"];\r\n        this.legs = [2];\r\n        this.eyes = [1,2,3,4];\r\n        this.furtype = ["Scales","Feathers"];\r\n        this.fly = "no";\r\n        this.swim = "no";\r\n        this.color = ["Red","Orange","Brown"];\r\n    }\r\n}\r\n\r\nclass Monster_WaterMonster extends Monster_Monster{\r\n    constructor(){\r\n        super();\r\n        this.arms = [1,2,3,4,5,6,7,8];\r\n        this.typearms = ["Tentacles","Fins"];\r\n        this.legs = [1,2,3,4];\r\n        this.eyes = [1,2,3,4,5,6,7,8];\r\n        this.furtype = ["Scales","Slime"];\r\n        this.fly = "no";\r\n        this.swim = "yes";\r\n        this.color = ["Blue","Red","Green"];\r\n    }\r\n}\r\n\r\nclass Monster_EarthMonster extends Monster_Monster{\r\n    constructor(){\r\n        super();\r\n        this.arms = [2];\r\n        this.typearms = ["Claws"];\r\n        this.legs = [2,4,6];\r\n        this.eyes = [2];\r\n        this.furtype = ["Hair","Scales","Slime"];\r\n        this.fly = "no";\r\n        this.swim = "no";\r\n        this.color = ["Purple","Orange","White"];\r\n    }\r\n}\r\n\r\nclass Monster_WindMonster extends Monster_Monster{\r\n    constructor(){\r\n        super();\r\n        this.arms = [2];\r\n        this.typearms = ["Wings","Claw-wings"];\r\n        this.legs = [0,2];\r\n        this.eyes = [2];\r\n        this.furtype = ["Feathers","Hair","Scales"];\r\n        this.fly = "yes";\r\n        this.swim = "no";\r\n        this.color = ["White","Blue","Purple"];\r\n    }\r\n}\n// CONCATENATED MODULE: ./src/Controller/ZooController.js\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass ZooController_ZooController\r\n{\r\n    //el constructor\r\n    constructor(){\r\n        this.weathercontroller = new WeatherController_WeatherController();\r\n\r\n        this.monsterservice = new MonsterService_MonsterService();\r\n        this.createmonsterview =  new CreateMonsterView(this);\r\n        this.mapservice = new MapService();\r\n        this.fireMonster = new Monster_FireMonster();\r\n        this.waterMonster = new Monster_WaterMonster();\r\n        this.earthMonster =  new Monster_EarthMonster();\r\n        this.windMonster = new Monster_WindMonster();\r\n\r\n        this.mapview = new MapView(this, this.weathercontroller);\r\n    }\r\n\r\n    addMonsterToGrid(grid, terrain, x, y) {\r\n        this.mapservice.addMonsterToGrid(grid, terrain, this.getLastMonster(), x, y);\r\n    }\r\n\r\n    addExistingMonsterToGrid(grid, terrain, ox, oy, x, y) {\r\n        this.mapservice.addMonsterToGrid(grid, terrain, this.getMonsterByPosition(grid, terrain, ox, oy), x, y);\r\n    }\r\n\r\n    deleteMonsterFromGrid(grid, terrain, x, y) {\r\n        this.mapservice.deleteMonsterFromGrid(grid, terrain, x, y);\r\n    }\r\n\r\n    addMonster(name, element, arms, typearms, legs, eyes, furtype, fly, swim, colour, map, x, y){\r\n        this.monsterservice.saveMonster(name, element, arms, typearms, legs, eyes, furtype, fly, swim, colour, map, x, y);\r\n    }\r\n\r\n    loadGrid(mapview) {\r\n        this.mapservice.loadGrid().then(function(grid) {\r\n            mapview.paintGrid(grid);\r\n        });\r\n    }\r\n\r\n    getLastMonster() {\r\n        return this.monsterservice.getLastMonster();\r\n    }\r\n\r\n    getMonsterByPosition(grid, map, x, y) {\r\n        return this.mapservice.getMonsterByPosition(grid, map, x, y);\r\n    }\r\n\r\n    getArms(value){\r\n        let arms;\r\n        switch(value) {\r\n            case "fire":\r\n                arms = this.fireMonster.arms;\r\n                break;\r\n            case "water":\r\n                arms = this.waterMonster.arms;\r\n                break;\r\n            case "wind":\r\n                arms = this.windMonster.arms;\r\n                break;\r\n            case "earth":\r\n                arms = this.earthMonster.arms\r\n                break;\r\n            default:\r\n                arms = 0;\r\n          }\r\n        return arms;\r\n    }\r\n\r\n    getTypeArms(value){\r\n        let typeArms;\r\n        switch(value) {\r\n            case "fire":\r\n                typeArms = this.fireMonster.typearms;\r\n                break;\r\n            case "water":\r\n                typeArms = this.waterMonster.typearms;\r\n                break;\r\n            case "wind":\r\n                typeArms = this.windMonster.typearms;\r\n                break;\r\n            case "earth":\r\n                typeArms = this.earthMonster.typearms;\r\n                break;\r\n            default:\r\n                typeArms = 0;\r\n          }\r\n        return typeArms;        \r\n    }\r\n\r\n    getLegs(value){\r\n        let legs;\r\n        switch(value) {\r\n            case "fire":\r\n                legs = this.fireMonster.legs;\r\n                break;\r\n            case "water":\r\n                legs = this.waterMonster.legs;\r\n                break;\r\n            case "wind":\r\n                legs = this.windMonster.legs;\r\n                break;\r\n            case "earth":\r\n                legs = this.earthMonster.legs;\r\n                break;\r\n            default:\r\n                legs = 0;\r\n          }\r\n        return legs;\r\n    }\r\n\r\n    getEyes(value){\r\n        let eyes;\r\n        switch(value) {\r\n            case "fire":\r\n                eyes = this.fireMonster.eyes;\r\n                break;\r\n            case "water":\r\n                eyes = this.waterMonster.eyes;\r\n                break;\r\n            case "wind":\r\n                eyes = this.windMonster.eyes;\r\n                break;\r\n            case "earth":\r\n                eyes = this.earthMonster.eyes;\r\n                break;\r\n            default:\r\n                eyes = 0;\r\n          }\r\n        return eyes;\r\n    }\r\n\r\n    getFurType(value){\r\n        let furType;\r\n        switch(value) {\r\n            case "fire":\r\n                furType = this.fireMonster.furtype;\r\n                break;\r\n            case "water":\r\n                furType = this.waterMonster.furtype;\r\n                break;\r\n            case "wind":\r\n                furType = this.windMonster.furtype;\r\n                break;\r\n            case "earth":\r\n                furType = this.earthMonster.furtype;\r\n                break;\r\n            default:\r\n                furType = 0;\r\n          }\r\n        return furType;\r\n    }\r\n\r\n    getFly(value){\r\n        let fly;\r\n        switch(value) {\r\n            case "fire":\r\n                fly = this.fireMonster.fly;\r\n                break;\r\n            case "water":\r\n                fly = this.waterMonster.fly;\r\n                break;\r\n            case "wind":\r\n                fly = this.windMonster.fly;\r\n                break;\r\n            case "earth":\r\n                fly = this.earthMonster.fly;\r\n                break;\r\n            default:\r\n                fly = 0;\r\n          }\r\n        return fly;\r\n    }\r\n\r\n    getSwim(value){\r\n        let swim;\r\n        switch(value) {\r\n            case "fire":\r\n                swim = this.fireMonster.swim;\r\n                break;\r\n            case "water":\r\n                swim = this.waterMonster.swim;\r\n                break;\r\n            case "wind":\r\n                swim = this.windMonster.swim;\r\n                break;\r\n            case "earth":\r\n                swim = this.earthMonster.swim;\r\n                break;\r\n            default:\r\n                swim = 0;\r\n          }\r\n        return swim;\r\n    }\r\n\r\n    getColor(value){\r\n        let color;\r\n        switch(value) {\r\n            case "fire":\r\n                color = this.fireMonster.color;\r\n                break;\r\n            case "water":\r\n                color = this.waterMonster.color;\r\n                break;\r\n            case "wind":\r\n                color = this.windMonster.color;\r\n                break;\r\n            case "earth":\r\n                color = this.earthMonster.color;\r\n                break;\r\n            default:\r\n                color = 0;\r\n          }\r\n        return color;\r\n    }\r\n}\n// CONCATENATED MODULE: ./src/app.js\n\r\n\r\nlet zoocontroller = new ZooController_ZooController();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')}]);